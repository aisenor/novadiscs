"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(globalThis["webpackChunk_ember_auto_import_"] = globalThis["webpackChunk_ember_auto_import_"] || []).push([["vendors-node_modules_ember-welcome-page_dist_components_welcome-page_js-node_modules_firebase-a18e3c"],{

/***/ "./node_modules/@firebase/storage/dist/index.esm2017.js":
/*!**************************************************************!*\
  !*** ./node_modules/@firebase/storage/dist/index.esm2017.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"StringFormat\": () => (/* binding */ StringFormat),\n/* harmony export */   \"_FbsBlob\": () => (/* binding */ FbsBlob),\n/* harmony export */   \"_Location\": () => (/* binding */ Location),\n/* harmony export */   \"_TaskEvent\": () => (/* binding */ TaskEvent),\n/* harmony export */   \"_TaskState\": () => (/* binding */ TaskState),\n/* harmony export */   \"_UploadTask\": () => (/* binding */ UploadTask),\n/* harmony export */   \"_dataFromString\": () => (/* binding */ dataFromString),\n/* harmony export */   \"_getChild\": () => (/* binding */ _getChild),\n/* harmony export */   \"_invalidArgument\": () => (/* binding */ invalidArgument),\n/* harmony export */   \"_invalidRootOperation\": () => (/* binding */ invalidRootOperation),\n/* harmony export */   \"connectStorageEmulator\": () => (/* binding */ connectStorageEmulator),\n/* harmony export */   \"deleteObject\": () => (/* binding */ deleteObject),\n/* harmony export */   \"getBlob\": () => (/* binding */ getBlob),\n/* harmony export */   \"getBytes\": () => (/* binding */ getBytes),\n/* harmony export */   \"getDownloadURL\": () => (/* binding */ getDownloadURL),\n/* harmony export */   \"getMetadata\": () => (/* binding */ getMetadata),\n/* harmony export */   \"getStorage\": () => (/* binding */ getStorage),\n/* harmony export */   \"getStream\": () => (/* binding */ getStream),\n/* harmony export */   \"list\": () => (/* binding */ list),\n/* harmony export */   \"listAll\": () => (/* binding */ listAll),\n/* harmony export */   \"ref\": () => (/* binding */ ref),\n/* harmony export */   \"updateMetadata\": () => (/* binding */ updateMetadata),\n/* harmony export */   \"uploadBytes\": () => (/* binding */ uploadBytes),\n/* harmony export */   \"uploadBytesResumable\": () => (/* binding */ uploadBytesResumable),\n/* harmony export */   \"uploadString\": () => (/* binding */ uploadString)\n/* harmony export */ });\n/* harmony import */ var _firebase_app__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @firebase/app */ \"./node_modules/@firebase/app/dist/esm/index.esm2017.js\");\n/* harmony import */ var _firebase_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @firebase/util */ \"./node_modules/@firebase/util/dist/index.esm2017.js\");\n/* harmony import */ var _firebase_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @firebase/component */ \"./node_modules/@firebase/component/dist/esm/index.esm2017.js\");\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * @fileoverview Constants used in the Firebase Storage library.\r\n */ /**\r\n * Domain name for firebase storage.\r\n */const DEFAULT_HOST='firebasestorage.googleapis.com';/**\r\n * The key in Firebase config json for the storage bucket.\r\n */const CONFIG_STORAGE_BUCKET_KEY='storageBucket';/**\r\n * 2 minutes\r\n *\r\n * The timeout for all operations except upload.\r\n */const DEFAULT_MAX_OPERATION_RETRY_TIME=2*60*1000;/**\r\n * 10 minutes\r\n *\r\n * The timeout for upload.\r\n */const DEFAULT_MAX_UPLOAD_RETRY_TIME=10*60*1000;/**\r\n * 1 second\r\n */const DEFAULT_MIN_SLEEP_TIME_MILLIS=1000;/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * An error returned by the Firebase Storage SDK.\r\n * @public\r\n */class StorageError extends _firebase_util__WEBPACK_IMPORTED_MODULE_1__.FirebaseError{/**\r\n     * @param code - A StorageErrorCode string to be prefixed with 'storage/' and\r\n     *  added to the end of the message.\r\n     * @param message  - Error message.\r\n     * @param status_ - Corresponding HTTP Status Code\r\n     */constructor(code,message){let status_=arguments.length>2&&arguments[2]!==undefined?arguments[2]:0;super(prependCode(code),`Firebase Storage: ${message} (${prependCode(code)})`);this.status_=status_;/**\r\n         * Stores custom error data unque to StorageError.\r\n         */this.customData={serverResponse:null};this._baseMessage=this.message;// Without this, `instanceof StorageError`, in tests for example,\n// returns false.\nObject.setPrototypeOf(this,StorageError.prototype);}get status(){return this.status_;}set status(status){this.status_=status;}/**\r\n     * Compares a StorageErrorCode against this error's code, filtering out the prefix.\r\n     */_codeEquals(code){return prependCode(code)===this.code;}/**\r\n     * Optional response message that was added by the server.\r\n     */get serverResponse(){return this.customData.serverResponse;}set serverResponse(serverResponse){this.customData.serverResponse=serverResponse;if(this.customData.serverResponse){this.message=`${this._baseMessage}\\n${this.customData.serverResponse}`;}else{this.message=this._baseMessage;}}}function prependCode(code){return'storage/'+code;}function unknown(){const message='An unknown error occurred, please check the error payload for '+'server response.';return new StorageError(\"unknown\"/* StorageErrorCode.UNKNOWN */,message);}function objectNotFound(path){return new StorageError(\"object-not-found\"/* StorageErrorCode.OBJECT_NOT_FOUND */,\"Object '\"+path+\"' does not exist.\");}function quotaExceeded(bucket){return new StorageError(\"quota-exceeded\"/* StorageErrorCode.QUOTA_EXCEEDED */,\"Quota for bucket '\"+bucket+\"' exceeded, please view quota on \"+'https://firebase.google.com/pricing/.');}function unauthenticated(){const message='User is not authenticated, please authenticate using Firebase '+'Authentication and try again.';return new StorageError(\"unauthenticated\"/* StorageErrorCode.UNAUTHENTICATED */,message);}function unauthorizedApp(){return new StorageError(\"unauthorized-app\"/* StorageErrorCode.UNAUTHORIZED_APP */,'This app does not have permission to access Firebase Storage on this project.');}function unauthorized(path){return new StorageError(\"unauthorized\"/* StorageErrorCode.UNAUTHORIZED */,\"User does not have permission to access '\"+path+\"'.\");}function retryLimitExceeded(){return new StorageError(\"retry-limit-exceeded\"/* StorageErrorCode.RETRY_LIMIT_EXCEEDED */,'Max retry time for operation exceeded, please try again.');}function canceled(){return new StorageError(\"canceled\"/* StorageErrorCode.CANCELED */,'User canceled the upload/download.');}function invalidUrl(url){return new StorageError(\"invalid-url\"/* StorageErrorCode.INVALID_URL */,\"Invalid URL '\"+url+\"'.\");}function invalidDefaultBucket(bucket){return new StorageError(\"invalid-default-bucket\"/* StorageErrorCode.INVALID_DEFAULT_BUCKET */,\"Invalid default bucket '\"+bucket+\"'.\");}function noDefaultBucket(){return new StorageError(\"no-default-bucket\"/* StorageErrorCode.NO_DEFAULT_BUCKET */,'No default bucket '+\"found. Did you set the '\"+CONFIG_STORAGE_BUCKET_KEY+\"' property when initializing the app?\");}function cannotSliceBlob(){return new StorageError(\"cannot-slice-blob\"/* StorageErrorCode.CANNOT_SLICE_BLOB */,'Cannot slice blob for upload. Please retry the upload.');}function serverFileWrongSize(){return new StorageError(\"server-file-wrong-size\"/* StorageErrorCode.SERVER_FILE_WRONG_SIZE */,'Server recorded incorrect upload file size, please retry the upload.');}function noDownloadURL(){return new StorageError(\"no-download-url\"/* StorageErrorCode.NO_DOWNLOAD_URL */,'The given file does not have any download URLs.');}function missingPolyFill(polyFill){return new StorageError(\"unsupported-environment\"/* StorageErrorCode.UNSUPPORTED_ENVIRONMENT */,`${polyFill} is missing. Make sure to install the required polyfills. See https://firebase.google.com/docs/web/environments-js-sdk#polyfills for more information.`);}/**\r\n * @internal\r\n */function invalidArgument(message){return new StorageError(\"invalid-argument\"/* StorageErrorCode.INVALID_ARGUMENT */,message);}function appDeleted(){return new StorageError(\"app-deleted\"/* StorageErrorCode.APP_DELETED */,'The Firebase app was deleted.');}/**\r\n * @param name - The name of the operation that was invalid.\r\n *\r\n * @internal\r\n */function invalidRootOperation(name){return new StorageError(\"invalid-root-operation\"/* StorageErrorCode.INVALID_ROOT_OPERATION */,\"The operation '\"+name+\"' cannot be performed on a root reference, create a non-root \"+\"reference using child, such as .child('file.png').\");}/**\r\n * @param format - The format that was not valid.\r\n * @param message - A message describing the format violation.\r\n */function invalidFormat(format,message){return new StorageError(\"invalid-format\"/* StorageErrorCode.INVALID_FORMAT */,\"String does not match format '\"+format+\"': \"+message);}/**\r\n * @param message - A message describing the internal error.\r\n */function internalError(message){throw new StorageError(\"internal-error\"/* StorageErrorCode.INTERNAL_ERROR */,'Internal error: '+message);}/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * Firebase Storage location data.\r\n *\r\n * @internal\r\n */class Location{constructor(bucket,path){this.bucket=bucket;this.path_=path;}get path(){return this.path_;}get isRoot(){return this.path.length===0;}fullServerUrl(){const encode=encodeURIComponent;return'/b/'+encode(this.bucket)+'/o/'+encode(this.path);}bucketOnlyServerUrl(){const encode=encodeURIComponent;return'/b/'+encode(this.bucket)+'/o';}static makeFromBucketSpec(bucketString,host){let bucketLocation;try{bucketLocation=Location.makeFromUrl(bucketString,host);}catch(e){// Not valid URL, use as-is. This lets you put bare bucket names in\n// config.\nreturn new Location(bucketString,'');}if(bucketLocation.path===''){return bucketLocation;}else{throw invalidDefaultBucket(bucketString);}}static makeFromUrl(url,host){let location=null;const bucketDomain='([A-Za-z0-9.\\\\-_]+)';function gsModify(loc){if(loc.path.charAt(loc.path.length-1)==='/'){loc.path_=loc.path_.slice(0,-1);}}const gsPath='(/(.*))?$';const gsRegex=new RegExp('^gs://'+bucketDomain+gsPath,'i');const gsIndices={bucket:1,path:3};function httpModify(loc){loc.path_=decodeURIComponent(loc.path);}const version='v[A-Za-z0-9_]+';const firebaseStorageHost=host.replace(/[.]/g,'\\\\.');const firebaseStoragePath='(/([^?#]*).*)?$';const firebaseStorageRegExp=new RegExp(`^https?://${firebaseStorageHost}/${version}/b/${bucketDomain}/o${firebaseStoragePath}`,'i');const firebaseStorageIndices={bucket:1,path:3};const cloudStorageHost=host===DEFAULT_HOST?'(?:storage.googleapis.com|storage.cloud.google.com)':host;const cloudStoragePath='([^?#]*)';const cloudStorageRegExp=new RegExp(`^https?://${cloudStorageHost}/${bucketDomain}/${cloudStoragePath}`,'i');const cloudStorageIndices={bucket:1,path:2};const groups=[{regex:gsRegex,indices:gsIndices,postModify:gsModify},{regex:firebaseStorageRegExp,indices:firebaseStorageIndices,postModify:httpModify},{regex:cloudStorageRegExp,indices:cloudStorageIndices,postModify:httpModify}];for(let i=0;i<groups.length;i++){const group=groups[i];const captures=group.regex.exec(url);if(captures){const bucketValue=captures[group.indices.bucket];let pathValue=captures[group.indices.path];if(!pathValue){pathValue='';}location=new Location(bucketValue,pathValue);group.postModify(location);break;}}if(location==null){throw invalidUrl(url);}return location;}}/**\r\n * A request whose promise always fails.\r\n */class FailRequest{constructor(error){this.promise_=Promise.reject(error);}/** @inheritDoc */getPromise(){return this.promise_;}/** @inheritDoc */cancel(){let _appDelete=arguments.length>0&&arguments[0]!==undefined?arguments[0]:false;}}/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * Accepts a callback for an action to perform (`doRequest`),\r\n * and then a callback for when the backoff has completed (`backoffCompleteCb`).\r\n * The callback sent to start requires an argument to call (`onRequestComplete`).\r\n * When `start` calls `doRequest`, it passes a callback for when the request has\r\n * completed, `onRequestComplete`. Based on this, the backoff continues, with\r\n * another call to `doRequest` and the above loop continues until the timeout\r\n * is hit, or a successful response occurs.\r\n * @description\r\n * @param doRequest Callback to perform request\r\n * @param backoffCompleteCb Callback to call when backoff has been completed\r\n */function start(doRequest,// eslint-disable-next-line @typescript-eslint/no-explicit-any\nbackoffCompleteCb,timeout){// TODO(andysoto): make this code cleaner (probably refactor into an actual\n// type instead of a bunch of functions with state shared in the closure)\nlet waitSeconds=1;// Would type this as \"number\" but that doesn't work for Node so ¯\\_(ツ)_/¯\n// TODO: find a way to exclude Node type definition for storage because storage only works in browser\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nlet retryTimeoutId=null;// eslint-disable-next-line @typescript-eslint/no-explicit-any\nlet globalTimeoutId=null;let hitTimeout=false;let cancelState=0;function canceled(){return cancelState===2;}let triggeredCallback=false;function triggerCallback(){if(!triggeredCallback){triggeredCallback=true;for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}backoffCompleteCb.apply(null,args);}}function callWithDelay(millis){retryTimeoutId=setTimeout(()=>{retryTimeoutId=null;doRequest(responseHandler,canceled());},millis);}function clearGlobalTimeout(){if(globalTimeoutId){clearTimeout(globalTimeoutId);}}function responseHandler(success){if(triggeredCallback){clearGlobalTimeout();return;}for(var _len2=arguments.length,args=new Array(_len2>1?_len2-1:0),_key2=1;_key2<_len2;_key2++){args[_key2-1]=arguments[_key2];}if(success){clearGlobalTimeout();triggerCallback.call(null,success,...args);return;}const mustStop=canceled()||hitTimeout;if(mustStop){clearGlobalTimeout();triggerCallback.call(null,success,...args);return;}if(waitSeconds<64){/* TODO(andysoto): don't back off so quickly if we know we're offline. */waitSeconds*=2;}let waitMillis;if(cancelState===1){cancelState=2;waitMillis=0;}else{waitMillis=(waitSeconds+Math.random())*1000;}callWithDelay(waitMillis);}let stopped=false;function stop(wasTimeout){if(stopped){return;}stopped=true;clearGlobalTimeout();if(triggeredCallback){return;}if(retryTimeoutId!==null){if(!wasTimeout){cancelState=2;}clearTimeout(retryTimeoutId);callWithDelay(0);}else{if(!wasTimeout){cancelState=1;}}}callWithDelay(0);globalTimeoutId=setTimeout(()=>{hitTimeout=true;stop(true);},timeout);return stop;}/**\r\n * Stops the retry loop from repeating.\r\n * If the function is currently \"in between\" retries, it is invoked immediately\r\n * with the second parameter as \"true\". Otherwise, it will be invoked once more\r\n * after the current invocation finishes iff the current invocation would have\r\n * triggered another retry.\r\n */function stop(id){id(false);}/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */function isJustDef(p){return p!==void 0;}// eslint-disable-next-line @typescript-eslint/ban-types\nfunction isFunction(p){return typeof p==='function';}function isNonArrayObject(p){return typeof p==='object'&&!Array.isArray(p);}function isString(p){return typeof p==='string'||p instanceof String;}function isNativeBlob(p){return isNativeBlobDefined()&&p instanceof Blob;}function isNativeBlobDefined(){// Note: The `isNode()` check can be removed when `node-fetch` adds native Blob support\n// PR: https://github.com/node-fetch/node-fetch/pull/1664\nreturn typeof Blob!=='undefined'&&!(0,_firebase_util__WEBPACK_IMPORTED_MODULE_1__.isNode)();}function validateNumber(argument,minValue,maxValue,value){if(value<minValue){throw invalidArgument(`Invalid value for '${argument}'. Expected ${minValue} or greater.`);}if(value>maxValue){throw invalidArgument(`Invalid value for '${argument}'. Expected ${maxValue} or less.`);}}/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */function makeUrl(urlPart,host,protocol){let origin=host;if(protocol==null){origin=`https://${host}`;}return`${protocol}://${origin}/v0${urlPart}`;}function makeQueryString(params){const encode=encodeURIComponent;let queryPart='?';for(const key in params){if(params.hasOwnProperty(key)){const nextPart=encode(key)+'='+encode(params[key]);queryPart=queryPart+nextPart+'&';}}// Chop off the extra '&' or '?' on the end\nqueryPart=queryPart.slice(0,-1);return queryPart;}/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * Error codes for requests made by the the XhrIo wrapper.\r\n */var ErrorCode;(function(ErrorCode){ErrorCode[ErrorCode[\"NO_ERROR\"]=0]=\"NO_ERROR\";ErrorCode[ErrorCode[\"NETWORK_ERROR\"]=1]=\"NETWORK_ERROR\";ErrorCode[ErrorCode[\"ABORT\"]=2]=\"ABORT\";})(ErrorCode||(ErrorCode={}));/**\r\n * @license\r\n * Copyright 2022 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * Checks the status code to see if the action should be retried.\r\n *\r\n * @param status Current HTTP status code returned by server.\r\n * @param additionalRetryCodes additional retry codes to check against\r\n */function isRetryStatusCode(status,additionalRetryCodes){// The codes for which to retry came from this page:\n// https://cloud.google.com/storage/docs/exponential-backoff\nconst isFiveHundredCode=status>=500&&status<600;const extraRetryCodes=[// Request Timeout: web server didn't receive full request in time.\n408,// Too Many Requests: you're getting rate-limited, basically.\n429];const isExtraRetryCode=extraRetryCodes.indexOf(status)!==-1;const isAdditionalRetryCode=additionalRetryCodes.indexOf(status)!==-1;return isFiveHundredCode||isExtraRetryCode||isAdditionalRetryCode;}/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * Handles network logic for all Storage Requests, including error reporting and\r\n * retries with backoff.\r\n *\r\n * @param I - the type of the backend's network response.\r\n * @param - O the output type used by the rest of the SDK. The conversion\r\n * happens in the specified `callback_`.\r\n */class NetworkRequest{constructor(url_,method_,headers_,body_,successCodes_,additionalRetryCodes_,callback_,errorCallback_,timeout_,progressCallback_,connectionFactory_){let retry=arguments.length>11&&arguments[11]!==undefined?arguments[11]:true;this.url_=url_;this.method_=method_;this.headers_=headers_;this.body_=body_;this.successCodes_=successCodes_;this.additionalRetryCodes_=additionalRetryCodes_;this.callback_=callback_;this.errorCallback_=errorCallback_;this.timeout_=timeout_;this.progressCallback_=progressCallback_;this.connectionFactory_=connectionFactory_;this.retry=retry;this.pendingConnection_=null;this.backoffId_=null;this.canceled_=false;this.appDelete_=false;this.promise_=new Promise((resolve,reject)=>{this.resolve_=resolve;this.reject_=reject;this.start_();});}/**\r\n     * Actually starts the retry loop.\r\n     */start_(){const doTheRequest=(backoffCallback,canceled)=>{if(canceled){backoffCallback(false,new RequestEndStatus(false,null,true));return;}const connection=this.connectionFactory_();this.pendingConnection_=connection;const progressListener=progressEvent=>{const loaded=progressEvent.loaded;const total=progressEvent.lengthComputable?progressEvent.total:-1;if(this.progressCallback_!==null){this.progressCallback_(loaded,total);}};if(this.progressCallback_!==null){connection.addUploadProgressListener(progressListener);}// connection.send() never rejects, so we don't need to have a error handler or use catch on the returned promise.\n// eslint-disable-next-line @typescript-eslint/no-floating-promises\nconnection.send(this.url_,this.method_,this.body_,this.headers_).then(()=>{if(this.progressCallback_!==null){connection.removeUploadProgressListener(progressListener);}this.pendingConnection_=null;const hitServer=connection.getErrorCode()===ErrorCode.NO_ERROR;const status=connection.getStatus();if((!hitServer||isRetryStatusCode(status,this.additionalRetryCodes_))&&this.retry){const wasCanceled=connection.getErrorCode()===ErrorCode.ABORT;backoffCallback(false,new RequestEndStatus(false,null,wasCanceled));return;}const successCode=this.successCodes_.indexOf(status)!==-1;backoffCallback(true,new RequestEndStatus(successCode,connection));});};/**\r\n         * @param requestWentThrough - True if the request eventually went\r\n         *     through, false if it hit the retry limit or was canceled.\r\n         */const backoffDone=(requestWentThrough,status)=>{const resolve=this.resolve_;const reject=this.reject_;const connection=status.connection;if(status.wasSuccessCode){try{const result=this.callback_(connection,connection.getResponse());if(isJustDef(result)){resolve(result);}else{resolve();}}catch(e){reject(e);}}else{if(connection!==null){const err=unknown();err.serverResponse=connection.getErrorText();if(this.errorCallback_){reject(this.errorCallback_(connection,err));}else{reject(err);}}else{if(status.canceled){const err=this.appDelete_?appDeleted():canceled();reject(err);}else{const err=retryLimitExceeded();reject(err);}}}};if(this.canceled_){backoffDone(false,new RequestEndStatus(false,null,true));}else{this.backoffId_=start(doTheRequest,backoffDone,this.timeout_);}}/** @inheritDoc */getPromise(){return this.promise_;}/** @inheritDoc */cancel(appDelete){this.canceled_=true;this.appDelete_=appDelete||false;if(this.backoffId_!==null){stop(this.backoffId_);}if(this.pendingConnection_!==null){this.pendingConnection_.abort();}}}/**\r\n * A collection of information about the result of a network request.\r\n * @param opt_canceled - Defaults to false.\r\n */class RequestEndStatus{constructor(wasSuccessCode,connection,canceled){this.wasSuccessCode=wasSuccessCode;this.connection=connection;this.canceled=!!canceled;}}function addAuthHeader_(headers,authToken){if(authToken!==null&&authToken.length>0){headers['Authorization']='Firebase '+authToken;}}function addVersionHeader_(headers,firebaseVersion){headers['X-Firebase-Storage-Version']='webjs/'+(firebaseVersion!==null&&firebaseVersion!==void 0?firebaseVersion:'AppManager');}function addGmpidHeader_(headers,appId){if(appId){headers['X-Firebase-GMPID']=appId;}}function addAppCheckHeader_(headers,appCheckToken){if(appCheckToken!==null){headers['X-Firebase-AppCheck']=appCheckToken;}}function makeRequest(requestInfo,appId,authToken,appCheckToken,requestFactory,firebaseVersion){let retry=arguments.length>6&&arguments[6]!==undefined?arguments[6]:true;const queryPart=makeQueryString(requestInfo.urlParams);const url=requestInfo.url+queryPart;const headers=Object.assign({},requestInfo.headers);addGmpidHeader_(headers,appId);addAuthHeader_(headers,authToken);addVersionHeader_(headers,firebaseVersion);addAppCheckHeader_(headers,appCheckToken);return new NetworkRequest(url,requestInfo.method,headers,requestInfo.body,requestInfo.successCodes,requestInfo.additionalRetryCodes,requestInfo.handler,requestInfo.errorHandler,requestInfo.timeout,requestInfo.progressCallback,requestFactory,retry);}/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */function getBlobBuilder(){if(typeof BlobBuilder!=='undefined'){return BlobBuilder;}else if(typeof WebKitBlobBuilder!=='undefined'){return WebKitBlobBuilder;}else{return undefined;}}/**\r\n * Concatenates one or more values together and converts them to a Blob.\r\n *\r\n * @param args The values that will make up the resulting blob.\r\n * @return The blob.\r\n */function getBlob$1(){const BlobBuilder=getBlobBuilder();for(var _len3=arguments.length,args=new Array(_len3),_key3=0;_key3<_len3;_key3++){args[_key3]=arguments[_key3];}if(BlobBuilder!==undefined){const bb=new BlobBuilder();for(let i=0;i<args.length;i++){bb.append(args[i]);}return bb.getBlob();}else{if(isNativeBlobDefined()){return new Blob(args);}else{throw new StorageError(\"unsupported-environment\"/* StorageErrorCode.UNSUPPORTED_ENVIRONMENT */,\"This browser doesn't seem to support creating Blobs\");}}}/**\r\n * Slices the blob. The returned blob contains data from the start byte\r\n * (inclusive) till the end byte (exclusive). Negative indices cannot be used.\r\n *\r\n * @param blob The blob to be sliced.\r\n * @param start Index of the starting byte.\r\n * @param end Index of the ending byte.\r\n * @return The blob slice or null if not supported.\r\n */function sliceBlob(blob,start,end){if(blob.webkitSlice){return blob.webkitSlice(start,end);}else if(blob.mozSlice){return blob.mozSlice(start,end);}else if(blob.slice){return blob.slice(start,end);}return null;}/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /** Converts a Base64 encoded string to a binary string. */function decodeBase64(encoded){if(typeof atob==='undefined'){throw missingPolyFill('base-64');}return atob(encoded);}/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * An enumeration of the possible string formats for upload.\r\n * @public\r\n */const StringFormat={/**\r\n     * Indicates the string should be interpreted \"raw\", that is, as normal text.\r\n     * The string will be interpreted as UTF-16, then uploaded as a UTF-8 byte\r\n     * sequence.\r\n     * Example: The string 'Hello! \\\\ud83d\\\\ude0a' becomes the byte sequence\r\n     * 48 65 6c 6c 6f 21 20 f0 9f 98 8a\r\n     */RAW:'raw',/**\r\n     * Indicates the string should be interpreted as base64-encoded data.\r\n     * Padding characters (trailing '='s) are optional.\r\n     * Example: The string 'rWmO++E6t7/rlw==' becomes the byte sequence\r\n     * ad 69 8e fb e1 3a b7 bf eb 97\r\n     */BASE64:'base64',/**\r\n     * Indicates the string should be interpreted as base64url-encoded data.\r\n     * Padding characters (trailing '='s) are optional.\r\n     * Example: The string 'rWmO--E6t7_rlw==' becomes the byte sequence\r\n     * ad 69 8e fb e1 3a b7 bf eb 97\r\n     */BASE64URL:'base64url',/**\r\n     * Indicates the string is a data URL, such as one obtained from\r\n     * canvas.toDataURL().\r\n     * Example: the string 'data:application/octet-stream;base64,aaaa'\r\n     * becomes the byte sequence\r\n     * 69 a6 9a\r\n     * (the content-type \"application/octet-stream\" is also applied, but can\r\n     * be overridden in the metadata object).\r\n     */DATA_URL:'data_url'};class StringData{constructor(data,contentType){this.data=data;this.contentType=contentType||null;}}/**\r\n * @internal\r\n */function dataFromString(format,stringData){switch(format){case StringFormat.RAW:return new StringData(utf8Bytes_(stringData));case StringFormat.BASE64:case StringFormat.BASE64URL:return new StringData(base64Bytes_(format,stringData));case StringFormat.DATA_URL:return new StringData(dataURLBytes_(stringData),dataURLContentType_(stringData));// do nothing\n}// assert(false);\nthrow unknown();}function utf8Bytes_(value){const b=[];for(let i=0;i<value.length;i++){let c=value.charCodeAt(i);if(c<=127){b.push(c);}else{if(c<=2047){b.push(192|c>>6,128|c&63);}else{if((c&64512)===55296){// The start of a surrogate pair.\nconst valid=i<value.length-1&&(value.charCodeAt(i+1)&64512)===56320;if(!valid){// The second surrogate wasn't there.\nb.push(239,191,189);}else{const hi=c;const lo=value.charCodeAt(++i);c=65536|(hi&1023)<<10|lo&1023;b.push(240|c>>18,128|c>>12&63,128|c>>6&63,128|c&63);}}else{if((c&64512)===56320){// Invalid low surrogate.\nb.push(239,191,189);}else{b.push(224|c>>12,128|c>>6&63,128|c&63);}}}}}return new Uint8Array(b);}function percentEncodedBytes_(value){let decoded;try{decoded=decodeURIComponent(value);}catch(e){throw invalidFormat(StringFormat.DATA_URL,'Malformed data URL.');}return utf8Bytes_(decoded);}function base64Bytes_(format,value){switch(format){case StringFormat.BASE64:{const hasMinus=value.indexOf('-')!==-1;const hasUnder=value.indexOf('_')!==-1;if(hasMinus||hasUnder){const invalidChar=hasMinus?'-':'_';throw invalidFormat(format,\"Invalid character '\"+invalidChar+\"' found: is it base64url encoded?\");}break;}case StringFormat.BASE64URL:{const hasPlus=value.indexOf('+')!==-1;const hasSlash=value.indexOf('/')!==-1;if(hasPlus||hasSlash){const invalidChar=hasPlus?'+':'/';throw invalidFormat(format,\"Invalid character '\"+invalidChar+\"' found: is it base64 encoded?\");}value=value.replace(/-/g,'+').replace(/_/g,'/');break;}// do nothing\n}let bytes;try{bytes=decodeBase64(value);}catch(e){if(e.message.includes('polyfill')){throw e;}throw invalidFormat(format,'Invalid character found');}const array=new Uint8Array(bytes.length);for(let i=0;i<bytes.length;i++){array[i]=bytes.charCodeAt(i);}return array;}class DataURLParts{constructor(dataURL){this.base64=false;this.contentType=null;const matches=dataURL.match(/^data:([^,]+)?,/);if(matches===null){throw invalidFormat(StringFormat.DATA_URL,\"Must be formatted 'data:[<mediatype>][;base64],<data>\");}const middle=matches[1]||null;if(middle!=null){this.base64=endsWith(middle,';base64');this.contentType=this.base64?middle.substring(0,middle.length-';base64'.length):middle;}this.rest=dataURL.substring(dataURL.indexOf(',')+1);}}function dataURLBytes_(dataUrl){const parts=new DataURLParts(dataUrl);if(parts.base64){return base64Bytes_(StringFormat.BASE64,parts.rest);}else{return percentEncodedBytes_(parts.rest);}}function dataURLContentType_(dataUrl){const parts=new DataURLParts(dataUrl);return parts.contentType;}function endsWith(s,end){const longEnough=s.length>=end.length;if(!longEnough){return false;}return s.substring(s.length-end.length)===end;}/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * @param opt_elideCopy - If true, doesn't copy mutable input data\r\n *     (e.g. Uint8Arrays). Pass true only if you know the objects will not be\r\n *     modified after this blob's construction.\r\n *\r\n * @internal\r\n */class FbsBlob{constructor(data,elideCopy){let size=0;let blobType='';if(isNativeBlob(data)){this.data_=data;size=data.size;blobType=data.type;}else if(data instanceof ArrayBuffer){if(elideCopy){this.data_=new Uint8Array(data);}else{this.data_=new Uint8Array(data.byteLength);this.data_.set(new Uint8Array(data));}size=this.data_.length;}else if(data instanceof Uint8Array){if(elideCopy){this.data_=data;}else{this.data_=new Uint8Array(data.length);this.data_.set(data);}size=data.length;}this.size_=size;this.type_=blobType;}size(){return this.size_;}type(){return this.type_;}slice(startByte,endByte){if(isNativeBlob(this.data_)){const realBlob=this.data_;const sliced=sliceBlob(realBlob,startByte,endByte);if(sliced===null){return null;}return new FbsBlob(sliced);}else{const slice=new Uint8Array(this.data_.buffer,startByte,endByte-startByte);return new FbsBlob(slice,true);}}static getBlob(){for(var _len4=arguments.length,args=new Array(_len4),_key4=0;_key4<_len4;_key4++){args[_key4]=arguments[_key4];}if(isNativeBlobDefined()){const blobby=args.map(val=>{if(val instanceof FbsBlob){return val.data_;}else{return val;}});return new FbsBlob(getBlob$1.apply(null,blobby));}else{const uint8Arrays=args.map(val=>{if(isString(val)){return dataFromString(StringFormat.RAW,val).data;}else{// Blobs don't exist, so this has to be a Uint8Array.\nreturn val.data_;}});let finalLength=0;uint8Arrays.forEach(array=>{finalLength+=array.byteLength;});const merged=new Uint8Array(finalLength);let index=0;uint8Arrays.forEach(array=>{for(let i=0;i<array.length;i++){merged[index++]=array[i];}});return new FbsBlob(merged,true);}}uploadData(){return this.data_;}}/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * Returns the Object resulting from parsing the given JSON, or null if the\r\n * given string does not represent a JSON object.\r\n */function jsonObjectOrNull(s){let obj;try{obj=JSON.parse(s);}catch(e){return null;}if(isNonArrayObject(obj)){return obj;}else{return null;}}/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * @fileoverview Contains helper methods for manipulating paths.\r\n */ /**\r\n * @return Null if the path is already at the root.\r\n */function parent(path){if(path.length===0){return null;}const index=path.lastIndexOf('/');if(index===-1){return'';}const newPath=path.slice(0,index);return newPath;}function child(path,childPath){const canonicalChildPath=childPath.split('/').filter(component=>component.length>0).join('/');if(path.length===0){return canonicalChildPath;}else{return path+'/'+canonicalChildPath;}}/**\r\n * Returns the last component of a path.\r\n * '/foo/bar' -> 'bar'\r\n * '/foo/bar/baz/' -> 'baz/'\r\n * '/a' -> 'a'\r\n */function lastComponent(path){const index=path.lastIndexOf('/',path.length-2);if(index===-1){return path;}else{return path.slice(index+1);}}/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */function noXform_(metadata,value){return value;}class Mapping{constructor(server,local,writable,xform){this.server=server;this.local=local||server;this.writable=!!writable;this.xform=xform||noXform_;}}let mappings_=null;function xformPath(fullPath){if(!isString(fullPath)||fullPath.length<2){return fullPath;}else{return lastComponent(fullPath);}}function getMappings(){if(mappings_){return mappings_;}const mappings=[];mappings.push(new Mapping('bucket'));mappings.push(new Mapping('generation'));mappings.push(new Mapping('metageneration'));mappings.push(new Mapping('name','fullPath',true));function mappingsXformPath(_metadata,fullPath){return xformPath(fullPath);}const nameMapping=new Mapping('name');nameMapping.xform=mappingsXformPath;mappings.push(nameMapping);/**\r\n     * Coerces the second param to a number, if it is defined.\r\n     */function xformSize(_metadata,size){if(size!==undefined){return Number(size);}else{return size;}}const sizeMapping=new Mapping('size');sizeMapping.xform=xformSize;mappings.push(sizeMapping);mappings.push(new Mapping('timeCreated'));mappings.push(new Mapping('updated'));mappings.push(new Mapping('md5Hash',null,true));mappings.push(new Mapping('cacheControl',null,true));mappings.push(new Mapping('contentDisposition',null,true));mappings.push(new Mapping('contentEncoding',null,true));mappings.push(new Mapping('contentLanguage',null,true));mappings.push(new Mapping('contentType',null,true));mappings.push(new Mapping('metadata','customMetadata',true));mappings_=mappings;return mappings_;}function addRef(metadata,service){function generateRef(){const bucket=metadata['bucket'];const path=metadata['fullPath'];const loc=new Location(bucket,path);return service._makeStorageReference(loc);}Object.defineProperty(metadata,'ref',{get:generateRef});}function fromResource(service,resource,mappings){const metadata={};metadata['type']='file';const len=mappings.length;for(let i=0;i<len;i++){const mapping=mappings[i];metadata[mapping.local]=mapping.xform(metadata,resource[mapping.server]);}addRef(metadata,service);return metadata;}function fromResourceString(service,resourceString,mappings){const obj=jsonObjectOrNull(resourceString);if(obj===null){return null;}const resource=obj;return fromResource(service,resource,mappings);}function downloadUrlFromResourceString(metadata,resourceString,host,protocol){const obj=jsonObjectOrNull(resourceString);if(obj===null){return null;}if(!isString(obj['downloadTokens'])){// This can happen if objects are uploaded through GCS and retrieved\n// through list, so we don't want to throw an Error.\nreturn null;}const tokens=obj['downloadTokens'];if(tokens.length===0){return null;}const encode=encodeURIComponent;const tokensList=tokens.split(',');const urls=tokensList.map(token=>{const bucket=metadata['bucket'];const path=metadata['fullPath'];const urlPart='/b/'+encode(bucket)+'/o/'+encode(path);const base=makeUrl(urlPart,host,protocol);const queryString=makeQueryString({alt:'media',token});return base+queryString;});return urls[0];}function toResourceString(metadata,mappings){const resource={};const len=mappings.length;for(let i=0;i<len;i++){const mapping=mappings[i];if(mapping.writable){resource[mapping.server]=metadata[mapping.local];}}return JSON.stringify(resource);}/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */const PREFIXES_KEY='prefixes';const ITEMS_KEY='items';function fromBackendResponse(service,bucket,resource){const listResult={prefixes:[],items:[],nextPageToken:resource['nextPageToken']};if(resource[PREFIXES_KEY]){for(const path of resource[PREFIXES_KEY]){const pathWithoutTrailingSlash=path.replace(/\\/$/,'');const reference=service._makeStorageReference(new Location(bucket,pathWithoutTrailingSlash));listResult.prefixes.push(reference);}}if(resource[ITEMS_KEY]){for(const item of resource[ITEMS_KEY]){const reference=service._makeStorageReference(new Location(bucket,item['name']));listResult.items.push(reference);}}return listResult;}function fromResponseString(service,bucket,resourceString){const obj=jsonObjectOrNull(resourceString);if(obj===null){return null;}const resource=obj;return fromBackendResponse(service,bucket,resource);}/**\r\n * Contains a fully specified request.\r\n *\r\n * @param I - the type of the backend's network response.\r\n * @param O - the output response type used by the rest of the SDK.\r\n */class RequestInfo{constructor(url,method,/**\r\n     * Returns the value with which to resolve the request's promise. Only called\r\n     * if the request is successful. Throw from this function to reject the\r\n     * returned Request's promise with the thrown error.\r\n     * Note: The XhrIo passed to this function may be reused after this callback\r\n     * returns. Do not keep a reference to it in any way.\r\n     */handler,timeout){this.url=url;this.method=method;this.handler=handler;this.timeout=timeout;this.urlParams={};this.headers={};this.body=null;this.errorHandler=null;/**\r\n         * Called with the current number of bytes uploaded and total size (-1 if not\r\n         * computable) of the request body (i.e. used to report upload progress).\r\n         */this.progressCallback=null;this.successCodes=[200];this.additionalRetryCodes=[];}}/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * Throws the UNKNOWN StorageError if cndn is false.\r\n */function handlerCheck(cndn){if(!cndn){throw unknown();}}function metadataHandler(service,mappings){function handler(xhr,text){const metadata=fromResourceString(service,text,mappings);handlerCheck(metadata!==null);return metadata;}return handler;}function listHandler(service,bucket){function handler(xhr,text){const listResult=fromResponseString(service,bucket,text);handlerCheck(listResult!==null);return listResult;}return handler;}function downloadUrlHandler(service,mappings){function handler(xhr,text){const metadata=fromResourceString(service,text,mappings);handlerCheck(metadata!==null);return downloadUrlFromResourceString(metadata,text,service.host,service._protocol);}return handler;}function sharedErrorHandler(location){function errorHandler(xhr,err){let newErr;if(xhr.getStatus()===401){if(// This exact message string is the only consistent part of the\n// server's error response that identifies it as an App Check error.\nxhr.getErrorText().includes('Firebase App Check token is invalid')){newErr=unauthorizedApp();}else{newErr=unauthenticated();}}else{if(xhr.getStatus()===402){newErr=quotaExceeded(location.bucket);}else{if(xhr.getStatus()===403){newErr=unauthorized(location.path);}else{newErr=err;}}}newErr.status=xhr.getStatus();newErr.serverResponse=err.serverResponse;return newErr;}return errorHandler;}function objectErrorHandler(location){const shared=sharedErrorHandler(location);function errorHandler(xhr,err){let newErr=shared(xhr,err);if(xhr.getStatus()===404){newErr=objectNotFound(location.path);}newErr.serverResponse=err.serverResponse;return newErr;}return errorHandler;}function getMetadata$2(service,location,mappings){const urlPart=location.fullServerUrl();const url=makeUrl(urlPart,service.host,service._protocol);const method='GET';const timeout=service.maxOperationRetryTime;const requestInfo=new RequestInfo(url,method,metadataHandler(service,mappings),timeout);requestInfo.errorHandler=objectErrorHandler(location);return requestInfo;}function list$2(service,location,delimiter,pageToken,maxResults){const urlParams={};if(location.isRoot){urlParams['prefix']='';}else{urlParams['prefix']=location.path+'/';}if(delimiter&&delimiter.length>0){urlParams['delimiter']=delimiter;}if(pageToken){urlParams['pageToken']=pageToken;}if(maxResults){urlParams['maxResults']=maxResults;}const urlPart=location.bucketOnlyServerUrl();const url=makeUrl(urlPart,service.host,service._protocol);const method='GET';const timeout=service.maxOperationRetryTime;const requestInfo=new RequestInfo(url,method,listHandler(service,location.bucket),timeout);requestInfo.urlParams=urlParams;requestInfo.errorHandler=sharedErrorHandler(location);return requestInfo;}function getBytes$1(service,location,maxDownloadSizeBytes){const urlPart=location.fullServerUrl();const url=makeUrl(urlPart,service.host,service._protocol)+'?alt=media';const method='GET';const timeout=service.maxOperationRetryTime;const requestInfo=new RequestInfo(url,method,(_,data)=>data,timeout);requestInfo.errorHandler=objectErrorHandler(location);if(maxDownloadSizeBytes!==undefined){requestInfo.headers['Range']=`bytes=0-${maxDownloadSizeBytes}`;requestInfo.successCodes=[200/* OK */,206/* Partial Content */];}return requestInfo;}function getDownloadUrl(service,location,mappings){const urlPart=location.fullServerUrl();const url=makeUrl(urlPart,service.host,service._protocol);const method='GET';const timeout=service.maxOperationRetryTime;const requestInfo=new RequestInfo(url,method,downloadUrlHandler(service,mappings),timeout);requestInfo.errorHandler=objectErrorHandler(location);return requestInfo;}function updateMetadata$2(service,location,metadata,mappings){const urlPart=location.fullServerUrl();const url=makeUrl(urlPart,service.host,service._protocol);const method='PATCH';const body=toResourceString(metadata,mappings);const headers={'Content-Type':'application/json; charset=utf-8'};const timeout=service.maxOperationRetryTime;const requestInfo=new RequestInfo(url,method,metadataHandler(service,mappings),timeout);requestInfo.headers=headers;requestInfo.body=body;requestInfo.errorHandler=objectErrorHandler(location);return requestInfo;}function deleteObject$2(service,location){const urlPart=location.fullServerUrl();const url=makeUrl(urlPart,service.host,service._protocol);const method='DELETE';const timeout=service.maxOperationRetryTime;function handler(_xhr,_text){}const requestInfo=new RequestInfo(url,method,handler,timeout);requestInfo.successCodes=[200,204];requestInfo.errorHandler=objectErrorHandler(location);return requestInfo;}function determineContentType_(metadata,blob){return metadata&&metadata['contentType']||blob&&blob.type()||'application/octet-stream';}function metadataForUpload_(location,blob,metadata){const metadataClone=Object.assign({},metadata);metadataClone['fullPath']=location.path;metadataClone['size']=blob.size();if(!metadataClone['contentType']){metadataClone['contentType']=determineContentType_(null,blob);}return metadataClone;}/**\r\n * Prepare RequestInfo for uploads as Content-Type: multipart.\r\n */function multipartUpload(service,location,mappings,blob,metadata){const urlPart=location.bucketOnlyServerUrl();const headers={'X-Goog-Upload-Protocol':'multipart'};function genBoundary(){let str='';for(let i=0;i<2;i++){str=str+Math.random().toString().slice(2);}return str;}const boundary=genBoundary();headers['Content-Type']='multipart/related; boundary='+boundary;const metadata_=metadataForUpload_(location,blob,metadata);const metadataString=toResourceString(metadata_,mappings);const preBlobPart='--'+boundary+'\\r\\n'+'Content-Type: application/json; charset=utf-8\\r\\n\\r\\n'+metadataString+'\\r\\n--'+boundary+'\\r\\n'+'Content-Type: '+metadata_['contentType']+'\\r\\n\\r\\n';const postBlobPart='\\r\\n--'+boundary+'--';const body=FbsBlob.getBlob(preBlobPart,blob,postBlobPart);if(body===null){throw cannotSliceBlob();}const urlParams={name:metadata_['fullPath']};const url=makeUrl(urlPart,service.host,service._protocol);const method='POST';const timeout=service.maxUploadRetryTime;const requestInfo=new RequestInfo(url,method,metadataHandler(service,mappings),timeout);requestInfo.urlParams=urlParams;requestInfo.headers=headers;requestInfo.body=body.uploadData();requestInfo.errorHandler=sharedErrorHandler(location);return requestInfo;}/**\r\n * @param current The number of bytes that have been uploaded so far.\r\n * @param total The total number of bytes in the upload.\r\n * @param opt_finalized True if the server has finished the upload.\r\n * @param opt_metadata The upload metadata, should\r\n *     only be passed if opt_finalized is true.\r\n */class ResumableUploadStatus{constructor(current,total,finalized,metadata){this.current=current;this.total=total;this.finalized=!!finalized;this.metadata=metadata||null;}}function checkResumeHeader_(xhr,allowed){let status=null;try{status=xhr.getResponseHeader('X-Goog-Upload-Status');}catch(e){handlerCheck(false);}const allowedStatus=allowed||['active'];handlerCheck(!!status&&allowedStatus.indexOf(status)!==-1);return status;}function createResumableUpload(service,location,mappings,blob,metadata){const urlPart=location.bucketOnlyServerUrl();const metadataForUpload=metadataForUpload_(location,blob,metadata);const urlParams={name:metadataForUpload['fullPath']};const url=makeUrl(urlPart,service.host,service._protocol);const method='POST';const headers={'X-Goog-Upload-Protocol':'resumable','X-Goog-Upload-Command':'start','X-Goog-Upload-Header-Content-Length':`${blob.size()}`,'X-Goog-Upload-Header-Content-Type':metadataForUpload['contentType'],'Content-Type':'application/json; charset=utf-8'};const body=toResourceString(metadataForUpload,mappings);const timeout=service.maxUploadRetryTime;function handler(xhr){checkResumeHeader_(xhr);let url;try{url=xhr.getResponseHeader('X-Goog-Upload-URL');}catch(e){handlerCheck(false);}handlerCheck(isString(url));return url;}const requestInfo=new RequestInfo(url,method,handler,timeout);requestInfo.urlParams=urlParams;requestInfo.headers=headers;requestInfo.body=body;requestInfo.errorHandler=sharedErrorHandler(location);return requestInfo;}/**\r\n * @param url From a call to fbs.requests.createResumableUpload.\r\n */function getResumableUploadStatus(service,location,url,blob){const headers={'X-Goog-Upload-Command':'query'};function handler(xhr){const status=checkResumeHeader_(xhr,['active','final']);let sizeString=null;try{sizeString=xhr.getResponseHeader('X-Goog-Upload-Size-Received');}catch(e){handlerCheck(false);}if(!sizeString){// null or empty string\nhandlerCheck(false);}const size=Number(sizeString);handlerCheck(!isNaN(size));return new ResumableUploadStatus(size,blob.size(),status==='final');}const method='POST';const timeout=service.maxUploadRetryTime;const requestInfo=new RequestInfo(url,method,handler,timeout);requestInfo.headers=headers;requestInfo.errorHandler=sharedErrorHandler(location);return requestInfo;}/**\r\n * Any uploads via the resumable upload API must transfer a number of bytes\r\n * that is a multiple of this number.\r\n */const RESUMABLE_UPLOAD_CHUNK_SIZE=256*1024;/**\r\n * @param url From a call to fbs.requests.createResumableUpload.\r\n * @param chunkSize Number of bytes to upload.\r\n * @param status The previous status.\r\n *     If not passed or null, we start from the beginning.\r\n * @throws fbs.Error If the upload is already complete, the passed in status\r\n *     has a final size inconsistent with the blob, or the blob cannot be sliced\r\n *     for upload.\r\n */function continueResumableUpload(location,service,url,blob,chunkSize,mappings,status,progressCallback){// TODO(andysoto): standardize on internal asserts\n// assert(!(opt_status && opt_status.finalized));\nconst status_=new ResumableUploadStatus(0,0);if(status){status_.current=status.current;status_.total=status.total;}else{status_.current=0;status_.total=blob.size();}if(blob.size()!==status_.total){throw serverFileWrongSize();}const bytesLeft=status_.total-status_.current;let bytesToUpload=bytesLeft;if(chunkSize>0){bytesToUpload=Math.min(bytesToUpload,chunkSize);}const startByte=status_.current;const endByte=startByte+bytesToUpload;let uploadCommand='';if(bytesToUpload===0){uploadCommand='finalize';}else if(bytesLeft===bytesToUpload){uploadCommand='upload, finalize';}else{uploadCommand='upload';}const headers={'X-Goog-Upload-Command':uploadCommand,'X-Goog-Upload-Offset':`${status_.current}`};const body=blob.slice(startByte,endByte);if(body===null){throw cannotSliceBlob();}function handler(xhr,text){// TODO(andysoto): Verify the MD5 of each uploaded range:\n// the 'x-range-md5' header comes back with status code 308 responses.\n// We'll only be able to bail out though, because you can't re-upload a\n// range that you previously uploaded.\nconst uploadStatus=checkResumeHeader_(xhr,['active','final']);const newCurrent=status_.current+bytesToUpload;const size=blob.size();let metadata;if(uploadStatus==='final'){metadata=metadataHandler(service,mappings)(xhr,text);}else{metadata=null;}return new ResumableUploadStatus(newCurrent,size,uploadStatus==='final',metadata);}const method='POST';const timeout=service.maxUploadRetryTime;const requestInfo=new RequestInfo(url,method,handler,timeout);requestInfo.headers=headers;requestInfo.body=body.uploadData();requestInfo.progressCallback=progressCallback||null;requestInfo.errorHandler=sharedErrorHandler(location);return requestInfo;}/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * An event that is triggered on a task.\r\n * @internal\r\n */const TaskEvent={/**\r\n     * For this event,\r\n     * <ul>\r\n     *   <li>The `next` function is triggered on progress updates and when the\r\n     *       task is paused/resumed with an `UploadTaskSnapshot` as the first\r\n     *       argument.</li>\r\n     *   <li>The `error` function is triggered if the upload is canceled or fails\r\n     *       for another reason.</li>\r\n     *   <li>The `complete` function is triggered if the upload completes\r\n     *       successfully.</li>\r\n     * </ul>\r\n     */STATE_CHANGED:'state_changed'};// type keys = keyof TaskState\n/**\r\n * Represents the current state of a running upload.\r\n * @internal\r\n */const TaskState={/** The task is currently transferring data. */RUNNING:'running',/** The task was paused by the user. */PAUSED:'paused',/** The task completed successfully. */SUCCESS:'success',/** The task was canceled. */CANCELED:'canceled',/** The task failed with an error. */ERROR:'error'};function taskStateFromInternalTaskState(state){switch(state){case\"running\"/* InternalTaskState.RUNNING */:case\"pausing\"/* InternalTaskState.PAUSING */:case\"canceling\"/* InternalTaskState.CANCELING */:return TaskState.RUNNING;case\"paused\"/* InternalTaskState.PAUSED */:return TaskState.PAUSED;case\"success\"/* InternalTaskState.SUCCESS */:return TaskState.SUCCESS;case\"canceled\"/* InternalTaskState.CANCELED */:return TaskState.CANCELED;case\"error\"/* InternalTaskState.ERROR */:return TaskState.ERROR;default:// TODO(andysoto): assert(false);\nreturn TaskState.ERROR;}}/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */class Observer{constructor(nextOrObserver,error,complete){const asFunctions=isFunction(nextOrObserver)||error!=null||complete!=null;if(asFunctions){this.next=nextOrObserver;this.error=error!==null&&error!==void 0?error:undefined;this.complete=complete!==null&&complete!==void 0?complete:undefined;}else{const observer=nextOrObserver;this.next=observer.next;this.error=observer.error;this.complete=observer.complete;}}}/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * Returns a function that invokes f with its arguments asynchronously as a\r\n * microtask, i.e. as soon as possible after the current script returns back\r\n * into browser code.\r\n */ // eslint-disable-next-line @typescript-eslint/ban-types\nfunction async(f){return function(){for(var _len5=arguments.length,argsToForward=new Array(_len5),_key5=0;_key5<_len5;_key5++){argsToForward[_key5]=arguments[_key5];}// eslint-disable-next-line @typescript-eslint/no-floating-promises\nPromise.resolve().then(()=>f(...argsToForward));};}/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /** An override for the text-based Connection. Used in tests. */let textFactoryOverride=null;/**\r\n * Network layer for browsers. We use this instead of goog.net.XhrIo because\r\n * goog.net.XhrIo is hyuuuuge and doesn't work in React Native on Android.\r\n */class XhrConnection{constructor(){this.sent_=false;this.xhr_=new XMLHttpRequest();this.initXhr();this.errorCode_=ErrorCode.NO_ERROR;this.sendPromise_=new Promise(resolve=>{this.xhr_.addEventListener('abort',()=>{this.errorCode_=ErrorCode.ABORT;resolve();});this.xhr_.addEventListener('error',()=>{this.errorCode_=ErrorCode.NETWORK_ERROR;resolve();});this.xhr_.addEventListener('load',()=>{resolve();});});}send(url,method,body,headers){if(this.sent_){throw internalError('cannot .send() more than once');}this.sent_=true;this.xhr_.open(method,url,true);if(headers!==undefined){for(const key in headers){if(headers.hasOwnProperty(key)){this.xhr_.setRequestHeader(key,headers[key].toString());}}}if(body!==undefined){this.xhr_.send(body);}else{this.xhr_.send();}return this.sendPromise_;}getErrorCode(){if(!this.sent_){throw internalError('cannot .getErrorCode() before sending');}return this.errorCode_;}getStatus(){if(!this.sent_){throw internalError('cannot .getStatus() before sending');}try{return this.xhr_.status;}catch(e){return-1;}}getResponse(){if(!this.sent_){throw internalError('cannot .getResponse() before sending');}return this.xhr_.response;}getErrorText(){if(!this.sent_){throw internalError('cannot .getErrorText() before sending');}return this.xhr_.statusText;}/** Aborts the request. */abort(){this.xhr_.abort();}getResponseHeader(header){return this.xhr_.getResponseHeader(header);}addUploadProgressListener(listener){if(this.xhr_.upload!=null){this.xhr_.upload.addEventListener('progress',listener);}}removeUploadProgressListener(listener){if(this.xhr_.upload!=null){this.xhr_.upload.removeEventListener('progress',listener);}}}class XhrTextConnection extends XhrConnection{initXhr(){this.xhr_.responseType='text';}}function newTextConnection(){return textFactoryOverride?textFactoryOverride():new XhrTextConnection();}class XhrBytesConnection extends XhrConnection{initXhr(){this.xhr_.responseType='arraybuffer';}}function newBytesConnection(){return new XhrBytesConnection();}class XhrBlobConnection extends XhrConnection{initXhr(){this.xhr_.responseType='blob';}}function newBlobConnection(){return new XhrBlobConnection();}/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * Represents a blob being uploaded. Can be used to pause/resume/cancel the\r\n * upload and manage callbacks for various events.\r\n * @internal\r\n */class UploadTask{/**\r\n     * @param ref - The firebaseStorage.Reference object this task came\r\n     *     from, untyped to avoid cyclic dependencies.\r\n     * @param blob - The blob to upload.\r\n     */constructor(ref,blob){let metadata=arguments.length>2&&arguments[2]!==undefined?arguments[2]:null;/**\r\n         * Number of bytes transferred so far.\r\n         */this._transferred=0;this._needToFetchStatus=false;this._needToFetchMetadata=false;this._observers=[];this._error=undefined;this._uploadUrl=undefined;this._request=undefined;this._chunkMultiplier=1;this._resolve=undefined;this._reject=undefined;this._ref=ref;this._blob=blob;this._metadata=metadata;this._mappings=getMappings();this._resumable=this._shouldDoResumable(this._blob);this._state=\"running\"/* InternalTaskState.RUNNING */;this._errorHandler=error=>{this._request=undefined;this._chunkMultiplier=1;if(error._codeEquals(\"canceled\"/* StorageErrorCode.CANCELED */)){this._needToFetchStatus=true;this.completeTransitions_();}else{const backoffExpired=this.isExponentialBackoffExpired();if(isRetryStatusCode(error.status,[])){if(backoffExpired){error=retryLimitExceeded();}else{this.sleepTime=Math.max(this.sleepTime*2,DEFAULT_MIN_SLEEP_TIME_MILLIS);this._needToFetchStatus=true;this.completeTransitions_();return;}}this._error=error;this._transition(\"error\"/* InternalTaskState.ERROR */);}};this._metadataErrorHandler=error=>{this._request=undefined;if(error._codeEquals(\"canceled\"/* StorageErrorCode.CANCELED */)){this.completeTransitions_();}else{this._error=error;this._transition(\"error\"/* InternalTaskState.ERROR */);}};this.sleepTime=0;this.maxSleepTime=this._ref.storage.maxUploadRetryTime;this._promise=new Promise((resolve,reject)=>{this._resolve=resolve;this._reject=reject;this._start();});// Prevent uncaught rejections on the internal promise from bubbling out\n// to the top level with a dummy handler.\nthis._promise.then(null,()=>{});}isExponentialBackoffExpired(){return this.sleepTime>this.maxSleepTime;}_makeProgressCallback(){const sizeBefore=this._transferred;return loaded=>this._updateProgress(sizeBefore+loaded);}_shouldDoResumable(blob){return blob.size()>256*1024;}_start(){if(this._state!==\"running\"/* InternalTaskState.RUNNING */){// This can happen if someone pauses us in a resume callback, for example.\nreturn;}if(this._request!==undefined){return;}if(this._resumable){if(this._uploadUrl===undefined){this._createResumable();}else{if(this._needToFetchStatus){this._fetchStatus();}else{if(this._needToFetchMetadata){// Happens if we miss the metadata on upload completion.\nthis._fetchMetadata();}else{this.pendingTimeout=setTimeout(()=>{this.pendingTimeout=undefined;this._continueUpload();},this.sleepTime);}}}}else{this._oneShotUpload();}}_resolveToken(callback){// eslint-disable-next-line @typescript-eslint/no-floating-promises\nPromise.all([this._ref.storage._getAuthToken(),this._ref.storage._getAppCheckToken()]).then(_ref=>{let[authToken,appCheckToken]=_ref;switch(this._state){case\"running\"/* InternalTaskState.RUNNING */:callback(authToken,appCheckToken);break;case\"canceling\"/* InternalTaskState.CANCELING */:this._transition(\"canceled\"/* InternalTaskState.CANCELED */);break;case\"pausing\"/* InternalTaskState.PAUSING */:this._transition(\"paused\"/* InternalTaskState.PAUSED */);break;}});}// TODO(andysoto): assert false\n_createResumable(){this._resolveToken((authToken,appCheckToken)=>{const requestInfo=createResumableUpload(this._ref.storage,this._ref._location,this._mappings,this._blob,this._metadata);const createRequest=this._ref.storage._makeRequest(requestInfo,newTextConnection,authToken,appCheckToken);this._request=createRequest;createRequest.getPromise().then(url=>{this._request=undefined;this._uploadUrl=url;this._needToFetchStatus=false;this.completeTransitions_();},this._errorHandler);});}_fetchStatus(){// TODO(andysoto): assert(this.uploadUrl_ !== null);\nconst url=this._uploadUrl;this._resolveToken((authToken,appCheckToken)=>{const requestInfo=getResumableUploadStatus(this._ref.storage,this._ref._location,url,this._blob);const statusRequest=this._ref.storage._makeRequest(requestInfo,newTextConnection,authToken,appCheckToken);this._request=statusRequest;statusRequest.getPromise().then(status=>{status=status;this._request=undefined;this._updateProgress(status.current);this._needToFetchStatus=false;if(status.finalized){this._needToFetchMetadata=true;}this.completeTransitions_();},this._errorHandler);});}_continueUpload(){const chunkSize=RESUMABLE_UPLOAD_CHUNK_SIZE*this._chunkMultiplier;const status=new ResumableUploadStatus(this._transferred,this._blob.size());// TODO(andysoto): assert(this.uploadUrl_ !== null);\nconst url=this._uploadUrl;this._resolveToken((authToken,appCheckToken)=>{let requestInfo;try{requestInfo=continueResumableUpload(this._ref._location,this._ref.storage,url,this._blob,chunkSize,this._mappings,status,this._makeProgressCallback());}catch(e){this._error=e;this._transition(\"error\"/* InternalTaskState.ERROR */);return;}const uploadRequest=this._ref.storage._makeRequest(requestInfo,newTextConnection,authToken,appCheckToken,/*retry=*/false// Upload requests should not be retried as each retry should be preceded by another query request. Which is handled in this file.\n);this._request=uploadRequest;uploadRequest.getPromise().then(newStatus=>{this._increaseMultiplier();this._request=undefined;this._updateProgress(newStatus.current);if(newStatus.finalized){this._metadata=newStatus.metadata;this._transition(\"success\"/* InternalTaskState.SUCCESS */);}else{this.completeTransitions_();}},this._errorHandler);});}_increaseMultiplier(){const currentSize=RESUMABLE_UPLOAD_CHUNK_SIZE*this._chunkMultiplier;// Max chunk size is 32M.\nif(currentSize*2<32*1024*1024){this._chunkMultiplier*=2;}}_fetchMetadata(){this._resolveToken((authToken,appCheckToken)=>{const requestInfo=getMetadata$2(this._ref.storage,this._ref._location,this._mappings);const metadataRequest=this._ref.storage._makeRequest(requestInfo,newTextConnection,authToken,appCheckToken);this._request=metadataRequest;metadataRequest.getPromise().then(metadata=>{this._request=undefined;this._metadata=metadata;this._transition(\"success\"/* InternalTaskState.SUCCESS */);},this._metadataErrorHandler);});}_oneShotUpload(){this._resolveToken((authToken,appCheckToken)=>{const requestInfo=multipartUpload(this._ref.storage,this._ref._location,this._mappings,this._blob,this._metadata);const multipartRequest=this._ref.storage._makeRequest(requestInfo,newTextConnection,authToken,appCheckToken);this._request=multipartRequest;multipartRequest.getPromise().then(metadata=>{this._request=undefined;this._metadata=metadata;this._updateProgress(this._blob.size());this._transition(\"success\"/* InternalTaskState.SUCCESS */);},this._errorHandler);});}_updateProgress(transferred){const old=this._transferred;this._transferred=transferred;// A progress update can make the \"transferred\" value smaller (e.g. a\n// partial upload not completed by server, after which the \"transferred\"\n// value may reset to the value at the beginning of the request).\nif(this._transferred!==old){this._notifyObservers();}}_transition(state){if(this._state===state){return;}switch(state){case\"canceling\"/* InternalTaskState.CANCELING */:case\"pausing\"/* InternalTaskState.PAUSING */:// TODO(andysoto):\n// assert(this.state_ === InternalTaskState.RUNNING ||\n//        this.state_ === InternalTaskState.PAUSING);\nthis._state=state;if(this._request!==undefined){this._request.cancel();}else if(this.pendingTimeout){clearTimeout(this.pendingTimeout);this.pendingTimeout=undefined;this.completeTransitions_();}break;case\"running\"/* InternalTaskState.RUNNING */:// TODO(andysoto):\n// assert(this.state_ === InternalTaskState.PAUSED ||\n//        this.state_ === InternalTaskState.PAUSING);\nconst wasPaused=this._state===\"paused\"/* InternalTaskState.PAUSED */;this._state=state;if(wasPaused){this._notifyObservers();this._start();}break;case\"paused\"/* InternalTaskState.PAUSED */:// TODO(andysoto):\n// assert(this.state_ === InternalTaskState.PAUSING);\nthis._state=state;this._notifyObservers();break;case\"canceled\"/* InternalTaskState.CANCELED */:// TODO(andysoto):\n// assert(this.state_ === InternalTaskState.PAUSED ||\n//        this.state_ === InternalTaskState.CANCELING);\nthis._error=canceled();this._state=state;this._notifyObservers();break;case\"error\"/* InternalTaskState.ERROR */:// TODO(andysoto):\n// assert(this.state_ === InternalTaskState.RUNNING ||\n//        this.state_ === InternalTaskState.PAUSING ||\n//        this.state_ === InternalTaskState.CANCELING);\nthis._state=state;this._notifyObservers();break;case\"success\"/* InternalTaskState.SUCCESS */:// TODO(andysoto):\n// assert(this.state_ === InternalTaskState.RUNNING ||\n//        this.state_ === InternalTaskState.PAUSING ||\n//        this.state_ === InternalTaskState.CANCELING);\nthis._state=state;this._notifyObservers();break;}}completeTransitions_(){switch(this._state){case\"pausing\"/* InternalTaskState.PAUSING */:this._transition(\"paused\"/* InternalTaskState.PAUSED */);break;case\"canceling\"/* InternalTaskState.CANCELING */:this._transition(\"canceled\"/* InternalTaskState.CANCELED */);break;case\"running\"/* InternalTaskState.RUNNING */:this._start();break;}}/**\r\n     * A snapshot of the current task state.\r\n     */get snapshot(){const externalState=taskStateFromInternalTaskState(this._state);return{bytesTransferred:this._transferred,totalBytes:this._blob.size(),state:externalState,metadata:this._metadata,task:this,ref:this._ref};}/**\r\n     * Adds a callback for an event.\r\n     * @param type - The type of event to listen for.\r\n     * @param nextOrObserver -\r\n     *     The `next` function, which gets called for each item in\r\n     *     the event stream, or an observer object with some or all of these three\r\n     *     properties (`next`, `error`, `complete`).\r\n     * @param error - A function that gets called with a `StorageError`\r\n     *     if the event stream ends due to an error.\r\n     * @param completed - A function that gets called if the\r\n     *     event stream ends normally.\r\n     * @returns\r\n     *     If only the event argument is passed, returns a function you can use to\r\n     *     add callbacks (see the examples above). If more than just the event\r\n     *     argument is passed, returns a function you can call to unregister the\r\n     *     callbacks.\r\n     */on(type,nextOrObserver,error,completed){// Note: `type` isn't being used. Its type is also incorrect. TaskEvent should not be a string.\nconst observer=new Observer(nextOrObserver||undefined,error||undefined,completed||undefined);this._addObserver(observer);return()=>{this._removeObserver(observer);};}/**\r\n     * This object behaves like a Promise, and resolves with its snapshot data\r\n     * when the upload completes.\r\n     * @param onFulfilled - The fulfillment callback. Promise chaining works as normal.\r\n     * @param onRejected - The rejection callback.\r\n     */then(onFulfilled,onRejected){// These casts are needed so that TypeScript can infer the types of the\n// resulting Promise.\nreturn this._promise.then(onFulfilled,onRejected);}/**\r\n     * Equivalent to calling `then(null, onRejected)`.\r\n     */catch(onRejected){return this.then(null,onRejected);}/**\r\n     * Adds the given observer.\r\n     */_addObserver(observer){this._observers.push(observer);this._notifyObserver(observer);}/**\r\n     * Removes the given observer.\r\n     */_removeObserver(observer){const i=this._observers.indexOf(observer);if(i!==-1){this._observers.splice(i,1);}}_notifyObservers(){this._finishPromise();const observers=this._observers.slice();observers.forEach(observer=>{this._notifyObserver(observer);});}_finishPromise(){if(this._resolve!==undefined){let triggered=true;switch(taskStateFromInternalTaskState(this._state)){case TaskState.SUCCESS:async(this._resolve.bind(null,this.snapshot))();break;case TaskState.CANCELED:case TaskState.ERROR:const toCall=this._reject;async(toCall.bind(null,this._error))();break;default:triggered=false;break;}if(triggered){this._resolve=undefined;this._reject=undefined;}}}_notifyObserver(observer){const externalState=taskStateFromInternalTaskState(this._state);switch(externalState){case TaskState.RUNNING:case TaskState.PAUSED:if(observer.next){async(observer.next.bind(observer,this.snapshot))();}break;case TaskState.SUCCESS:if(observer.complete){async(observer.complete.bind(observer))();}break;case TaskState.CANCELED:case TaskState.ERROR:if(observer.error){async(observer.error.bind(observer,this._error))();}break;default:// TODO(andysoto): assert(false);\nif(observer.error){async(observer.error.bind(observer,this._error))();}}}/**\r\n     * Resumes a paused task. Has no effect on a currently running or failed task.\r\n     * @returns True if the operation took effect, false if ignored.\r\n     */resume(){const valid=this._state===\"paused\"/* InternalTaskState.PAUSED */||this._state===\"pausing\"/* InternalTaskState.PAUSING */;if(valid){this._transition(\"running\"/* InternalTaskState.RUNNING */);}return valid;}/**\r\n     * Pauses a currently running task. Has no effect on a paused or failed task.\r\n     * @returns True if the operation took effect, false if ignored.\r\n     */pause(){const valid=this._state===\"running\"/* InternalTaskState.RUNNING */;if(valid){this._transition(\"pausing\"/* InternalTaskState.PAUSING */);}return valid;}/**\r\n     * Cancels a currently running or paused task. Has no effect on a complete or\r\n     * failed task.\r\n     * @returns True if the operation took effect, false if ignored.\r\n     */cancel(){const valid=this._state===\"running\"/* InternalTaskState.RUNNING */||this._state===\"pausing\"/* InternalTaskState.PAUSING */;if(valid){this._transition(\"canceling\"/* InternalTaskState.CANCELING */);}return valid;}}/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * Provides methods to interact with a bucket in the Firebase Storage service.\r\n * @internal\r\n * @param _location - An fbs.location, or the URL at\r\n *     which to base this object, in one of the following forms:\r\n *         gs://<bucket>/<object-path>\r\n *         http[s]://firebasestorage.googleapis.com/\r\n *                     <api-version>/b/<bucket>/o/<object-path>\r\n *     Any query or fragment strings will be ignored in the http[s]\r\n *     format. If no value is passed, the storage object will use a URL based on\r\n *     the project ID of the base firebase.App instance.\r\n */class Reference{constructor(_service,location){this._service=_service;if(location instanceof Location){this._location=location;}else{this._location=Location.makeFromUrl(location,_service.host);}}/**\r\n     * Returns the URL for the bucket and path this object references,\r\n     *     in the form gs://<bucket>/<object-path>\r\n     * @override\r\n     */toString(){return'gs://'+this._location.bucket+'/'+this._location.path;}_newRef(service,location){return new Reference(service,location);}/**\r\n     * A reference to the root of this object's bucket.\r\n     */get root(){const location=new Location(this._location.bucket,'');return this._newRef(this._service,location);}/**\r\n     * The name of the bucket containing this reference's object.\r\n     */get bucket(){return this._location.bucket;}/**\r\n     * The full path of this object.\r\n     */get fullPath(){return this._location.path;}/**\r\n     * The short name of this object, which is the last component of the full path.\r\n     * For example, if fullPath is 'full/path/image.png', name is 'image.png'.\r\n     */get name(){return lastComponent(this._location.path);}/**\r\n     * The `StorageService` instance this `StorageReference` is associated with.\r\n     */get storage(){return this._service;}/**\r\n     * A `StorageReference` pointing to the parent location of this `StorageReference`, or null if\r\n     * this reference is the root.\r\n     */get parent(){const newPath=parent(this._location.path);if(newPath===null){return null;}const location=new Location(this._location.bucket,newPath);return new Reference(this._service,location);}/**\r\n     * Utility function to throw an error in methods that do not accept a root reference.\r\n     */_throwIfRoot(name){if(this._location.path===''){throw invalidRootOperation(name);}}}/**\r\n * Download the bytes at the object's location.\r\n * @returns A Promise containing the downloaded bytes.\r\n */function getBytesInternal(ref,maxDownloadSizeBytes){ref._throwIfRoot('getBytes');const requestInfo=getBytes$1(ref.storage,ref._location,maxDownloadSizeBytes);return ref.storage.makeRequestWithTokens(requestInfo,newBytesConnection).then(bytes=>maxDownloadSizeBytes!==undefined?// GCS may not honor the Range header for small files\nbytes.slice(0,maxDownloadSizeBytes):bytes);}/**\r\n * Download the bytes at the object's location.\r\n * @returns A Promise containing the downloaded blob.\r\n */function getBlobInternal(ref,maxDownloadSizeBytes){ref._throwIfRoot('getBlob');const requestInfo=getBytes$1(ref.storage,ref._location,maxDownloadSizeBytes);return ref.storage.makeRequestWithTokens(requestInfo,newBlobConnection).then(blob=>maxDownloadSizeBytes!==undefined?// GCS may not honor the Range header for small files\nblob.slice(0,maxDownloadSizeBytes):blob);}/**\r\n * Uploads data to this object's location.\r\n * The upload is not resumable.\r\n *\r\n * @param ref - StorageReference where data should be uploaded.\r\n * @param data - The data to upload.\r\n * @param metadata - Metadata for the newly uploaded data.\r\n * @returns A Promise containing an UploadResult\r\n */function uploadBytes$1(ref,data,metadata){ref._throwIfRoot('uploadBytes');const requestInfo=multipartUpload(ref.storage,ref._location,getMappings(),new FbsBlob(data,true),metadata);return ref.storage.makeRequestWithTokens(requestInfo,newTextConnection).then(finalMetadata=>{return{metadata:finalMetadata,ref};});}/**\r\n * Uploads data to this object's location.\r\n * The upload can be paused and resumed, and exposes progress updates.\r\n * @public\r\n * @param ref - StorageReference where data should be uploaded.\r\n * @param data - The data to upload.\r\n * @param metadata - Metadata for the newly uploaded data.\r\n * @returns An UploadTask\r\n */function uploadBytesResumable$1(ref,data,metadata){ref._throwIfRoot('uploadBytesResumable');return new UploadTask(ref,new FbsBlob(data),metadata);}/**\r\n * Uploads a string to this object's location.\r\n * The upload is not resumable.\r\n * @public\r\n * @param ref - StorageReference where string should be uploaded.\r\n * @param value - The string to upload.\r\n * @param format - The format of the string to upload.\r\n * @param metadata - Metadata for the newly uploaded string.\r\n * @returns A Promise containing an UploadResult\r\n */function uploadString$1(ref,value){let format=arguments.length>2&&arguments[2]!==undefined?arguments[2]:StringFormat.RAW;let metadata=arguments.length>3?arguments[3]:undefined;ref._throwIfRoot('uploadString');const data=dataFromString(format,value);const metadataClone=Object.assign({},metadata);if(metadataClone['contentType']==null&&data.contentType!=null){metadataClone['contentType']=data.contentType;}return uploadBytes$1(ref,data.data,metadataClone);}/**\r\n * List all items (files) and prefixes (folders) under this storage reference.\r\n *\r\n * This is a helper method for calling list() repeatedly until there are\r\n * no more results. The default pagination size is 1000.\r\n *\r\n * Note: The results may not be consistent if objects are changed while this\r\n * operation is running.\r\n *\r\n * Warning: listAll may potentially consume too many resources if there are\r\n * too many results.\r\n * @public\r\n * @param ref - StorageReference to get list from.\r\n *\r\n * @returns A Promise that resolves with all the items and prefixes under\r\n *      the current storage reference. `prefixes` contains references to\r\n *      sub-directories and `items` contains references to objects in this\r\n *      folder. `nextPageToken` is never returned.\r\n */function listAll$1(ref){const accumulator={prefixes:[],items:[]};return listAllHelper(ref,accumulator).then(()=>accumulator);}/**\r\n * Separated from listAll because async functions can't use \"arguments\".\r\n * @param ref\r\n * @param accumulator\r\n * @param pageToken\r\n */async function listAllHelper(ref,accumulator,pageToken){const opt={// maxResults is 1000 by default.\npageToken};const nextPage=await list$1(ref,opt);accumulator.prefixes.push(...nextPage.prefixes);accumulator.items.push(...nextPage.items);if(nextPage.nextPageToken!=null){await listAllHelper(ref,accumulator,nextPage.nextPageToken);}}/**\r\n * List items (files) and prefixes (folders) under this storage reference.\r\n *\r\n * List API is only available for Firebase Rules Version 2.\r\n *\r\n * GCS is a key-blob store. Firebase Storage imposes the semantic of '/'\r\n * delimited folder structure.\r\n * Refer to GCS's List API if you want to learn more.\r\n *\r\n * To adhere to Firebase Rules's Semantics, Firebase Storage does not\r\n * support objects whose paths end with \"/\" or contain two consecutive\r\n * \"/\"s. Firebase Storage List API will filter these unsupported objects.\r\n * list() may fail if there are too many unsupported objects in the bucket.\r\n * @public\r\n *\r\n * @param ref - StorageReference to get list from.\r\n * @param options - See ListOptions for details.\r\n * @returns A Promise that resolves with the items and prefixes.\r\n *      `prefixes` contains references to sub-folders and `items`\r\n *      contains references to objects in this folder. `nextPageToken`\r\n *      can be used to get the rest of the results.\r\n */function list$1(ref,options){if(options!=null){if(typeof options.maxResults==='number'){validateNumber('options.maxResults',/* minValue= */1,/* maxValue= */1000,options.maxResults);}}const op=options||{};const requestInfo=list$2(ref.storage,ref._location,/*delimiter= */'/',op.pageToken,op.maxResults);return ref.storage.makeRequestWithTokens(requestInfo,newTextConnection);}/**\r\n * A `Promise` that resolves with the metadata for this object. If this\r\n * object doesn't exist or metadata cannot be retreived, the promise is\r\n * rejected.\r\n * @public\r\n * @param ref - StorageReference to get metadata from.\r\n */function getMetadata$1(ref){ref._throwIfRoot('getMetadata');const requestInfo=getMetadata$2(ref.storage,ref._location,getMappings());return ref.storage.makeRequestWithTokens(requestInfo,newTextConnection);}/**\r\n * Updates the metadata for this object.\r\n * @public\r\n * @param ref - StorageReference to update metadata for.\r\n * @param metadata - The new metadata for the object.\r\n *     Only values that have been explicitly set will be changed. Explicitly\r\n *     setting a value to null will remove the metadata.\r\n * @returns A `Promise` that resolves\r\n *     with the new metadata for this object.\r\n *     See `firebaseStorage.Reference.prototype.getMetadata`\r\n */function updateMetadata$1(ref,metadata){ref._throwIfRoot('updateMetadata');const requestInfo=updateMetadata$2(ref.storage,ref._location,metadata,getMappings());return ref.storage.makeRequestWithTokens(requestInfo,newTextConnection);}/**\r\n * Returns the download URL for the given Reference.\r\n * @public\r\n * @returns A `Promise` that resolves with the download\r\n *     URL for this object.\r\n */function getDownloadURL$1(ref){ref._throwIfRoot('getDownloadURL');const requestInfo=getDownloadUrl(ref.storage,ref._location,getMappings());return ref.storage.makeRequestWithTokens(requestInfo,newTextConnection).then(url=>{if(url===null){throw noDownloadURL();}return url;});}/**\r\n * Deletes the object at this location.\r\n * @public\r\n * @param ref - StorageReference for object to delete.\r\n * @returns A `Promise` that resolves if the deletion succeeds.\r\n */function deleteObject$1(ref){ref._throwIfRoot('deleteObject');const requestInfo=deleteObject$2(ref.storage,ref._location);return ref.storage.makeRequestWithTokens(requestInfo,newTextConnection);}/**\r\n * Returns reference for object obtained by appending `childPath` to `ref`.\r\n *\r\n * @param ref - StorageReference to get child of.\r\n * @param childPath - Child path from provided ref.\r\n * @returns A reference to the object obtained by\r\n * appending childPath, removing any duplicate, beginning, or trailing\r\n * slashes.\r\n *\r\n */function _getChild$1(ref,childPath){const newPath=child(ref._location.path,childPath);const location=new Location(ref._location.bucket,newPath);return new Reference(ref.storage,location);}/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */function isUrl(path){return /^[A-Za-z]+:\\/\\//.test(path);}/**\r\n * Returns a firebaseStorage.Reference for the given url.\r\n */function refFromURL(service,url){return new Reference(service,url);}/**\r\n * Returns a firebaseStorage.Reference for the given path in the default\r\n * bucket.\r\n */function refFromPath(ref,path){if(ref instanceof FirebaseStorageImpl){const service=ref;if(service._bucket==null){throw noDefaultBucket();}const reference=new Reference(service,service._bucket);if(path!=null){return refFromPath(reference,path);}else{return reference;}}else{// ref is a Reference\nif(path!==undefined){return _getChild$1(ref,path);}else{return ref;}}}function ref$1(serviceOrRef,pathOrUrl){if(pathOrUrl&&isUrl(pathOrUrl)){if(serviceOrRef instanceof FirebaseStorageImpl){return refFromURL(serviceOrRef,pathOrUrl);}else{throw invalidArgument('To use ref(service, url), the first argument must be a Storage instance.');}}else{return refFromPath(serviceOrRef,pathOrUrl);}}function extractBucket(host,config){const bucketString=config===null||config===void 0?void 0:config[CONFIG_STORAGE_BUCKET_KEY];if(bucketString==null){return null;}return Location.makeFromBucketSpec(bucketString,host);}function connectStorageEmulator$1(storage,host,port){let options=arguments.length>3&&arguments[3]!==undefined?arguments[3]:{};storage.host=`${host}:${port}`;storage._protocol='http';const{mockUserToken}=options;if(mockUserToken){storage._overrideAuthToken=typeof mockUserToken==='string'?mockUserToken:(0,_firebase_util__WEBPACK_IMPORTED_MODULE_1__.createMockUserToken)(mockUserToken,storage.app.options.projectId);}}/**\r\n * A service that provides Firebase Storage Reference instances.\r\n * @param opt_url - gs:// url to a custom Storage Bucket\r\n *\r\n * @internal\r\n */class FirebaseStorageImpl{constructor(/**\r\n     * FirebaseApp associated with this StorageService instance.\r\n     */app,_authProvider,/**\r\n     * @internal\r\n     */_appCheckProvider,/**\r\n     * @internal\r\n     */_url,_firebaseVersion){this.app=app;this._authProvider=_authProvider;this._appCheckProvider=_appCheckProvider;this._url=_url;this._firebaseVersion=_firebaseVersion;this._bucket=null;/**\r\n         * This string can be in the formats:\r\n         * - host\r\n         * - host:port\r\n         */this._host=DEFAULT_HOST;this._protocol='https';this._appId=null;this._deleted=false;this._maxOperationRetryTime=DEFAULT_MAX_OPERATION_RETRY_TIME;this._maxUploadRetryTime=DEFAULT_MAX_UPLOAD_RETRY_TIME;this._requests=new Set();if(_url!=null){this._bucket=Location.makeFromBucketSpec(_url,this._host);}else{this._bucket=extractBucket(this._host,this.app.options);}}/**\r\n     * The host string for this service, in the form of `host` or\r\n     * `host:port`.\r\n     */get host(){return this._host;}set host(host){this._host=host;if(this._url!=null){this._bucket=Location.makeFromBucketSpec(this._url,host);}else{this._bucket=extractBucket(host,this.app.options);}}/**\r\n     * The maximum time to retry uploads in milliseconds.\r\n     */get maxUploadRetryTime(){return this._maxUploadRetryTime;}set maxUploadRetryTime(time){validateNumber('time',/* minValue=*/0,/* maxValue= */Number.POSITIVE_INFINITY,time);this._maxUploadRetryTime=time;}/**\r\n     * The maximum time to retry operations other than uploads or downloads in\r\n     * milliseconds.\r\n     */get maxOperationRetryTime(){return this._maxOperationRetryTime;}set maxOperationRetryTime(time){validateNumber('time',/* minValue=*/0,/* maxValue= */Number.POSITIVE_INFINITY,time);this._maxOperationRetryTime=time;}async _getAuthToken(){if(this._overrideAuthToken){return this._overrideAuthToken;}const auth=this._authProvider.getImmediate({optional:true});if(auth){const tokenData=await auth.getToken();if(tokenData!==null){return tokenData.accessToken;}}return null;}async _getAppCheckToken(){const appCheck=this._appCheckProvider.getImmediate({optional:true});if(appCheck){const result=await appCheck.getToken();// TODO: What do we want to do if there is an error getting the token?\n// Context: appCheck.getToken() will never throw even if an error happened. In the error case, a dummy token will be\n// returned along with an error field describing the error. In general, we shouldn't care about the error condition and just use\n// the token (actual or dummy) to send requests.\nreturn result.token;}return null;}/**\r\n     * Stop running requests and prevent more from being created.\r\n     */_delete(){if(!this._deleted){this._deleted=true;this._requests.forEach(request=>request.cancel());this._requests.clear();}return Promise.resolve();}/**\r\n     * Returns a new firebaseStorage.Reference object referencing this StorageService\r\n     * at the given Location.\r\n     */_makeStorageReference(loc){return new Reference(this,loc);}/**\r\n     * @param requestInfo - HTTP RequestInfo object\r\n     * @param authToken - Firebase auth token\r\n     */_makeRequest(requestInfo,requestFactory,authToken,appCheckToken){let retry=arguments.length>4&&arguments[4]!==undefined?arguments[4]:true;if(!this._deleted){const request=makeRequest(requestInfo,this._appId,authToken,appCheckToken,requestFactory,this._firebaseVersion,retry);this._requests.add(request);// Request removes itself from set when complete.\nrequest.getPromise().then(()=>this._requests.delete(request),()=>this._requests.delete(request));return request;}else{return new FailRequest(appDeleted());}}async makeRequestWithTokens(requestInfo,requestFactory){const[authToken,appCheckToken]=await Promise.all([this._getAuthToken(),this._getAppCheckToken()]);return this._makeRequest(requestInfo,requestFactory,authToken,appCheckToken).getPromise();}}const name=\"@firebase/storage\";const version=\"0.10.0\";/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * Type constant for Firebase Storage.\r\n */const STORAGE_TYPE='storage';/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * Downloads the data at the object's location. Returns an error if the object\r\n * is not found.\r\n *\r\n * To use this functionality, you have to whitelist your app's origin in your\r\n * Cloud Storage bucket. See also\r\n * https://cloud.google.com/storage/docs/configuring-cors\r\n *\r\n * @public\r\n * @param ref - StorageReference where data should be downloaded.\r\n * @param maxDownloadSizeBytes - If set, the maximum allowed size in bytes to\r\n * retrieve.\r\n * @returns A Promise containing the object's bytes\r\n */function getBytes(ref,maxDownloadSizeBytes){ref=(0,_firebase_util__WEBPACK_IMPORTED_MODULE_1__.getModularInstance)(ref);return getBytesInternal(ref,maxDownloadSizeBytes);}/**\r\n * Uploads data to this object's location.\r\n * The upload is not resumable.\r\n * @public\r\n * @param ref - {@link StorageReference} where data should be uploaded.\r\n * @param data - The data to upload.\r\n * @param metadata - Metadata for the data to upload.\r\n * @returns A Promise containing an UploadResult\r\n */function uploadBytes(ref,data,metadata){ref=(0,_firebase_util__WEBPACK_IMPORTED_MODULE_1__.getModularInstance)(ref);return uploadBytes$1(ref,data,metadata);}/**\r\n * Uploads a string to this object's location.\r\n * The upload is not resumable.\r\n * @public\r\n * @param ref - {@link StorageReference} where string should be uploaded.\r\n * @param value - The string to upload.\r\n * @param format - The format of the string to upload.\r\n * @param metadata - Metadata for the string to upload.\r\n * @returns A Promise containing an UploadResult\r\n */function uploadString(ref,value,format,metadata){ref=(0,_firebase_util__WEBPACK_IMPORTED_MODULE_1__.getModularInstance)(ref);return uploadString$1(ref,value,format,metadata);}/**\r\n * Uploads data to this object's location.\r\n * The upload can be paused and resumed, and exposes progress updates.\r\n * @public\r\n * @param ref - {@link StorageReference} where data should be uploaded.\r\n * @param data - The data to upload.\r\n * @param metadata - Metadata for the data to upload.\r\n * @returns An UploadTask\r\n */function uploadBytesResumable(ref,data,metadata){ref=(0,_firebase_util__WEBPACK_IMPORTED_MODULE_1__.getModularInstance)(ref);return uploadBytesResumable$1(ref,data,metadata);}/**\r\n * A `Promise` that resolves with the metadata for this object. If this\r\n * object doesn't exist or metadata cannot be retreived, the promise is\r\n * rejected.\r\n * @public\r\n * @param ref - {@link StorageReference} to get metadata from.\r\n */function getMetadata(ref){ref=(0,_firebase_util__WEBPACK_IMPORTED_MODULE_1__.getModularInstance)(ref);return getMetadata$1(ref);}/**\r\n * Updates the metadata for this object.\r\n * @public\r\n * @param ref - {@link StorageReference} to update metadata for.\r\n * @param metadata - The new metadata for the object.\r\n *     Only values that have been explicitly set will be changed. Explicitly\r\n *     setting a value to null will remove the metadata.\r\n * @returns A `Promise` that resolves with the new metadata for this object.\r\n */function updateMetadata(ref,metadata){ref=(0,_firebase_util__WEBPACK_IMPORTED_MODULE_1__.getModularInstance)(ref);return updateMetadata$1(ref,metadata);}/**\r\n * List items (files) and prefixes (folders) under this storage reference.\r\n *\r\n * List API is only available for Firebase Rules Version 2.\r\n *\r\n * GCS is a key-blob store. Firebase Storage imposes the semantic of '/'\r\n * delimited folder structure.\r\n * Refer to GCS's List API if you want to learn more.\r\n *\r\n * To adhere to Firebase Rules's Semantics, Firebase Storage does not\r\n * support objects whose paths end with \"/\" or contain two consecutive\r\n * \"/\"s. Firebase Storage List API will filter these unsupported objects.\r\n * list() may fail if there are too many unsupported objects in the bucket.\r\n * @public\r\n *\r\n * @param ref - {@link StorageReference} to get list from.\r\n * @param options - See {@link ListOptions} for details.\r\n * @returns A `Promise` that resolves with the items and prefixes.\r\n *      `prefixes` contains references to sub-folders and `items`\r\n *      contains references to objects in this folder. `nextPageToken`\r\n *      can be used to get the rest of the results.\r\n */function list(ref,options){ref=(0,_firebase_util__WEBPACK_IMPORTED_MODULE_1__.getModularInstance)(ref);return list$1(ref,options);}/**\r\n * List all items (files) and prefixes (folders) under this storage reference.\r\n *\r\n * This is a helper method for calling list() repeatedly until there are\r\n * no more results. The default pagination size is 1000.\r\n *\r\n * Note: The results may not be consistent if objects are changed while this\r\n * operation is running.\r\n *\r\n * Warning: `listAll` may potentially consume too many resources if there are\r\n * too many results.\r\n * @public\r\n * @param ref - {@link StorageReference} to get list from.\r\n *\r\n * @returns A `Promise` that resolves with all the items and prefixes under\r\n *      the current storage reference. `prefixes` contains references to\r\n *      sub-directories and `items` contains references to objects in this\r\n *      folder. `nextPageToken` is never returned.\r\n */function listAll(ref){ref=(0,_firebase_util__WEBPACK_IMPORTED_MODULE_1__.getModularInstance)(ref);return listAll$1(ref);}/**\r\n * Returns the download URL for the given {@link StorageReference}.\r\n * @public\r\n * @param ref - {@link StorageReference} to get the download URL for.\r\n * @returns A `Promise` that resolves with the download\r\n *     URL for this object.\r\n */function getDownloadURL(ref){ref=(0,_firebase_util__WEBPACK_IMPORTED_MODULE_1__.getModularInstance)(ref);return getDownloadURL$1(ref);}/**\r\n * Deletes the object at this location.\r\n * @public\r\n * @param ref - {@link StorageReference} for object to delete.\r\n * @returns A `Promise` that resolves if the deletion succeeds.\r\n */function deleteObject(ref){ref=(0,_firebase_util__WEBPACK_IMPORTED_MODULE_1__.getModularInstance)(ref);return deleteObject$1(ref);}function ref(serviceOrRef,pathOrUrl){serviceOrRef=(0,_firebase_util__WEBPACK_IMPORTED_MODULE_1__.getModularInstance)(serviceOrRef);return ref$1(serviceOrRef,pathOrUrl);}/**\r\n * @internal\r\n */function _getChild(ref,childPath){return _getChild$1(ref,childPath);}/**\r\n * Gets a {@link FirebaseStorage} instance for the given Firebase app.\r\n * @public\r\n * @param app - Firebase app to get {@link FirebaseStorage} instance for.\r\n * @param bucketUrl - The gs:// url to your Firebase Storage Bucket.\r\n * If not passed, uses the app's default Storage Bucket.\r\n * @returns A {@link FirebaseStorage} instance.\r\n */function getStorage(){let app=arguments.length>0&&arguments[0]!==undefined?arguments[0]:(0,_firebase_app__WEBPACK_IMPORTED_MODULE_0__.getApp)();let bucketUrl=arguments.length>1?arguments[1]:undefined;app=(0,_firebase_util__WEBPACK_IMPORTED_MODULE_1__.getModularInstance)(app);const storageProvider=(0,_firebase_app__WEBPACK_IMPORTED_MODULE_0__._getProvider)(app,STORAGE_TYPE);const storageInstance=storageProvider.getImmediate({identifier:bucketUrl});const emulator=(0,_firebase_util__WEBPACK_IMPORTED_MODULE_1__.getDefaultEmulatorHostnameAndPort)('storage');if(emulator){connectStorageEmulator(storageInstance,...emulator);}return storageInstance;}/**\r\n * Modify this {@link FirebaseStorage} instance to communicate with the Cloud Storage emulator.\r\n *\r\n * @param storage - The {@link FirebaseStorage} instance\r\n * @param host - The emulator host (ex: localhost)\r\n * @param port - The emulator port (ex: 5001)\r\n * @param options - Emulator options. `options.mockUserToken` is the mock auth\r\n * token to use for unit testing Security Rules.\r\n * @public\r\n */function connectStorageEmulator(storage,host,port){let options=arguments.length>3&&arguments[3]!==undefined?arguments[3]:{};connectStorageEmulator$1(storage,host,port,options);}/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * Downloads the data at the object's location. Returns an error if the object\r\n * is not found.\r\n *\r\n * To use this functionality, you have to whitelist your app's origin in your\r\n * Cloud Storage bucket. See also\r\n * https://cloud.google.com/storage/docs/configuring-cors\r\n *\r\n * This API is not available in Node.\r\n *\r\n * @public\r\n * @param ref - StorageReference where data should be downloaded.\r\n * @param maxDownloadSizeBytes - If set, the maximum allowed size in bytes to\r\n * retrieve.\r\n * @returns A Promise that resolves with a Blob containing the object's bytes\r\n */function getBlob(ref,maxDownloadSizeBytes){ref=(0,_firebase_util__WEBPACK_IMPORTED_MODULE_1__.getModularInstance)(ref);return getBlobInternal(ref,maxDownloadSizeBytes);}/**\r\n * Downloads the data at the object's location. Raises an error event if the\r\n * object is not found.\r\n *\r\n * This API is only available in Node.\r\n *\r\n * @public\r\n * @param ref - StorageReference where data should be downloaded.\r\n * @param maxDownloadSizeBytes - If set, the maximum allowed size in bytes to\r\n * retrieve.\r\n * @returns A stream with the object's data as bytes\r\n */function getStream(ref,maxDownloadSizeBytes){throw new Error('getStream() is only supported by NodeJS builds');}/**\r\n * Cloud Storage for Firebase\r\n *\r\n * @packageDocumentation\r\n */function factory(container,_ref2){let{instanceIdentifier:url}=_ref2;const app=container.getProvider('app').getImmediate();const authProvider=container.getProvider('auth-internal');const appCheckProvider=container.getProvider('app-check-internal');return new FirebaseStorageImpl(app,authProvider,appCheckProvider,url,_firebase_app__WEBPACK_IMPORTED_MODULE_0__.SDK_VERSION);}function registerStorage(){(0,_firebase_app__WEBPACK_IMPORTED_MODULE_0__._registerComponent)(new _firebase_component__WEBPACK_IMPORTED_MODULE_2__.Component(STORAGE_TYPE,factory,\"PUBLIC\"/* ComponentType.PUBLIC */).setMultipleInstances(true));//RUNTIME_ENV will be replaced during the compilation to \"node\" for nodejs and an empty string for browser\n(0,_firebase_app__WEBPACK_IMPORTED_MODULE_0__.registerVersion)(name,version,'');// BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation\n(0,_firebase_app__WEBPACK_IMPORTED_MODULE_0__.registerVersion)(name,version,'esm2017');}registerStorage();\n\n//# sourceURL=webpack://__ember_auto_import__/./node_modules/@firebase/storage/dist/index.esm2017.js?");

/***/ }),

/***/ "./node_modules/@firebase/util/dist/index.esm2017.js":
/*!***********************************************************!*\
  !*** ./node_modules/@firebase/util/dist/index.esm2017.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"CONSTANTS\": () => (/* binding */ CONSTANTS),\n/* harmony export */   \"Deferred\": () => (/* binding */ Deferred),\n/* harmony export */   \"ErrorFactory\": () => (/* binding */ ErrorFactory),\n/* harmony export */   \"FirebaseError\": () => (/* binding */ FirebaseError),\n/* harmony export */   \"MAX_VALUE_MILLIS\": () => (/* binding */ MAX_VALUE_MILLIS),\n/* harmony export */   \"RANDOM_FACTOR\": () => (/* binding */ RANDOM_FACTOR),\n/* harmony export */   \"Sha1\": () => (/* binding */ Sha1),\n/* harmony export */   \"areCookiesEnabled\": () => (/* binding */ areCookiesEnabled),\n/* harmony export */   \"assert\": () => (/* binding */ assert),\n/* harmony export */   \"assertionError\": () => (/* binding */ assertionError),\n/* harmony export */   \"async\": () => (/* binding */ async),\n/* harmony export */   \"base64\": () => (/* binding */ base64),\n/* harmony export */   \"base64Decode\": () => (/* binding */ base64Decode),\n/* harmony export */   \"base64Encode\": () => (/* binding */ base64Encode),\n/* harmony export */   \"base64urlEncodeWithoutPadding\": () => (/* binding */ base64urlEncodeWithoutPadding),\n/* harmony export */   \"calculateBackoffMillis\": () => (/* binding */ calculateBackoffMillis),\n/* harmony export */   \"contains\": () => (/* binding */ contains),\n/* harmony export */   \"createMockUserToken\": () => (/* binding */ createMockUserToken),\n/* harmony export */   \"createSubscribe\": () => (/* binding */ createSubscribe),\n/* harmony export */   \"decode\": () => (/* binding */ decode),\n/* harmony export */   \"deepCopy\": () => (/* binding */ deepCopy),\n/* harmony export */   \"deepEqual\": () => (/* binding */ deepEqual),\n/* harmony export */   \"deepExtend\": () => (/* binding */ deepExtend),\n/* harmony export */   \"errorPrefix\": () => (/* binding */ errorPrefix),\n/* harmony export */   \"extractQuerystring\": () => (/* binding */ extractQuerystring),\n/* harmony export */   \"getDefaultAppConfig\": () => (/* binding */ getDefaultAppConfig),\n/* harmony export */   \"getDefaultEmulatorHost\": () => (/* binding */ getDefaultEmulatorHost),\n/* harmony export */   \"getDefaultEmulatorHostnameAndPort\": () => (/* binding */ getDefaultEmulatorHostnameAndPort),\n/* harmony export */   \"getExperimentalSetting\": () => (/* binding */ getExperimentalSetting),\n/* harmony export */   \"getGlobal\": () => (/* binding */ getGlobal),\n/* harmony export */   \"getModularInstance\": () => (/* binding */ getModularInstance),\n/* harmony export */   \"getUA\": () => (/* binding */ getUA),\n/* harmony export */   \"isAdmin\": () => (/* binding */ isAdmin),\n/* harmony export */   \"isBrowser\": () => (/* binding */ isBrowser),\n/* harmony export */   \"isBrowserExtension\": () => (/* binding */ isBrowserExtension),\n/* harmony export */   \"isElectron\": () => (/* binding */ isElectron),\n/* harmony export */   \"isEmpty\": () => (/* binding */ isEmpty),\n/* harmony export */   \"isIE\": () => (/* binding */ isIE),\n/* harmony export */   \"isIndexedDBAvailable\": () => (/* binding */ isIndexedDBAvailable),\n/* harmony export */   \"isMobileCordova\": () => (/* binding */ isMobileCordova),\n/* harmony export */   \"isNode\": () => (/* binding */ isNode),\n/* harmony export */   \"isNodeSdk\": () => (/* binding */ isNodeSdk),\n/* harmony export */   \"isReactNative\": () => (/* binding */ isReactNative),\n/* harmony export */   \"isSafari\": () => (/* binding */ isSafari),\n/* harmony export */   \"isUWP\": () => (/* binding */ isUWP),\n/* harmony export */   \"isValidFormat\": () => (/* binding */ isValidFormat),\n/* harmony export */   \"isValidTimestamp\": () => (/* binding */ isValidTimestamp),\n/* harmony export */   \"issuedAtTime\": () => (/* binding */ issuedAtTime),\n/* harmony export */   \"jsonEval\": () => (/* binding */ jsonEval),\n/* harmony export */   \"map\": () => (/* binding */ map),\n/* harmony export */   \"ordinal\": () => (/* binding */ ordinal),\n/* harmony export */   \"promiseWithTimeout\": () => (/* binding */ promiseWithTimeout),\n/* harmony export */   \"querystring\": () => (/* binding */ querystring),\n/* harmony export */   \"querystringDecode\": () => (/* binding */ querystringDecode),\n/* harmony export */   \"safeGet\": () => (/* binding */ safeGet),\n/* harmony export */   \"stringLength\": () => (/* binding */ stringLength),\n/* harmony export */   \"stringToByteArray\": () => (/* binding */ stringToByteArray),\n/* harmony export */   \"stringify\": () => (/* binding */ stringify),\n/* harmony export */   \"uuidv4\": () => (/* binding */ uuidv4),\n/* harmony export */   \"validateArgCount\": () => (/* binding */ validateArgCount),\n/* harmony export */   \"validateCallback\": () => (/* binding */ validateCallback),\n/* harmony export */   \"validateContextObject\": () => (/* binding */ validateContextObject),\n/* harmony export */   \"validateIndexedDBOpenable\": () => (/* binding */ validateIndexedDBOpenable),\n/* harmony export */   \"validateNamespace\": () => (/* binding */ validateNamespace)\n/* harmony export */ });\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * @fileoverview Firebase constants.  Some of these (@defines) can be overridden at compile-time.\r\n */const CONSTANTS={/**\r\n     * @define {boolean} Whether this is the client Node.js SDK.\r\n     */NODE_CLIENT:false,/**\r\n     * @define {boolean} Whether this is the Admin Node.js SDK.\r\n     */NODE_ADMIN:false,/**\r\n     * Firebase SDK Version\r\n     */SDK_VERSION:'${JSCORE_VERSION}'};/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * Throws an error if the provided assertion is falsy\r\n */const assert=function(assertion,message){if(!assertion){throw assertionError(message);}};/**\r\n * Returns an Error object suitable for throwing.\r\n */const assertionError=function(message){return new Error('Firebase Database ('+CONSTANTS.SDK_VERSION+') INTERNAL ASSERT FAILED: '+message);};/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */const stringToByteArray$1=function(str){// TODO(user): Use native implementations if/when available\nconst out=[];let p=0;for(let i=0;i<str.length;i++){let c=str.charCodeAt(i);if(c<128){out[p++]=c;}else if(c<2048){out[p++]=c>>6|192;out[p++]=c&63|128;}else if((c&0xfc00)===0xd800&&i+1<str.length&&(str.charCodeAt(i+1)&0xfc00)===0xdc00){// Surrogate Pair\nc=0x10000+((c&0x03ff)<<10)+(str.charCodeAt(++i)&0x03ff);out[p++]=c>>18|240;out[p++]=c>>12&63|128;out[p++]=c>>6&63|128;out[p++]=c&63|128;}else{out[p++]=c>>12|224;out[p++]=c>>6&63|128;out[p++]=c&63|128;}}return out;};/**\r\n * Turns an array of numbers into the string given by the concatenation of the\r\n * characters to which the numbers correspond.\r\n * @param bytes Array of numbers representing characters.\r\n * @return Stringification of the array.\r\n */const byteArrayToString=function(bytes){// TODO(user): Use native implementations if/when available\nconst out=[];let pos=0,c=0;while(pos<bytes.length){const c1=bytes[pos++];if(c1<128){out[c++]=String.fromCharCode(c1);}else if(c1>191&&c1<224){const c2=bytes[pos++];out[c++]=String.fromCharCode((c1&31)<<6|c2&63);}else if(c1>239&&c1<365){// Surrogate Pair\nconst c2=bytes[pos++];const c3=bytes[pos++];const c4=bytes[pos++];const u=((c1&7)<<18|(c2&63)<<12|(c3&63)<<6|c4&63)-0x10000;out[c++]=String.fromCharCode(0xd800+(u>>10));out[c++]=String.fromCharCode(0xdc00+(u&1023));}else{const c2=bytes[pos++];const c3=bytes[pos++];out[c++]=String.fromCharCode((c1&15)<<12|(c2&63)<<6|c3&63);}}return out.join('');};// We define it as an object literal instead of a class because a class compiled down to es5 can't\n// be treeshaked. https://github.com/rollup/rollup/issues/1691\n// Static lookup maps, lazily populated by init_()\nconst base64={/**\r\n     * Maps bytes to characters.\r\n     */byteToCharMap_:null,/**\r\n     * Maps characters to bytes.\r\n     */charToByteMap_:null,/**\r\n     * Maps bytes to websafe characters.\r\n     * @private\r\n     */byteToCharMapWebSafe_:null,/**\r\n     * Maps websafe characters to bytes.\r\n     * @private\r\n     */charToByteMapWebSafe_:null,/**\r\n     * Our default alphabet, shared between\r\n     * ENCODED_VALS and ENCODED_VALS_WEBSAFE\r\n     */ENCODED_VALS_BASE:'ABCDEFGHIJKLMNOPQRSTUVWXYZ'+'abcdefghijklmnopqrstuvwxyz'+'0123456789',/**\r\n     * Our default alphabet. Value 64 (=) is special; it means \"nothing.\"\r\n     */get ENCODED_VALS(){return this.ENCODED_VALS_BASE+'+/=';},/**\r\n     * Our websafe alphabet.\r\n     */get ENCODED_VALS_WEBSAFE(){return this.ENCODED_VALS_BASE+'-_.';},/**\r\n     * Whether this browser supports the atob and btoa functions. This extension\r\n     * started at Mozilla but is now implemented by many browsers. We use the\r\n     * ASSUME_* variables to avoid pulling in the full useragent detection library\r\n     * but still allowing the standard per-browser compilations.\r\n     *\r\n     */HAS_NATIVE_SUPPORT:typeof atob==='function',/**\r\n     * Base64-encode an array of bytes.\r\n     *\r\n     * @param input An array of bytes (numbers with\r\n     *     value in [0, 255]) to encode.\r\n     * @param webSafe Boolean indicating we should use the\r\n     *     alternative alphabet.\r\n     * @return The base64 encoded string.\r\n     */encodeByteArray(input,webSafe){if(!Array.isArray(input)){throw Error('encodeByteArray takes an array as a parameter');}this.init_();const byteToCharMap=webSafe?this.byteToCharMapWebSafe_:this.byteToCharMap_;const output=[];for(let i=0;i<input.length;i+=3){const byte1=input[i];const haveByte2=i+1<input.length;const byte2=haveByte2?input[i+1]:0;const haveByte3=i+2<input.length;const byte3=haveByte3?input[i+2]:0;const outByte1=byte1>>2;const outByte2=(byte1&0x03)<<4|byte2>>4;let outByte3=(byte2&0x0f)<<2|byte3>>6;let outByte4=byte3&0x3f;if(!haveByte3){outByte4=64;if(!haveByte2){outByte3=64;}}output.push(byteToCharMap[outByte1],byteToCharMap[outByte2],byteToCharMap[outByte3],byteToCharMap[outByte4]);}return output.join('');},/**\r\n     * Base64-encode a string.\r\n     *\r\n     * @param input A string to encode.\r\n     * @param webSafe If true, we should use the\r\n     *     alternative alphabet.\r\n     * @return The base64 encoded string.\r\n     */encodeString(input,webSafe){// Shortcut for Mozilla browsers that implement\n// a native base64 encoder in the form of \"btoa/atob\"\nif(this.HAS_NATIVE_SUPPORT&&!webSafe){return btoa(input);}return this.encodeByteArray(stringToByteArray$1(input),webSafe);},/**\r\n     * Base64-decode a string.\r\n     *\r\n     * @param input to decode.\r\n     * @param webSafe True if we should use the\r\n     *     alternative alphabet.\r\n     * @return string representing the decoded value.\r\n     */decodeString(input,webSafe){// Shortcut for Mozilla browsers that implement\n// a native base64 encoder in the form of \"btoa/atob\"\nif(this.HAS_NATIVE_SUPPORT&&!webSafe){return atob(input);}return byteArrayToString(this.decodeStringToByteArray(input,webSafe));},/**\r\n     * Base64-decode a string.\r\n     *\r\n     * In base-64 decoding, groups of four characters are converted into three\r\n     * bytes.  If the encoder did not apply padding, the input length may not\r\n     * be a multiple of 4.\r\n     *\r\n     * In this case, the last group will have fewer than 4 characters, and\r\n     * padding will be inferred.  If the group has one or two characters, it decodes\r\n     * to one byte.  If the group has three characters, it decodes to two bytes.\r\n     *\r\n     * @param input Input to decode.\r\n     * @param webSafe True if we should use the web-safe alphabet.\r\n     * @return bytes representing the decoded value.\r\n     */decodeStringToByteArray(input,webSafe){this.init_();const charToByteMap=webSafe?this.charToByteMapWebSafe_:this.charToByteMap_;const output=[];for(let i=0;i<input.length;){const byte1=charToByteMap[input.charAt(i++)];const haveByte2=i<input.length;const byte2=haveByte2?charToByteMap[input.charAt(i)]:0;++i;const haveByte3=i<input.length;const byte3=haveByte3?charToByteMap[input.charAt(i)]:64;++i;const haveByte4=i<input.length;const byte4=haveByte4?charToByteMap[input.charAt(i)]:64;++i;if(byte1==null||byte2==null||byte3==null||byte4==null){throw Error();}const outByte1=byte1<<2|byte2>>4;output.push(outByte1);if(byte3!==64){const outByte2=byte2<<4&0xf0|byte3>>2;output.push(outByte2);if(byte4!==64){const outByte3=byte3<<6&0xc0|byte4;output.push(outByte3);}}}return output;},/**\r\n     * Lazy static initialization function. Called before\r\n     * accessing any of the static map variables.\r\n     * @private\r\n     */init_(){if(!this.byteToCharMap_){this.byteToCharMap_={};this.charToByteMap_={};this.byteToCharMapWebSafe_={};this.charToByteMapWebSafe_={};// We want quick mappings back and forth, so we precompute two maps.\nfor(let i=0;i<this.ENCODED_VALS.length;i++){this.byteToCharMap_[i]=this.ENCODED_VALS.charAt(i);this.charToByteMap_[this.byteToCharMap_[i]]=i;this.byteToCharMapWebSafe_[i]=this.ENCODED_VALS_WEBSAFE.charAt(i);this.charToByteMapWebSafe_[this.byteToCharMapWebSafe_[i]]=i;// Be forgiving when decoding and correctly decode both encodings.\nif(i>=this.ENCODED_VALS_BASE.length){this.charToByteMap_[this.ENCODED_VALS_WEBSAFE.charAt(i)]=i;this.charToByteMapWebSafe_[this.ENCODED_VALS.charAt(i)]=i;}}}}};/**\r\n * URL-safe base64 encoding\r\n */const base64Encode=function(str){const utf8Bytes=stringToByteArray$1(str);return base64.encodeByteArray(utf8Bytes,true);};/**\r\n * URL-safe base64 encoding (without \".\" padding in the end).\r\n * e.g. Used in JSON Web Token (JWT) parts.\r\n */const base64urlEncodeWithoutPadding=function(str){// Use base64url encoding and remove padding in the end (dot characters).\nreturn base64Encode(str).replace(/\\./g,'');};/**\r\n * URL-safe base64 decoding\r\n *\r\n * NOTE: DO NOT use the global atob() function - it does NOT support the\r\n * base64Url variant encoding.\r\n *\r\n * @param str To be decoded\r\n * @return Decoded result, if possible\r\n */const base64Decode=function(str){try{return base64.decodeString(str,true);}catch(e){console.error('base64Decode failed: ',e);}return null;};/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * Do a deep-copy of basic JavaScript Objects or Arrays.\r\n */function deepCopy(value){return deepExtend(undefined,value);}/**\r\n * Copy properties from source to target (recursively allows extension\r\n * of Objects and Arrays).  Scalar values in the target are over-written.\r\n * If target is undefined, an object of the appropriate type will be created\r\n * (and returned).\r\n *\r\n * We recursively copy all child properties of plain Objects in the source- so\r\n * that namespace- like dictionaries are merged.\r\n *\r\n * Note that the target can be a function, in which case the properties in\r\n * the source Object are copied onto it as static properties of the Function.\r\n *\r\n * Note: we don't merge __proto__ to prevent prototype pollution\r\n */function deepExtend(target,source){if(!(source instanceof Object)){return source;}switch(source.constructor){case Date:// Treat Dates like scalars; if the target date object had any child\n// properties - they will be lost!\nconst dateValue=source;return new Date(dateValue.getTime());case Object:if(target===undefined){target={};}break;case Array:// Always copy the array source and overwrite the target.\ntarget=[];break;default:// Not a plain Object - treat it as a scalar.\nreturn source;}for(const prop in source){// use isValidKey to guard against prototype pollution. See https://snyk.io/vuln/SNYK-JS-LODASH-450202\nif(!source.hasOwnProperty(prop)||!isValidKey(prop)){continue;}target[prop]=deepExtend(target[prop],source[prop]);}return target;}function isValidKey(key){return key!=='__proto__';}/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * Returns navigator.userAgent string or '' if it's not defined.\r\n * @return user agent string\r\n */function getUA(){if(typeof navigator!=='undefined'&&typeof navigator['userAgent']==='string'){return navigator['userAgent'];}else{return'';}}/**\r\n * Detect Cordova / PhoneGap / Ionic frameworks on a mobile device.\r\n *\r\n * Deliberately does not rely on checking `file://` URLs (as this fails PhoneGap\r\n * in the Ripple emulator) nor Cordova `onDeviceReady`, which would normally\r\n * wait for a callback.\r\n */function isMobileCordova(){return typeof window!=='undefined'&&// @ts-ignore Setting up an broadly applicable index signature for Window\n// just to deal with this case would probably be a bad idea.\n!!(window['cordova']||window['phonegap']||window['PhoneGap'])&&/ios|iphone|ipod|ipad|android|blackberry|iemobile/i.test(getUA());}/**\r\n * Detect Node.js.\r\n *\r\n * @return true if Node.js environment is detected.\r\n */ // Node detection logic from: https://github.com/iliakan/detect-node/\nfunction isNode(){try{return Object.prototype.toString.call(global.process)==='[object process]';}catch(e){return false;}}/**\r\n * Detect Browser Environment\r\n */function isBrowser(){return typeof self==='object'&&self.self===self;}function isBrowserExtension(){const runtime=typeof chrome==='object'?chrome.runtime:typeof browser==='object'?browser.runtime:undefined;return typeof runtime==='object'&&runtime.id!==undefined;}/**\r\n * Detect React Native.\r\n *\r\n * @return true if ReactNative environment is detected.\r\n */function isReactNative(){return typeof navigator==='object'&&navigator['product']==='ReactNative';}/** Detects Electron apps. */function isElectron(){return getUA().indexOf('Electron/')>=0;}/** Detects Internet Explorer. */function isIE(){const ua=getUA();return ua.indexOf('MSIE ')>=0||ua.indexOf('Trident/')>=0;}/** Detects Universal Windows Platform apps. */function isUWP(){return getUA().indexOf('MSAppHost/')>=0;}/**\r\n * Detect whether the current SDK build is the Node version.\r\n *\r\n * @return true if it's the Node SDK build.\r\n */function isNodeSdk(){return CONSTANTS.NODE_CLIENT===true||CONSTANTS.NODE_ADMIN===true;}/** Returns true if we are running in Safari. */function isSafari(){return!isNode()&&navigator.userAgent.includes('Safari')&&!navigator.userAgent.includes('Chrome');}/**\r\n * This method checks if indexedDB is supported by current browser/service worker context\r\n * @return true if indexedDB is supported by current browser/service worker context\r\n */function isIndexedDBAvailable(){try{return typeof indexedDB==='object';}catch(e){return false;}}/**\r\n * This method validates browser/sw context for indexedDB by opening a dummy indexedDB database and reject\r\n * if errors occur during the database open operation.\r\n *\r\n * @throws exception if current browser/sw context can't run idb.open (ex: Safari iframe, Firefox\r\n * private browsing)\r\n */function validateIndexedDBOpenable(){return new Promise((resolve,reject)=>{try{let preExist=true;const DB_CHECK_NAME='validate-browser-context-for-indexeddb-analytics-module';const request=self.indexedDB.open(DB_CHECK_NAME);request.onsuccess=()=>{request.result.close();// delete database only when it doesn't pre-exist\nif(!preExist){self.indexedDB.deleteDatabase(DB_CHECK_NAME);}resolve(true);};request.onupgradeneeded=()=>{preExist=false;};request.onerror=()=>{var _a;reject(((_a=request.error)===null||_a===void 0?void 0:_a.message)||'');};}catch(error){reject(error);}});}/**\r\n *\r\n * This method checks whether cookie is enabled within current browser\r\n * @return true if cookie is enabled within current browser\r\n */function areCookiesEnabled(){if(typeof navigator==='undefined'||!navigator.cookieEnabled){return false;}return true;}/**\r\n * Polyfill for `globalThis` object.\r\n * @returns the `globalThis` object for the given environment.\r\n */function getGlobal(){if(typeof self!=='undefined'){return self;}if(typeof window!=='undefined'){return window;}if(typeof global!=='undefined'){return global;}throw new Error('Unable to locate global object.');}/**\r\n * @license\r\n * Copyright 2022 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */const getDefaultsFromGlobal=()=>getGlobal().__FIREBASE_DEFAULTS__;/**\r\n * Attempt to read defaults from a JSON string provided to\r\n * process.env.__FIREBASE_DEFAULTS__ or a JSON file whose path is in\r\n * process.env.__FIREBASE_DEFAULTS_PATH__\r\n */const getDefaultsFromEnvVariable=()=>{if(typeof process==='undefined'||typeof process.env==='undefined'){return;}const defaultsJsonString=process.env.__FIREBASE_DEFAULTS__;if(defaultsJsonString){return JSON.parse(defaultsJsonString);}};const getDefaultsFromCookie=()=>{if(typeof document==='undefined'){return;}let match;try{match=document.cookie.match(/__FIREBASE_DEFAULTS__=([^;]+)/);}catch(e){// Some environments such as Angular Universal SSR have a\n// `document` object but error on accessing `document.cookie`.\nreturn;}const decoded=match&&base64Decode(match[1]);return decoded&&JSON.parse(decoded);};/**\r\n * Get the __FIREBASE_DEFAULTS__ object. It checks in order:\r\n * (1) if such an object exists as a property of `globalThis`\r\n * (2) if such an object was provided on a shell environment variable\r\n * (3) if such an object exists in a cookie\r\n */const getDefaults=()=>{try{return getDefaultsFromGlobal()||getDefaultsFromEnvVariable()||getDefaultsFromCookie();}catch(e){/**\r\n         * Catch-all for being unable to get __FIREBASE_DEFAULTS__ due\r\n         * to any environment case we have not accounted for. Log to\r\n         * info instead of swallowing so we can find these unknown cases\r\n         * and add paths for them if needed.\r\n         */console.info(`Unable to get __FIREBASE_DEFAULTS__ due to: ${e}`);return;}};/**\r\n * Returns emulator host stored in the __FIREBASE_DEFAULTS__ object\r\n * for the given product.\r\n * @returns a URL host formatted like `127.0.0.1:9999` or `[::1]:4000` if available\r\n * @public\r\n */const getDefaultEmulatorHost=productName=>{var _a,_b;return(_b=(_a=getDefaults())===null||_a===void 0?void 0:_a.emulatorHosts)===null||_b===void 0?void 0:_b[productName];};/**\r\n * Returns emulator hostname and port stored in the __FIREBASE_DEFAULTS__ object\r\n * for the given product.\r\n * @returns a pair of hostname and port like `[\"::1\", 4000]` if available\r\n * @public\r\n */const getDefaultEmulatorHostnameAndPort=productName=>{const host=getDefaultEmulatorHost(productName);if(!host){return undefined;}const separatorIndex=host.lastIndexOf(':');// Finding the last since IPv6 addr also has colons.\nif(separatorIndex<=0||separatorIndex+1===host.length){throw new Error(`Invalid host ${host} with no separate hostname and port!`);}// eslint-disable-next-line no-restricted-globals\nconst port=parseInt(host.substring(separatorIndex+1),10);if(host[0]==='['){// Bracket-quoted `[ipv6addr]:port` => return \"ipv6addr\" (without brackets).\nreturn[host.substring(1,separatorIndex-1),port];}else{return[host.substring(0,separatorIndex),port];}};/**\r\n * Returns Firebase app config stored in the __FIREBASE_DEFAULTS__ object.\r\n * @public\r\n */const getDefaultAppConfig=()=>{var _a;return(_a=getDefaults())===null||_a===void 0?void 0:_a.config;};/**\r\n * Returns an experimental setting on the __FIREBASE_DEFAULTS__ object (properties\r\n * prefixed by \"_\")\r\n * @public\r\n */const getExperimentalSetting=name=>{var _a;return(_a=getDefaults())===null||_a===void 0?void 0:_a[`_${name}`];};/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */class Deferred{constructor(){this.reject=()=>{};this.resolve=()=>{};this.promise=new Promise((resolve,reject)=>{this.resolve=resolve;this.reject=reject;});}/**\r\n     * Our API internals are not promiseified and cannot because our callback APIs have subtle expectations around\r\n     * invoking promises inline, which Promises are forbidden to do. This method accepts an optional node-style callback\r\n     * and returns a node-style callback which will resolve or reject the Deferred's promise.\r\n     */wrapCallback(callback){return(error,value)=>{if(error){this.reject(error);}else{this.resolve(value);}if(typeof callback==='function'){// Attaching noop handler just in case developer wasn't expecting\n// promises\nthis.promise.catch(()=>{});// Some of our callbacks don't expect a value and our own tests\n// assert that the parameter length is 1\nif(callback.length===1){callback(error);}else{callback(error,value);}}};}}/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */function createMockUserToken(token,projectId){if(token.uid){throw new Error('The \"uid\" field is no longer supported by mockUserToken. Please use \"sub\" instead for Firebase Auth User ID.');}// Unsecured JWTs use \"none\" as the algorithm.\nconst header={alg:'none',type:'JWT'};const project=projectId||'demo-project';const iat=token.iat||0;const sub=token.sub||token.user_id;if(!sub){throw new Error(\"mockUserToken must contain 'sub' or 'user_id' field!\");}const payload=Object.assign({// Set all required fields to decent defaults\niss:`https://securetoken.google.com/${project}`,aud:project,iat,exp:iat+3600,auth_time:iat,sub,user_id:sub,firebase:{sign_in_provider:'custom',identities:{}}},token);// Unsecured JWTs use the empty string as a signature.\nconst signature='';return[base64urlEncodeWithoutPadding(JSON.stringify(header)),base64urlEncodeWithoutPadding(JSON.stringify(payload)),signature].join('.');}/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * @fileoverview Standardized Firebase Error.\r\n *\r\n * Usage:\r\n *\r\n *   // Typescript string literals for type-safe codes\r\n *   type Err =\r\n *     'unknown' |\r\n *     'object-not-found'\r\n *     ;\r\n *\r\n *   // Closure enum for type-safe error codes\r\n *   // at-enum {string}\r\n *   var Err = {\r\n *     UNKNOWN: 'unknown',\r\n *     OBJECT_NOT_FOUND: 'object-not-found',\r\n *   }\r\n *\r\n *   let errors: Map<Err, string> = {\r\n *     'generic-error': \"Unknown error\",\r\n *     'file-not-found': \"Could not find file: {$file}\",\r\n *   };\r\n *\r\n *   // Type-safe function - must pass a valid error code as param.\r\n *   let error = new ErrorFactory<Err>('service', 'Service', errors);\r\n *\r\n *   ...\r\n *   throw error.create(Err.GENERIC);\r\n *   ...\r\n *   throw error.create(Err.FILE_NOT_FOUND, {'file': fileName});\r\n *   ...\r\n *   // Service: Could not file file: foo.txt (service/file-not-found).\r\n *\r\n *   catch (e) {\r\n *     assert(e.message === \"Could not find file: foo.txt.\");\r\n *     if ((e as FirebaseError)?.code === 'service/file-not-found') {\r\n *       console.log(\"Could not read file: \" + e['file']);\r\n *     }\r\n *   }\r\n */const ERROR_NAME='FirebaseError';// Based on code from:\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error#Custom_Error_Types\nclass FirebaseError extends Error{constructor(/** The error code for this error. */code,message,/** Custom data for this error. */customData){super(message);this.code=code;this.customData=customData;/** The custom name for all FirebaseErrors. */this.name=ERROR_NAME;// Fix For ES5\n// https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\nObject.setPrototypeOf(this,FirebaseError.prototype);// Maintains proper stack trace for where our error was thrown.\n// Only available on V8.\nif(Error.captureStackTrace){Error.captureStackTrace(this,ErrorFactory.prototype.create);}}}class ErrorFactory{constructor(service,serviceName,errors){this.service=service;this.serviceName=serviceName;this.errors=errors;}create(code){const customData=(arguments.length<=1?undefined:arguments[1])||{};const fullCode=`${this.service}/${code}`;const template=this.errors[code];const message=template?replaceTemplate(template,customData):'Error';// Service Name: Error message (service/code).\nconst fullMessage=`${this.serviceName}: ${message} (${fullCode}).`;const error=new FirebaseError(fullCode,fullMessage,customData);return error;}}function replaceTemplate(template,data){return template.replace(PATTERN,(_,key)=>{const value=data[key];return value!=null?String(value):`<${key}?>`;});}const PATTERN=/\\{\\$([^}]+)}/g;/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * Evaluates a JSON string into a javascript object.\r\n *\r\n * @param {string} str A string containing JSON.\r\n * @return {*} The javascript object representing the specified JSON.\r\n */function jsonEval(str){return JSON.parse(str);}/**\r\n * Returns JSON representing a javascript object.\r\n * @param {*} data Javascript object to be stringified.\r\n * @return {string} The JSON contents of the object.\r\n */function stringify(data){return JSON.stringify(data);}/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * Decodes a Firebase auth. token into constituent parts.\r\n *\r\n * Notes:\r\n * - May return with invalid / incomplete claims if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n */const decode=function(token){let header={},claims={},data={},signature='';try{const parts=token.split('.');header=jsonEval(base64Decode(parts[0])||'');claims=jsonEval(base64Decode(parts[1])||'');signature=parts[2];data=claims['d']||{};delete claims['d'];}catch(e){}return{header,claims,data,signature};};/**\r\n * Decodes a Firebase auth. token and checks the validity of its time-based claims. Will return true if the\r\n * token is within the time window authorized by the 'nbf' (not-before) and 'iat' (issued-at) claims.\r\n *\r\n * Notes:\r\n * - May return a false negative if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n */const isValidTimestamp=function(token){const claims=decode(token).claims;const now=Math.floor(new Date().getTime()/1000);let validSince=0,validUntil=0;if(typeof claims==='object'){if(claims.hasOwnProperty('nbf')){validSince=claims['nbf'];}else if(claims.hasOwnProperty('iat')){validSince=claims['iat'];}if(claims.hasOwnProperty('exp')){validUntil=claims['exp'];}else{// token will expire after 24h by default\nvalidUntil=validSince+86400;}}return!!now&&!!validSince&&!!validUntil&&now>=validSince&&now<=validUntil;};/**\r\n * Decodes a Firebase auth. token and returns its issued at time if valid, null otherwise.\r\n *\r\n * Notes:\r\n * - May return null if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n */const issuedAtTime=function(token){const claims=decode(token).claims;if(typeof claims==='object'&&claims.hasOwnProperty('iat')){return claims['iat'];}return null;};/**\r\n * Decodes a Firebase auth. token and checks the validity of its format. Expects a valid issued-at time.\r\n *\r\n * Notes:\r\n * - May return a false negative if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n */const isValidFormat=function(token){const decoded=decode(token),claims=decoded.claims;return!!claims&&typeof claims==='object'&&claims.hasOwnProperty('iat');};/**\r\n * Attempts to peer into an auth token and determine if it's an admin auth token by looking at the claims portion.\r\n *\r\n * Notes:\r\n * - May return a false negative if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n */const isAdmin=function(token){const claims=decode(token).claims;return typeof claims==='object'&&claims['admin']===true;};/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */function contains(obj,key){return Object.prototype.hasOwnProperty.call(obj,key);}function safeGet(obj,key){if(Object.prototype.hasOwnProperty.call(obj,key)){return obj[key];}else{return undefined;}}function isEmpty(obj){for(const key in obj){if(Object.prototype.hasOwnProperty.call(obj,key)){return false;}}return true;}function map(obj,fn,contextObj){const res={};for(const key in obj){if(Object.prototype.hasOwnProperty.call(obj,key)){res[key]=fn.call(contextObj,obj[key],key,obj);}}return res;}/**\r\n * Deep equal two objects. Support Arrays and Objects.\r\n */function deepEqual(a,b){if(a===b){return true;}const aKeys=Object.keys(a);const bKeys=Object.keys(b);for(const k of aKeys){if(!bKeys.includes(k)){return false;}const aProp=a[k];const bProp=b[k];if(isObject(aProp)&&isObject(bProp)){if(!deepEqual(aProp,bProp)){return false;}}else if(aProp!==bProp){return false;}}for(const k of bKeys){if(!aKeys.includes(k)){return false;}}return true;}function isObject(thing){return thing!==null&&typeof thing==='object';}/**\r\n * @license\r\n * Copyright 2022 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * Rejects if the given promise doesn't resolve in timeInMS milliseconds.\r\n * @internal\r\n */function promiseWithTimeout(promise){let timeInMS=arguments.length>1&&arguments[1]!==undefined?arguments[1]:2000;const deferredPromise=new Deferred();setTimeout(()=>deferredPromise.reject('timeout!'),timeInMS);promise.then(deferredPromise.resolve,deferredPromise.reject);return deferredPromise.promise;}/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * Returns a querystring-formatted string (e.g. &arg=val&arg2=val2) from a\r\n * params object (e.g. {arg: 'val', arg2: 'val2'})\r\n * Note: You must prepend it with ? when adding it to a URL.\r\n */function querystring(querystringParams){const params=[];for(const[key,value]of Object.entries(querystringParams)){if(Array.isArray(value)){value.forEach(arrayVal=>{params.push(encodeURIComponent(key)+'='+encodeURIComponent(arrayVal));});}else{params.push(encodeURIComponent(key)+'='+encodeURIComponent(value));}}return params.length?'&'+params.join('&'):'';}/**\r\n * Decodes a querystring (e.g. ?arg=val&arg2=val2) into a params object\r\n * (e.g. {arg: 'val', arg2: 'val2'})\r\n */function querystringDecode(querystring){const obj={};const tokens=querystring.replace(/^\\?/,'').split('&');tokens.forEach(token=>{if(token){const[key,value]=token.split('=');obj[decodeURIComponent(key)]=decodeURIComponent(value);}});return obj;}/**\r\n * Extract the query string part of a URL, including the leading question mark (if present).\r\n */function extractQuerystring(url){const queryStart=url.indexOf('?');if(!queryStart){return'';}const fragmentStart=url.indexOf('#',queryStart);return url.substring(queryStart,fragmentStart>0?fragmentStart:undefined);}/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * @fileoverview SHA-1 cryptographic hash.\r\n * Variable names follow the notation in FIPS PUB 180-3:\r\n * http://csrc.nist.gov/publications/fips/fips180-3/fips180-3_final.pdf.\r\n *\r\n * Usage:\r\n *   var sha1 = new sha1();\r\n *   sha1.update(bytes);\r\n *   var hash = sha1.digest();\r\n *\r\n * Performance:\r\n *   Chrome 23:   ~400 Mbit/s\r\n *   Firefox 16:  ~250 Mbit/s\r\n *\r\n */ /**\r\n * SHA-1 cryptographic hash constructor.\r\n *\r\n * The properties declared here are discussed in the above algorithm document.\r\n * @constructor\r\n * @final\r\n * @struct\r\n */class Sha1{constructor(){/**\r\n         * Holds the previous values of accumulated variables a-e in the compress_\r\n         * function.\r\n         * @private\r\n         */this.chain_=[];/**\r\n         * A buffer holding the partially computed hash result.\r\n         * @private\r\n         */this.buf_=[];/**\r\n         * An array of 80 bytes, each a part of the message to be hashed.  Referred to\r\n         * as the message schedule in the docs.\r\n         * @private\r\n         */this.W_=[];/**\r\n         * Contains data needed to pad messages less than 64 bytes.\r\n         * @private\r\n         */this.pad_=[];/**\r\n         * @private {number}\r\n         */this.inbuf_=0;/**\r\n         * @private {number}\r\n         */this.total_=0;this.blockSize=512/8;this.pad_[0]=128;for(let i=1;i<this.blockSize;++i){this.pad_[i]=0;}this.reset();}reset(){this.chain_[0]=0x67452301;this.chain_[1]=0xefcdab89;this.chain_[2]=0x98badcfe;this.chain_[3]=0x10325476;this.chain_[4]=0xc3d2e1f0;this.inbuf_=0;this.total_=0;}/**\r\n     * Internal compress helper function.\r\n     * @param buf Block to compress.\r\n     * @param offset Offset of the block in the buffer.\r\n     * @private\r\n     */compress_(buf,offset){if(!offset){offset=0;}const W=this.W_;// get 16 big endian words\nif(typeof buf==='string'){for(let i=0;i<16;i++){// TODO(user): [bug 8140122] Recent versions of Safari for Mac OS and iOS\n// have a bug that turns the post-increment ++ operator into pre-increment\n// during JIT compilation.  We have code that depends heavily on SHA-1 for\n// correctness and which is affected by this bug, so I've removed all uses\n// of post-increment ++ in which the result value is used.  We can revert\n// this change once the Safari bug\n// (https://bugs.webkit.org/show_bug.cgi?id=109036) has been fixed and\n// most clients have been updated.\nW[i]=buf.charCodeAt(offset)<<24|buf.charCodeAt(offset+1)<<16|buf.charCodeAt(offset+2)<<8|buf.charCodeAt(offset+3);offset+=4;}}else{for(let i=0;i<16;i++){W[i]=buf[offset]<<24|buf[offset+1]<<16|buf[offset+2]<<8|buf[offset+3];offset+=4;}}// expand to 80 words\nfor(let i=16;i<80;i++){const t=W[i-3]^W[i-8]^W[i-14]^W[i-16];W[i]=(t<<1|t>>>31)&0xffffffff;}let a=this.chain_[0];let b=this.chain_[1];let c=this.chain_[2];let d=this.chain_[3];let e=this.chain_[4];let f,k;// TODO(user): Try to unroll this loop to speed up the computation.\nfor(let i=0;i<80;i++){if(i<40){if(i<20){f=d^b&(c^d);k=0x5a827999;}else{f=b^c^d;k=0x6ed9eba1;}}else{if(i<60){f=b&c|d&(b|c);k=0x8f1bbcdc;}else{f=b^c^d;k=0xca62c1d6;}}const t=(a<<5|a>>>27)+f+e+k+W[i]&0xffffffff;e=d;d=c;c=(b<<30|b>>>2)&0xffffffff;b=a;a=t;}this.chain_[0]=this.chain_[0]+a&0xffffffff;this.chain_[1]=this.chain_[1]+b&0xffffffff;this.chain_[2]=this.chain_[2]+c&0xffffffff;this.chain_[3]=this.chain_[3]+d&0xffffffff;this.chain_[4]=this.chain_[4]+e&0xffffffff;}update(bytes,length){// TODO(johnlenz): tighten the function signature and remove this check\nif(bytes==null){return;}if(length===undefined){length=bytes.length;}const lengthMinusBlock=length-this.blockSize;let n=0;// Using local instead of member variables gives ~5% speedup on Firefox 16.\nconst buf=this.buf_;let inbuf=this.inbuf_;// The outer while loop should execute at most twice.\nwhile(n<length){// When we have no data in the block to top up, we can directly process the\n// input buffer (assuming it contains sufficient data). This gives ~25%\n// speedup on Chrome 23 and ~15% speedup on Firefox 16, but requires that\n// the data is provided in large chunks (or in multiples of 64 bytes).\nif(inbuf===0){while(n<=lengthMinusBlock){this.compress_(bytes,n);n+=this.blockSize;}}if(typeof bytes==='string'){while(n<length){buf[inbuf]=bytes.charCodeAt(n);++inbuf;++n;if(inbuf===this.blockSize){this.compress_(buf);inbuf=0;// Jump to the outer loop so we use the full-block optimization.\nbreak;}}}else{while(n<length){buf[inbuf]=bytes[n];++inbuf;++n;if(inbuf===this.blockSize){this.compress_(buf);inbuf=0;// Jump to the outer loop so we use the full-block optimization.\nbreak;}}}}this.inbuf_=inbuf;this.total_+=length;}/** @override */digest(){const digest=[];let totalBits=this.total_*8;// Add pad 0x80 0x00*.\nif(this.inbuf_<56){this.update(this.pad_,56-this.inbuf_);}else{this.update(this.pad_,this.blockSize-(this.inbuf_-56));}// Add # bits.\nfor(let i=this.blockSize-1;i>=56;i--){this.buf_[i]=totalBits&255;totalBits/=256;// Don't use bit-shifting here!\n}this.compress_(this.buf_);let n=0;for(let i=0;i<5;i++){for(let j=24;j>=0;j-=8){digest[n]=this.chain_[i]>>j&255;++n;}}return digest;}}/**\r\n * Helper to make a Subscribe function (just like Promise helps make a\r\n * Thenable).\r\n *\r\n * @param executor Function which can make calls to a single Observer\r\n *     as a proxy.\r\n * @param onNoObservers Callback when count of Observers goes to zero.\r\n */function createSubscribe(executor,onNoObservers){const proxy=new ObserverProxy(executor,onNoObservers);return proxy.subscribe.bind(proxy);}/**\r\n * Implement fan-out for any number of Observers attached via a subscribe\r\n * function.\r\n */class ObserverProxy{/**\r\n     * @param executor Function which can make calls to a single Observer\r\n     *     as a proxy.\r\n     * @param onNoObservers Callback when count of Observers goes to zero.\r\n     */constructor(executor,onNoObservers){this.observers=[];this.unsubscribes=[];this.observerCount=0;// Micro-task scheduling by calling task.then().\nthis.task=Promise.resolve();this.finalized=false;this.onNoObservers=onNoObservers;// Call the executor asynchronously so subscribers that are called\n// synchronously after the creation of the subscribe function\n// can still receive the very first value generated in the executor.\nthis.task.then(()=>{executor(this);}).catch(e=>{this.error(e);});}next(value){this.forEachObserver(observer=>{observer.next(value);});}error(error){this.forEachObserver(observer=>{observer.error(error);});this.close(error);}complete(){this.forEachObserver(observer=>{observer.complete();});this.close();}/**\r\n     * Subscribe function that can be used to add an Observer to the fan-out list.\r\n     *\r\n     * - We require that no event is sent to a subscriber sychronously to their\r\n     *   call to subscribe().\r\n     */subscribe(nextOrObserver,error,complete){let observer;if(nextOrObserver===undefined&&error===undefined&&complete===undefined){throw new Error('Missing Observer.');}// Assemble an Observer object when passed as callback functions.\nif(implementsAnyMethods(nextOrObserver,['next','error','complete'])){observer=nextOrObserver;}else{observer={next:nextOrObserver,error,complete};}if(observer.next===undefined){observer.next=noop;}if(observer.error===undefined){observer.error=noop;}if(observer.complete===undefined){observer.complete=noop;}const unsub=this.unsubscribeOne.bind(this,this.observers.length);// Attempt to subscribe to a terminated Observable - we\n// just respond to the Observer with the final error or complete\n// event.\nif(this.finalized){// eslint-disable-next-line @typescript-eslint/no-floating-promises\nthis.task.then(()=>{try{if(this.finalError){observer.error(this.finalError);}else{observer.complete();}}catch(e){// nothing\n}return;});}this.observers.push(observer);return unsub;}// Unsubscribe is synchronous - we guarantee that no events are sent to\n// any unsubscribed Observer.\nunsubscribeOne(i){if(this.observers===undefined||this.observers[i]===undefined){return;}delete this.observers[i];this.observerCount-=1;if(this.observerCount===0&&this.onNoObservers!==undefined){this.onNoObservers(this);}}forEachObserver(fn){if(this.finalized){// Already closed by previous event....just eat the additional values.\nreturn;}// Since sendOne calls asynchronously - there is no chance that\n// this.observers will become undefined.\nfor(let i=0;i<this.observers.length;i++){this.sendOne(i,fn);}}// Call the Observer via one of it's callback function. We are careful to\n// confirm that the observe has not been unsubscribed since this asynchronous\n// function had been queued.\nsendOne(i,fn){// Execute the callback asynchronously\n// eslint-disable-next-line @typescript-eslint/no-floating-promises\nthis.task.then(()=>{if(this.observers!==undefined&&this.observers[i]!==undefined){try{fn(this.observers[i]);}catch(e){// Ignore exceptions raised in Observers or missing methods of an\n// Observer.\n// Log error to console. b/31404806\nif(typeof console!=='undefined'&&console.error){console.error(e);}}}});}close(err){if(this.finalized){return;}this.finalized=true;if(err!==undefined){this.finalError=err;}// Proxy is no longer needed - garbage collect references\n// eslint-disable-next-line @typescript-eslint/no-floating-promises\nthis.task.then(()=>{this.observers=undefined;this.onNoObservers=undefined;});}}/** Turn synchronous function into one called asynchronously. */ // eslint-disable-next-line @typescript-eslint/ban-types\nfunction async(fn,onError){return function(){for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}Promise.resolve(true).then(()=>{fn(...args);}).catch(error=>{if(onError){onError(error);}});};}/**\r\n * Return true if the object passed in implements any of the named methods.\r\n */function implementsAnyMethods(obj,methods){if(typeof obj!=='object'||obj===null){return false;}for(const method of methods){if(method in obj&&typeof obj[method]==='function'){return true;}}return false;}function noop(){// do nothing\n}/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * Check to make sure the appropriate number of arguments are provided for a public function.\r\n * Throws an error if it fails.\r\n *\r\n * @param fnName The function name\r\n * @param minCount The minimum number of arguments to allow for the function call\r\n * @param maxCount The maximum number of argument to allow for the function call\r\n * @param argCount The actual number of arguments provided.\r\n */const validateArgCount=function(fnName,minCount,maxCount,argCount){let argError;if(argCount<minCount){argError='at least '+minCount;}else if(argCount>maxCount){argError=maxCount===0?'none':'no more than '+maxCount;}if(argError){const error=fnName+' failed: Was called with '+argCount+(argCount===1?' argument.':' arguments.')+' Expects '+argError+'.';throw new Error(error);}};/**\r\n * Generates a string to prefix an error message about failed argument validation\r\n *\r\n * @param fnName The function name\r\n * @param argName The name of the argument\r\n * @return The prefix to add to the error thrown for validation.\r\n */function errorPrefix(fnName,argName){return`${fnName} failed: ${argName} argument `;}/**\r\n * @param fnName\r\n * @param argumentNumber\r\n * @param namespace\r\n * @param optional\r\n */function validateNamespace(fnName,namespace,optional){if(optional&&!namespace){return;}if(typeof namespace!=='string'){//TODO: I should do more validation here. We only allow certain chars in namespaces.\nthrow new Error(errorPrefix(fnName,'namespace')+'must be a valid firebase namespace.');}}function validateCallback(fnName,argumentName,// eslint-disable-next-line @typescript-eslint/ban-types\ncallback,optional){if(optional&&!callback){return;}if(typeof callback!=='function'){throw new Error(errorPrefix(fnName,argumentName)+'must be a valid function.');}}function validateContextObject(fnName,argumentName,context,optional){if(optional&&!context){return;}if(typeof context!=='object'||context===null){throw new Error(errorPrefix(fnName,argumentName)+'must be a valid context object.');}}/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ // Code originally came from goog.crypt.stringToUtf8ByteArray, but for some reason they\n// automatically replaced '\\r\\n' with '\\n', and they didn't handle surrogate pairs,\n// so it's been modified.\n// Note that not all Unicode characters appear as single characters in JavaScript strings.\n// fromCharCode returns the UTF-16 encoding of a character - so some Unicode characters\n// use 2 characters in Javascript.  All 4-byte UTF-8 characters begin with a first\n// character in the range 0xD800 - 0xDBFF (the first character of a so-called surrogate\n// pair).\n// See http://www.ecma-international.org/ecma-262/5.1/#sec-15.1.3\n/**\r\n * @param {string} str\r\n * @return {Array}\r\n */const stringToByteArray=function(str){const out=[];let p=0;for(let i=0;i<str.length;i++){let c=str.charCodeAt(i);// Is this the lead surrogate in a surrogate pair?\nif(c>=0xd800&&c<=0xdbff){const high=c-0xd800;// the high 10 bits.\ni++;assert(i<str.length,'Surrogate pair missing trail surrogate.');const low=str.charCodeAt(i)-0xdc00;// the low 10 bits.\nc=0x10000+(high<<10)+low;}if(c<128){out[p++]=c;}else if(c<2048){out[p++]=c>>6|192;out[p++]=c&63|128;}else if(c<65536){out[p++]=c>>12|224;out[p++]=c>>6&63|128;out[p++]=c&63|128;}else{out[p++]=c>>18|240;out[p++]=c>>12&63|128;out[p++]=c>>6&63|128;out[p++]=c&63|128;}}return out;};/**\r\n * Calculate length without actually converting; useful for doing cheaper validation.\r\n * @param {string} str\r\n * @return {number}\r\n */const stringLength=function(str){let p=0;for(let i=0;i<str.length;i++){const c=str.charCodeAt(i);if(c<128){p++;}else if(c<2048){p+=2;}else if(c>=0xd800&&c<=0xdbff){// Lead surrogate of a surrogate pair.  The pair together will take 4 bytes to represent.\np+=4;i++;// skip trail surrogate.\n}else{p+=3;}}return p;};/**\r\n * @license\r\n * Copyright 2022 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * Copied from https://stackoverflow.com/a/2117523\r\n * Generates a new uuid.\r\n * @public\r\n */const uuidv4=function(){return'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,c=>{const r=Math.random()*16|0,v=c==='x'?r:r&0x3|0x8;return v.toString(16);});};/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * The amount of milliseconds to exponentially increase.\r\n */const DEFAULT_INTERVAL_MILLIS=1000;/**\r\n * The factor to backoff by.\r\n * Should be a number greater than 1.\r\n */const DEFAULT_BACKOFF_FACTOR=2;/**\r\n * The maximum milliseconds to increase to.\r\n *\r\n * <p>Visible for testing\r\n */const MAX_VALUE_MILLIS=4*60*60*1000;// Four hours, like iOS and Android.\n/**\r\n * The percentage of backoff time to randomize by.\r\n * See\r\n * http://go/safe-client-behavior#step-1-determine-the-appropriate-retry-interval-to-handle-spike-traffic\r\n * for context.\r\n *\r\n * <p>Visible for testing\r\n */const RANDOM_FACTOR=0.5;/**\r\n * Based on the backoff method from\r\n * https://github.com/google/closure-library/blob/master/closure/goog/math/exponentialbackoff.js.\r\n * Extracted here so we don't need to pass metadata and a stateful ExponentialBackoff object around.\r\n */function calculateBackoffMillis(backoffCount){let intervalMillis=arguments.length>1&&arguments[1]!==undefined?arguments[1]:DEFAULT_INTERVAL_MILLIS;let backoffFactor=arguments.length>2&&arguments[2]!==undefined?arguments[2]:DEFAULT_BACKOFF_FACTOR;// Calculates an exponentially increasing value.\n// Deviation: calculates value from count and a constant interval, so we only need to save value\n// and count to restore state.\nconst currBaseValue=intervalMillis*Math.pow(backoffFactor,backoffCount);// A random \"fuzz\" to avoid waves of retries.\n// Deviation: randomFactor is required.\nconst randomWait=Math.round(// A fraction of the backoff value to add/subtract.\n// Deviation: changes multiplication order to improve readability.\nRANDOM_FACTOR*currBaseValue*(// A random float (rounded to int by Math.round above) in the range [-1, 1]. Determines\n// if we add or subtract.\nMath.random()-0.5)*2);// Limits backoff to max to avoid effectively permanent backoff.\nreturn Math.min(MAX_VALUE_MILLIS,currBaseValue+randomWait);}/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * Provide English ordinal letters after a number\r\n */function ordinal(i){if(!Number.isFinite(i)){return`${i}`;}return i+indicator(i);}function indicator(i){i=Math.abs(i);const cent=i%100;if(cent>=10&&cent<=20){return'th';}const dec=i%10;if(dec===1){return'st';}if(dec===2){return'nd';}if(dec===3){return'rd';}return'th';}/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */function getModularInstance(service){if(service&&service._delegate){return service._delegate;}else{return service;}}\n\n//# sourceURL=webpack://__ember_auto_import__/./node_modules/@firebase/util/dist/index.esm2017.js?");

/***/ }),

/***/ "./node_modules/css-loader/dist/runtime/api.js":
/*!*****************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/api.js ***!
  \*****************************************************/
/***/ ((module) => {

eval("/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/ // css base code, injected by the css-loader\n// eslint-disable-next-line func-names\nmodule.exports=function(cssWithMappingToString){var list=[];// return the list of modules as css string\nlist.toString=function toString(){return this.map(function(item){var content=cssWithMappingToString(item);if(item[2]){return\"@media \".concat(item[2],\" {\").concat(content,\"}\");}return content;}).join(\"\");};// import a list of modules into the list\n// eslint-disable-next-line func-names\nlist.i=function(modules,mediaQuery,dedupe){if(typeof modules===\"string\"){// eslint-disable-next-line no-param-reassign\nmodules=[[null,modules,\"\"]];}var alreadyImportedModules={};if(dedupe){for(var i=0;i<this.length;i++){// eslint-disable-next-line prefer-destructuring\nvar id=this[i][0];if(id!=null){alreadyImportedModules[id]=true;}}}for(var _i=0;_i<modules.length;_i++){var item=[].concat(modules[_i]);if(dedupe&&alreadyImportedModules[item[0]]){// eslint-disable-next-line no-continue\ncontinue;}if(mediaQuery){if(!item[2]){item[2]=mediaQuery;}else{item[2]=\"\".concat(mediaQuery,\" and \").concat(item[2]);}}list.push(item);}};return list;};\n\n//# sourceURL=webpack://__ember_auto_import__/./node_modules/css-loader/dist/runtime/api.js?");

/***/ }),

/***/ "./node_modules/ember-welcome-page/dist/components/welcome-page.js":
/*!*************************************************************************!*\
  !*** ./node_modules/ember-welcome-page/dist/components/welcome-page.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ WelcomePageComponent)\n/* harmony export */ });\n/* harmony import */ var _ember_template_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ember/template-factory */ \"@ember/template-factory\");\n/* harmony import */ var _ember_template_factory__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_ember_template_factory__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _ember_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ember/component */ \"@ember/component\");\n/* harmony import */ var _ember_component__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_ember_component__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _ember_application__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ember/application */ \"@ember/application\");\n/* harmony import */ var _ember_application__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_ember_application__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _ember_version__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ember/version */ \"@ember/version\");\n/* harmony import */ var _ember_version__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_ember_version__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _glimmer_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @glimmer/component */ \"@glimmer/component\");\n/* harmony import */ var _glimmer_component__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_glimmer_component__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _welcome_page_css__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./welcome-page.css */ \"./node_modules/ember-welcome-page/dist/components/welcome-page.css\");\nvar TEMPLATE=(0,_ember_template_factory__WEBPACK_IMPORTED_MODULE_0__.createTemplateFactory)(/*\n  <main id=\"ember-welcome-page-id-selector\" data-ember-version=\"{{this.emberVersion}}\">\n  <div class=\"columns\">\n    <div class=\"tomster\">\n      <img src=\"{{this.rootURL}}ember-welcome-page/images/construction.png\" alt=\"Under construction\">\n    </div>\n    <div class=\"welcome\">\n      <h1 id=\"title\">Congratulations, you made it!</h1>\n\n      <p>You&rsquo;ve officially spun up your Ember app. You&rsquo;ve got one more decision to make: what do you want to do next? We&rsquo;d suggest one of the following to help you get going:</p>\n      <ul>\n        <li><a href=\"https://guides.emberjs.com/{{if this.isCurrent '' 'v'}}{{this.emberVersion}}/getting-started/quick-start/\">Quick Start</a> - a quick introduction to how Ember works. Learn about defining your first route, writing a UI component and deploying your application.</li>\n        <li><a href=\"https://guides.emberjs.com/{{if this.isCurrent '' 'v'}}{{this.emberVersion}}/tutorial/ember-cli/\">Ember Guides</a> - this is our more thorough, hands-on intro to Ember. Your crash course in Ember philosophy, background and some in-depth discussion of how things work (and why they work the way they do).</li>\n      </ul>\n      <p>If you run into problems, please join <a href=\"https://discord.gg/emberjs\">our community's Discord server</a> or visit <a href=\"http://discuss.emberjs.com/\">our forums</a> for ideas and answers— our community is filled with friendly folks who are willing to help! We enjoy helping new Ember developers get started, and our <a href=\"https://emberjs.com/community/\">Ember Community</a> is incredibly supportive.</p>\n    </div>\n  </div>\n  <p class=\"postscript\">To remove this welcome message, remove the\n    <code>\n      &lt;WelcomePage /&gt;\n    </code>\n    component from your\n    <code>\n      app/templates/application.hbs\n    </code>\n    file and save it...you'll see this page update soon after!\n  </p>\n</main>\n\n\n*/{\"id\":\"eFCwC0gj\",\"block\":\"[[[10,\\\"main\\\"],[14,1,\\\"ember-welcome-page-id-selector\\\"],[15,\\\"data-ember-version\\\",[29,[[30,0,[\\\"emberVersion\\\"]]]]],[12],[1,\\\"\\\\n  \\\"],[10,0],[14,0,\\\"columns\\\"],[12],[1,\\\"\\\\n    \\\"],[10,0],[14,0,\\\"tomster\\\"],[12],[1,\\\"\\\\n      \\\"],[10,\\\"img\\\"],[15,\\\"src\\\",[29,[[30,0,[\\\"rootURL\\\"]],\\\"ember-welcome-page/images/construction.png\\\"]]],[14,\\\"alt\\\",\\\"Under construction\\\"],[12],[13],[1,\\\"\\\\n    \\\"],[13],[1,\\\"\\\\n    \\\"],[10,0],[14,0,\\\"welcome\\\"],[12],[1,\\\"\\\\n      \\\"],[10,\\\"h1\\\"],[14,1,\\\"title\\\"],[12],[1,\\\"Congratulations, you made it!\\\"],[13],[1,\\\"\\\\n\\\\n      \\\"],[10,2],[12],[1,\\\"You’ve officially spun up your Ember app. You’ve got one more decision to make: what do you want to do next? We’d suggest one of the following to help you get going:\\\"],[13],[1,\\\"\\\\n      \\\"],[10,\\\"ul\\\"],[12],[1,\\\"\\\\n        \\\"],[10,\\\"li\\\"],[12],[10,3],[15,6,[29,[\\\"https://guides.emberjs.com/\\\",[52,[30,0,[\\\"isCurrent\\\"]],\\\"\\\",\\\"v\\\"],[30,0,[\\\"emberVersion\\\"]],\\\"/getting-started/quick-start/\\\"]]],[12],[1,\\\"Quick Start\\\"],[13],[1,\\\" - a quick introduction to how Ember works. Learn about defining your first route, writing a UI component and deploying your application.\\\"],[13],[1,\\\"\\\\n        \\\"],[10,\\\"li\\\"],[12],[10,3],[15,6,[29,[\\\"https://guides.emberjs.com/\\\",[52,[30,0,[\\\"isCurrent\\\"]],\\\"\\\",\\\"v\\\"],[30,0,[\\\"emberVersion\\\"]],\\\"/tutorial/ember-cli/\\\"]]],[12],[1,\\\"Ember Guides\\\"],[13],[1,\\\" - this is our more thorough, hands-on intro to Ember. Your crash course in Ember philosophy, background and some in-depth discussion of how things work (and why they work the way they do).\\\"],[13],[1,\\\"\\\\n      \\\"],[13],[1,\\\"\\\\n      \\\"],[10,2],[12],[1,\\\"If you run into problems, please join \\\"],[10,3],[14,6,\\\"https://discord.gg/emberjs\\\"],[12],[1,\\\"our community's Discord server\\\"],[13],[1,\\\" or visit \\\"],[10,3],[14,6,\\\"http://discuss.emberjs.com/\\\"],[12],[1,\\\"our forums\\\"],[13],[1,\\\" for ideas and answers— our community is filled with friendly folks who are willing to help! We enjoy helping new Ember developers get started, and our \\\"],[10,3],[14,6,\\\"https://emberjs.com/community/\\\"],[12],[1,\\\"Ember Community\\\"],[13],[1,\\\" is incredibly supportive.\\\"],[13],[1,\\\"\\\\n    \\\"],[13],[1,\\\"\\\\n  \\\"],[13],[1,\\\"\\\\n  \\\"],[10,2],[14,0,\\\"postscript\\\"],[12],[1,\\\"To remove this welcome message, remove the\\\\n    \\\"],[10,\\\"code\\\"],[12],[1,\\\"\\\\n      <WelcomePage />\\\\n    \\\"],[13],[1,\\\"\\\\n    component from your\\\\n    \\\"],[10,\\\"code\\\"],[12],[1,\\\"\\\\n      app/templates/application.hbs\\\\n    \\\"],[13],[1,\\\"\\\\n    file and save it...you'll see this page update soon after!\\\\n  \\\"],[13],[1,\\\"\\\\n\\\"],[13],[1,\\\"\\\\n\\\\n\\\"]],[],false,[\\\"if\\\"]]\",\"moduleName\":\"(unknown template module)\",\"isStrictMode\":false});class WelcomePageComponent extends (_glimmer_component__WEBPACK_IMPORTED_MODULE_4___default()){get isCurrent(){let stableRegex=/^\\d+\\.\\d+\\.\\d+$/;return!stableRegex.test(_ember_version__WEBPACK_IMPORTED_MODULE_3__.VERSION);}get rootURL(){let config=(0,_ember_application__WEBPACK_IMPORTED_MODULE_2__.getOwner)(this).factoryFor('config:environment');if(config){return config.class.rootURL;}else{return'/';}}get emberVersion(){let isCurrent=this.isCurrent;if(isCurrent){return'current';}else{let[major,minor]=_ember_version__WEBPACK_IMPORTED_MODULE_3__.VERSION.split('.');return`${major}.${minor}.0`;}}}(0,_ember_component__WEBPACK_IMPORTED_MODULE_1__.setComponentTemplate)(TEMPLATE,WelcomePageComponent);\n\n//# sourceURL=webpack://__ember_auto_import__/./node_modules/ember-welcome-page/dist/components/welcome-page.js?");

/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js!./node_modules/ember-welcome-page/dist/components/welcome-page.css":
/*!****************************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./node_modules/ember-welcome-page/dist/components/welcome-page.css ***!
  \****************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../css-loader/dist/runtime/api.js */ \"./node_modules/css-loader/dist/runtime/api.js\");\n/* harmony import */ var _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__);\n// Imports\n\nvar ___CSS_LOADER_EXPORT___ = _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default()(function(i){return i[1]});\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"body {\\n  color: rgb(28, 30, 36);\\n  background: rgb(244, 246, 248);\\n  font-family: \\\"Inter var\\\",\\\"Inter web\\\",-apple-system,BlinkMacSystemFont,Segoe UI,Helvetica,Arial,sans-serif,Apple Color Emoji,Segoe UI Emoji;\\n  font-size: 18px;\\n  font-weight: 200;\\n  line-height: 1.5;\\n  margin: 0 auto;\\n  padding: 0;\\n}\\n#ember-welcome-page-id-selector {\\n  height: 100vh;\\n  padding: 2em;\\n}\\n#ember-welcome-page-id-selector img {\\n  max-width: 100%;\\n}\\n#ember-welcome-page-id-selector p {\\n  font-size: 1.25em;\\n  margin: 0 0 .75em;\\n}\\n#ember-welcome-page-id-selector h1 {\\n  font-size: 2.5em;\\n  font-weight: 200;\\n  line-height: 1.2;\\n  margin-top: 0;\\n}\\n#ember-welcome-page-id-selector a:link,\\n#ember-welcome-page-id-selector a:visited {\\n  color:rgb(255, 92, 68);\\n}\\n#ember-welcome-page-id-selector a:hover,\\n#ember-welcome-page-id-selector a:active {\\n  color: rgb(255, 92, 68);\\n}\\n#ember-welcome-page-id-selector .tomster {\\n  flex: 2;\\n}\\n#ember-welcome-page-id-selector .welcome {\\n  flex: 3;\\n}\\n#ember-welcome-page-id-selector .columns {\\n  display: flex;\\n  margin: 0 auto;\\n  max-width: 960px;\\n}\\n#ember-welcome-page-id-selector .welcome > ul > li {\\n  padding-bottom: 0.5em;\\n  font-size: 1.1em;\\n}\\n#ember-welcome-page-id-selector .welcome > ul > li > a {\\n  font-weight: bold;\\n}\\n#ember-welcome-page-id-selector .postscript {\\n  color: rgb(28, 30, 36);\\n  background: rgb(244, 246, 248);\\n  font-style: italic;\\n  line-height: 2;\\n  margin: 0 auto;\\n  max-width: 960px;\\n  padding-top: 3em;\\n  text-align: center;\\n}\\n#ember-welcome-page-id-selector .postscript code {\\n  color: rgb(244, 246, 248);\\n  border-radius: 3px;\\n  background-color: rgb(28, 30, 36);\\n  display: inline-block;\\n  font-family: Menlo, Courier, monospace;\\n  font-size: 0.9em;\\n  margin: 0 0.1em;\\n  padding: 0 0.5em;\\n}\\n@media (max-width: 700px) {\\n  #ember-welcome-page-id-selector {\\n    padding: 1em;\\n  }\\n  #ember-welcome-page-id-selector .columns {\\n    flex-direction: column;\\n  }\\n  #ember-welcome-page-id-selector .tomster img {\\n    display: block;\\n    margin: auto;\\n    width: 50%;\\n  }\\n  #ember-welcome-page-id-selector h2 {\\n    text-align: center;\\n  }\\n}\\n@media (max-width: 400px) {\\n  #ember-welcome-page-id-selector .tomster img {\\n    width: 60%;\\n  }\\n  #ember-welcome-page-id-selector .welcome,\\n  #ember-welcome-page-id-selector .tomster {\\n    float: none;\\n    margin: auto;\\n    width: 100%;\\n  }\\n}\\n\", \"\"]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n\n\n//# sourceURL=webpack://__ember_auto_import__/./node_modules/ember-welcome-page/dist/components/welcome-page.css?./node_modules/css-loader/dist/cjs.js");

/***/ }),

/***/ "./node_modules/ember-welcome-page/dist/components/welcome-page.css":
/*!**************************************************************************!*\
  !*** ./node_modules/ember-welcome-page/dist/components/welcome-page.css ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js */ \"./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n/* harmony import */ var _style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _css_loader_dist_cjs_js_welcome_page_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! !!../../../css-loader/dist/cjs.js!./welcome-page.css */ \"./node_modules/css-loader/dist/cjs.js!./node_modules/ember-welcome-page/dist/components/welcome-page.css\");\n\n            \n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = _style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_css_loader_dist_cjs_js_welcome_page_css__WEBPACK_IMPORTED_MODULE_1__[\"default\"], options);\n\n\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_css_loader_dist_cjs_js_welcome_page_css__WEBPACK_IMPORTED_MODULE_1__[\"default\"].locals || {});\n\n//# sourceURL=webpack://__ember_auto_import__/./node_modules/ember-welcome-page/dist/components/welcome-page.css?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js":
/*!****************************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js ***!
  \****************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nvar isOldIE = function isOldIE() {\n  var memo;\n  return function memorize() {\n    if (typeof memo === 'undefined') {\n      // Test for IE <= 9 as proposed by Browserhacks\n      // @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n      // Tests for existence of standard globals is to allow style-loader\n      // to operate correctly into non-standard environments\n      // @see https://github.com/webpack-contrib/style-loader/issues/177\n      memo = Boolean(window && document && document.all && !window.atob);\n    }\n\n    return memo;\n  };\n}();\n\nvar getTarget = function getTarget() {\n  var memo = {};\n  return function memorize(target) {\n    if (typeof memo[target] === 'undefined') {\n      var styleTarget = document.querySelector(target); // Special case to return head of iframe instead of iframe itself\n\n      if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n        try {\n          // This will throw an exception if access to iframe is blocked\n          // due to cross-origin restrictions\n          styleTarget = styleTarget.contentDocument.head;\n        } catch (e) {\n          // istanbul ignore next\n          styleTarget = null;\n        }\n      }\n\n      memo[target] = styleTarget;\n    }\n\n    return memo[target];\n  };\n}();\n\nvar stylesInDom = [];\n\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n\n  for (var i = 0; i < stylesInDom.length; i++) {\n    if (stylesInDom[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n\n  return result;\n}\n\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var index = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3]\n    };\n\n    if (index !== -1) {\n      stylesInDom[index].references++;\n      stylesInDom[index].updater(obj);\n    } else {\n      stylesInDom.push({\n        identifier: identifier,\n        updater: addStyle(obj, options),\n        references: 1\n      });\n    }\n\n    identifiers.push(identifier);\n  }\n\n  return identifiers;\n}\n\nfunction insertStyleElement(options) {\n  var style = document.createElement('style');\n  var attributes = options.attributes || {};\n\n  if (typeof attributes.nonce === 'undefined') {\n    var nonce =  true ? __webpack_require__.nc : 0;\n\n    if (nonce) {\n      attributes.nonce = nonce;\n    }\n  }\n\n  Object.keys(attributes).forEach(function (key) {\n    style.setAttribute(key, attributes[key]);\n  });\n\n  if (typeof options.insert === 'function') {\n    options.insert(style);\n  } else {\n    var target = getTarget(options.insert || 'head');\n\n    if (!target) {\n      throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n    }\n\n    target.appendChild(style);\n  }\n\n  return style;\n}\n\nfunction removeStyleElement(style) {\n  // istanbul ignore if\n  if (style.parentNode === null) {\n    return false;\n  }\n\n  style.parentNode.removeChild(style);\n}\n/* istanbul ignore next  */\n\n\nvar replaceText = function replaceText() {\n  var textStore = [];\n  return function replace(index, replacement) {\n    textStore[index] = replacement;\n    return textStore.filter(Boolean).join('\\n');\n  };\n}();\n\nfunction applyToSingletonTag(style, index, remove, obj) {\n  var css = remove ? '' : obj.media ? \"@media \".concat(obj.media, \" {\").concat(obj.css, \"}\") : obj.css; // For old IE\n\n  /* istanbul ignore if  */\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = replaceText(index, css);\n  } else {\n    var cssNode = document.createTextNode(css);\n    var childNodes = style.childNodes;\n\n    if (childNodes[index]) {\n      style.removeChild(childNodes[index]);\n    }\n\n    if (childNodes.length) {\n      style.insertBefore(cssNode, childNodes[index]);\n    } else {\n      style.appendChild(cssNode);\n    }\n  }\n}\n\nfunction applyToTag(style, options, obj) {\n  var css = obj.css;\n  var media = obj.media;\n  var sourceMap = obj.sourceMap;\n\n  if (media) {\n    style.setAttribute('media', media);\n  } else {\n    style.removeAttribute('media');\n  }\n\n  if (sourceMap && typeof btoa !== 'undefined') {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  } // For old IE\n\n  /* istanbul ignore if  */\n\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    while (style.firstChild) {\n      style.removeChild(style.firstChild);\n    }\n\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nvar singleton = null;\nvar singletonCounter = 0;\n\nfunction addStyle(obj, options) {\n  var style;\n  var update;\n  var remove;\n\n  if (options.singleton) {\n    var styleIndex = singletonCounter++;\n    style = singleton || (singleton = insertStyleElement(options));\n    update = applyToSingletonTag.bind(null, style, styleIndex, false);\n    remove = applyToSingletonTag.bind(null, style, styleIndex, true);\n  } else {\n    style = insertStyleElement(options);\n    update = applyToTag.bind(null, style, options);\n\n    remove = function remove() {\n      removeStyleElement(style);\n    };\n  }\n\n  update(obj);\n  return function updateStyle(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap) {\n        return;\n      }\n\n      update(obj = newObj);\n    } else {\n      remove();\n    }\n  };\n}\n\nmodule.exports = function (list, options) {\n  options = options || {}; // Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n  // tags it will allow on a page\n\n  if (!options.singleton && typeof options.singleton !== 'boolean') {\n    options.singleton = isOldIE();\n  }\n\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n\n    if (Object.prototype.toString.call(newList) !== '[object Array]') {\n      return;\n    }\n\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDom[index].references--;\n    }\n\n    var newLastIdentifiers = modulesToDom(newList, options);\n\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n\n      var _index = getIndexByIdentifier(_identifier);\n\n      if (stylesInDom[_index].references === 0) {\n        stylesInDom[_index].updater();\n\n        stylesInDom.splice(_index, 1);\n      }\n    }\n\n    lastIdentifiers = newLastIdentifiers;\n  };\n};\n\n//# sourceURL=webpack://__ember_auto_import__/./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js?");

/***/ }),

/***/ "./node_modules/@firebase/app/dist/esm/index.esm2017.js":
/*!**************************************************************!*\
  !*** ./node_modules/@firebase/app/dist/esm/index.esm2017.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"FirebaseError\": () => (/* reexport safe */ _firebase_util__WEBPACK_IMPORTED_MODULE_2__.FirebaseError),\n/* harmony export */   \"SDK_VERSION\": () => (/* binding */ SDK_VERSION),\n/* harmony export */   \"_DEFAULT_ENTRY_NAME\": () => (/* binding */ DEFAULT_ENTRY_NAME),\n/* harmony export */   \"_addComponent\": () => (/* binding */ _addComponent),\n/* harmony export */   \"_addOrOverwriteComponent\": () => (/* binding */ _addOrOverwriteComponent),\n/* harmony export */   \"_apps\": () => (/* binding */ _apps),\n/* harmony export */   \"_clearComponents\": () => (/* binding */ _clearComponents),\n/* harmony export */   \"_components\": () => (/* binding */ _components),\n/* harmony export */   \"_getProvider\": () => (/* binding */ _getProvider),\n/* harmony export */   \"_registerComponent\": () => (/* binding */ _registerComponent),\n/* harmony export */   \"_removeServiceInstance\": () => (/* binding */ _removeServiceInstance),\n/* harmony export */   \"deleteApp\": () => (/* binding */ deleteApp),\n/* harmony export */   \"getApp\": () => (/* binding */ getApp),\n/* harmony export */   \"getApps\": () => (/* binding */ getApps),\n/* harmony export */   \"initializeApp\": () => (/* binding */ initializeApp),\n/* harmony export */   \"onLog\": () => (/* binding */ onLog),\n/* harmony export */   \"registerVersion\": () => (/* binding */ registerVersion),\n/* harmony export */   \"setLogLevel\": () => (/* binding */ setLogLevel)\n/* harmony export */ });\n/* harmony import */ var _firebase_component__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @firebase/component */ \"./node_modules/@firebase/component/dist/esm/index.esm2017.js\");\n/* harmony import */ var _firebase_logger__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @firebase/logger */ \"./node_modules/@firebase/logger/dist/esm/index.esm2017.js\");\n/* harmony import */ var _firebase_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @firebase/util */ \"./node_modules/@firebase/util/dist/index.esm2017.js\");\n/* harmony import */ var idb__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! idb */ \"./node_modules/idb/build/index.js\");\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */class PlatformLoggerServiceImpl{constructor(container){this.container=container;}// In initial implementation, this will be called by installations on\n// auth token refresh, and installations will send this string.\ngetPlatformInfoString(){const providers=this.container.getProviders();// Loop through providers and get library/version pairs from any that are\n// version components.\nreturn providers.map(provider=>{if(isVersionServiceProvider(provider)){const service=provider.getImmediate();return`${service.library}/${service.version}`;}else{return null;}}).filter(logString=>logString).join(' ');}}/**\r\n *\r\n * @param provider check if this provider provides a VersionService\r\n *\r\n * NOTE: Using Provider<'app-version'> is a hack to indicate that the provider\r\n * provides VersionService. The provider is not necessarily a 'app-version'\r\n * provider.\r\n */function isVersionServiceProvider(provider){const component=provider.getComponent();return(component===null||component===void 0?void 0:component.type)===\"VERSION\"/* ComponentType.VERSION */;}const name$o=\"@firebase/app\";const version$1=\"0.9.0\";/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */const logger=new _firebase_logger__WEBPACK_IMPORTED_MODULE_1__.Logger('@firebase/app');const name$n=\"@firebase/app-compat\";const name$m=\"@firebase/analytics-compat\";const name$l=\"@firebase/analytics\";const name$k=\"@firebase/app-check-compat\";const name$j=\"@firebase/app-check\";const name$i=\"@firebase/auth\";const name$h=\"@firebase/auth-compat\";const name$g=\"@firebase/database\";const name$f=\"@firebase/database-compat\";const name$e=\"@firebase/functions\";const name$d=\"@firebase/functions-compat\";const name$c=\"@firebase/installations\";const name$b=\"@firebase/installations-compat\";const name$a=\"@firebase/messaging\";const name$9=\"@firebase/messaging-compat\";const name$8=\"@firebase/performance\";const name$7=\"@firebase/performance-compat\";const name$6=\"@firebase/remote-config\";const name$5=\"@firebase/remote-config-compat\";const name$4=\"@firebase/storage\";const name$3=\"@firebase/storage-compat\";const name$2=\"@firebase/firestore\";const name$1=\"@firebase/firestore-compat\";const name=\"firebase\";const version=\"9.15.0\";/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * The default app name\r\n *\r\n * @internal\r\n */const DEFAULT_ENTRY_NAME='[DEFAULT]';const PLATFORM_LOG_STRING={[name$o]:'fire-core',[name$n]:'fire-core-compat',[name$l]:'fire-analytics',[name$m]:'fire-analytics-compat',[name$j]:'fire-app-check',[name$k]:'fire-app-check-compat',[name$i]:'fire-auth',[name$h]:'fire-auth-compat',[name$g]:'fire-rtdb',[name$f]:'fire-rtdb-compat',[name$e]:'fire-fn',[name$d]:'fire-fn-compat',[name$c]:'fire-iid',[name$b]:'fire-iid-compat',[name$a]:'fire-fcm',[name$9]:'fire-fcm-compat',[name$8]:'fire-perf',[name$7]:'fire-perf-compat',[name$6]:'fire-rc',[name$5]:'fire-rc-compat',[name$4]:'fire-gcs',[name$3]:'fire-gcs-compat',[name$2]:'fire-fst',[name$1]:'fire-fst-compat','fire-js':'fire-js',[name]:'fire-js-all'};/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * @internal\r\n */const _apps=new Map();/**\r\n * Registered components.\r\n *\r\n * @internal\r\n */ // eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst _components=new Map();/**\r\n * @param component - the component being added to this app's container\r\n *\r\n * @internal\r\n */function _addComponent(app,component){try{app.container.addComponent(component);}catch(e){logger.debug(`Component ${component.name} failed to register with FirebaseApp ${app.name}`,e);}}/**\r\n *\r\n * @internal\r\n */function _addOrOverwriteComponent(app,component){app.container.addOrOverwriteComponent(component);}/**\r\n *\r\n * @param component - the component to register\r\n * @returns whether or not the component is registered successfully\r\n *\r\n * @internal\r\n */function _registerComponent(component){const componentName=component.name;if(_components.has(componentName)){logger.debug(`There were multiple attempts to register component ${componentName}.`);return false;}_components.set(componentName,component);// add the component to existing app instances\nfor(const app of _apps.values()){_addComponent(app,component);}return true;}/**\r\n *\r\n * @param app - FirebaseApp instance\r\n * @param name - service name\r\n *\r\n * @returns the provider for the service with the matching name\r\n *\r\n * @internal\r\n */function _getProvider(app,name){const heartbeatController=app.container.getProvider('heartbeat').getImmediate({optional:true});if(heartbeatController){void heartbeatController.triggerHeartbeat();}return app.container.getProvider(name);}/**\r\n *\r\n * @param app - FirebaseApp instance\r\n * @param name - service name\r\n * @param instanceIdentifier - service instance identifier in case the service supports multiple instances\r\n *\r\n * @internal\r\n */function _removeServiceInstance(app,name){let instanceIdentifier=arguments.length>2&&arguments[2]!==undefined?arguments[2]:DEFAULT_ENTRY_NAME;_getProvider(app,name).clearInstance(instanceIdentifier);}/**\r\n * Test only\r\n *\r\n * @internal\r\n */function _clearComponents(){_components.clear();}/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */const ERRORS={[\"no-app\"/* AppError.NO_APP */]:\"No Firebase App '{$appName}' has been created - \"+'call Firebase App.initializeApp()',[\"bad-app-name\"/* AppError.BAD_APP_NAME */]:\"Illegal App name: '{$appName}\",[\"duplicate-app\"/* AppError.DUPLICATE_APP */]:\"Firebase App named '{$appName}' already exists with different options or config\",[\"app-deleted\"/* AppError.APP_DELETED */]:\"Firebase App named '{$appName}' already deleted\",[\"no-options\"/* AppError.NO_OPTIONS */]:'Need to provide options, when not being deployed to hosting via source.',[\"invalid-app-argument\"/* AppError.INVALID_APP_ARGUMENT */]:'firebase.{$appName}() takes either no argument or a '+'Firebase App instance.',[\"invalid-log-argument\"/* AppError.INVALID_LOG_ARGUMENT */]:'First argument to `onLog` must be null or a function.',[\"idb-open\"/* AppError.IDB_OPEN */]:'Error thrown when opening IndexedDB. Original error: {$originalErrorMessage}.',[\"idb-get\"/* AppError.IDB_GET */]:'Error thrown when reading from IndexedDB. Original error: {$originalErrorMessage}.',[\"idb-set\"/* AppError.IDB_WRITE */]:'Error thrown when writing to IndexedDB. Original error: {$originalErrorMessage}.',[\"idb-delete\"/* AppError.IDB_DELETE */]:'Error thrown when deleting from IndexedDB. Original error: {$originalErrorMessage}.'};const ERROR_FACTORY=new _firebase_util__WEBPACK_IMPORTED_MODULE_2__.ErrorFactory('app','Firebase',ERRORS);/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */class FirebaseAppImpl{constructor(options,config,container){this._isDeleted=false;this._options=Object.assign({},options);this._config=Object.assign({},config);this._name=config.name;this._automaticDataCollectionEnabled=config.automaticDataCollectionEnabled;this._container=container;this.container.addComponent(new _firebase_component__WEBPACK_IMPORTED_MODULE_0__.Component('app',()=>this,\"PUBLIC\"/* ComponentType.PUBLIC */));}get automaticDataCollectionEnabled(){this.checkDestroyed();return this._automaticDataCollectionEnabled;}set automaticDataCollectionEnabled(val){this.checkDestroyed();this._automaticDataCollectionEnabled=val;}get name(){this.checkDestroyed();return this._name;}get options(){this.checkDestroyed();return this._options;}get config(){this.checkDestroyed();return this._config;}get container(){return this._container;}get isDeleted(){return this._isDeleted;}set isDeleted(val){this._isDeleted=val;}/**\r\n     * This function will throw an Error if the App has already been deleted -\r\n     * use before performing API actions on the App.\r\n     */checkDestroyed(){if(this.isDeleted){throw ERROR_FACTORY.create(\"app-deleted\"/* AppError.APP_DELETED */,{appName:this._name});}}}/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * The current SDK version.\r\n *\r\n * @public\r\n */const SDK_VERSION=version;function initializeApp(_options){let rawConfig=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};let options=_options;if(typeof rawConfig!=='object'){const name=rawConfig;rawConfig={name};}const config=Object.assign({name:DEFAULT_ENTRY_NAME,automaticDataCollectionEnabled:false},rawConfig);const name=config.name;if(typeof name!=='string'||!name){throw ERROR_FACTORY.create(\"bad-app-name\"/* AppError.BAD_APP_NAME */,{appName:String(name)});}options||(options=(0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.getDefaultAppConfig)());if(!options){throw ERROR_FACTORY.create(\"no-options\"/* AppError.NO_OPTIONS */);}const existingApp=_apps.get(name);if(existingApp){// return the existing app if options and config deep equal the ones in the existing app.\nif((0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.deepEqual)(options,existingApp.options)&&(0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.deepEqual)(config,existingApp.config)){return existingApp;}else{throw ERROR_FACTORY.create(\"duplicate-app\"/* AppError.DUPLICATE_APP */,{appName:name});}}const container=new _firebase_component__WEBPACK_IMPORTED_MODULE_0__.ComponentContainer(name);for(const component of _components.values()){container.addComponent(component);}const newApp=new FirebaseAppImpl(options,config,container);_apps.set(name,newApp);return newApp;}/**\r\n * Retrieves a {@link @firebase/app#FirebaseApp} instance.\r\n *\r\n * When called with no arguments, the default app is returned. When an app name\r\n * is provided, the app corresponding to that name is returned.\r\n *\r\n * An exception is thrown if the app being retrieved has not yet been\r\n * initialized.\r\n *\r\n * @example\r\n * ```javascript\r\n * // Return the default app\r\n * const app = getApp();\r\n * ```\r\n *\r\n * @example\r\n * ```javascript\r\n * // Return a named app\r\n * const otherApp = getApp(\"otherApp\");\r\n * ```\r\n *\r\n * @param name - Optional name of the app to return. If no name is\r\n *   provided, the default is `\"[DEFAULT]\"`.\r\n *\r\n * @returns The app corresponding to the provided app name.\r\n *   If no app name is provided, the default app is returned.\r\n *\r\n * @public\r\n */function getApp(){let name=arguments.length>0&&arguments[0]!==undefined?arguments[0]:DEFAULT_ENTRY_NAME;const app=_apps.get(name);if(!app&&name===DEFAULT_ENTRY_NAME){return initializeApp();}if(!app){throw ERROR_FACTORY.create(\"no-app\"/* AppError.NO_APP */,{appName:name});}return app;}/**\r\n * A (read-only) array of all initialized apps.\r\n * @public\r\n */function getApps(){return Array.from(_apps.values());}/**\r\n * Renders this app unusable and frees the resources of all associated\r\n * services.\r\n *\r\n * @example\r\n * ```javascript\r\n * deleteApp(app)\r\n *   .then(function() {\r\n *     console.log(\"App deleted successfully\");\r\n *   })\r\n *   .catch(function(error) {\r\n *     console.log(\"Error deleting app:\", error);\r\n *   });\r\n * ```\r\n *\r\n * @public\r\n */async function deleteApp(app){const name=app.name;if(_apps.has(name)){_apps.delete(name);await Promise.all(app.container.getProviders().map(provider=>provider.delete()));app.isDeleted=true;}}/**\r\n * Registers a library's name and version for platform logging purposes.\r\n * @param library - Name of 1p or 3p library (e.g. firestore, angularfire)\r\n * @param version - Current version of that library.\r\n * @param variant - Bundle variant, e.g., node, rn, etc.\r\n *\r\n * @public\r\n */function registerVersion(libraryKeyOrName,version,variant){var _a;// TODO: We can use this check to whitelist strings when/if we set up\n// a good whitelist system.\nlet library=(_a=PLATFORM_LOG_STRING[libraryKeyOrName])!==null&&_a!==void 0?_a:libraryKeyOrName;if(variant){library+=`-${variant}`;}const libraryMismatch=library.match(/\\s|\\//);const versionMismatch=version.match(/\\s|\\//);if(libraryMismatch||versionMismatch){const warning=[`Unable to register library \"${library}\" with version \"${version}\":`];if(libraryMismatch){warning.push(`library name \"${library}\" contains illegal characters (whitespace or \"/\")`);}if(libraryMismatch&&versionMismatch){warning.push('and');}if(versionMismatch){warning.push(`version name \"${version}\" contains illegal characters (whitespace or \"/\")`);}logger.warn(warning.join(' '));return;}_registerComponent(new _firebase_component__WEBPACK_IMPORTED_MODULE_0__.Component(`${library}-version`,()=>({library,version}),\"VERSION\"/* ComponentType.VERSION */));}/**\r\n * Sets log handler for all Firebase SDKs.\r\n * @param logCallback - An optional custom log handler that executes user code whenever\r\n * the Firebase SDK makes a logging call.\r\n *\r\n * @public\r\n */function onLog(logCallback,options){if(logCallback!==null&&typeof logCallback!=='function'){throw ERROR_FACTORY.create(\"invalid-log-argument\"/* AppError.INVALID_LOG_ARGUMENT */);}(0,_firebase_logger__WEBPACK_IMPORTED_MODULE_1__.setUserLogHandler)(logCallback,options);}/**\r\n * Sets log level for all Firebase SDKs.\r\n *\r\n * All of the log types above the current log level are captured (i.e. if\r\n * you set the log level to `info`, errors are logged, but `debug` and\r\n * `verbose` logs are not).\r\n *\r\n * @public\r\n */function setLogLevel(logLevel){(0,_firebase_logger__WEBPACK_IMPORTED_MODULE_1__.setLogLevel)(logLevel);}/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */const DB_NAME='firebase-heartbeat-database';const DB_VERSION=1;const STORE_NAME='firebase-heartbeat-store';let dbPromise=null;function getDbPromise(){if(!dbPromise){dbPromise=(0,idb__WEBPACK_IMPORTED_MODULE_3__.openDB)(DB_NAME,DB_VERSION,{upgrade:(db,oldVersion)=>{// We don't use 'break' in this switch statement, the fall-through\n// behavior is what we want, because if there are multiple versions between\n// the old version and the current version, we want ALL the migrations\n// that correspond to those versions to run, not only the last one.\n// eslint-disable-next-line default-case\nswitch(oldVersion){case 0:db.createObjectStore(STORE_NAME);}}}).catch(e=>{throw ERROR_FACTORY.create(\"idb-open\"/* AppError.IDB_OPEN */,{originalErrorMessage:e.message});});}return dbPromise;}async function readHeartbeatsFromIndexedDB(app){try{const db=await getDbPromise();return db.transaction(STORE_NAME).objectStore(STORE_NAME).get(computeKey(app));}catch(e){if(e instanceof _firebase_util__WEBPACK_IMPORTED_MODULE_2__.FirebaseError){logger.warn(e.message);}else{const idbGetError=ERROR_FACTORY.create(\"idb-get\"/* AppError.IDB_GET */,{originalErrorMessage:e===null||e===void 0?void 0:e.message});logger.warn(idbGetError.message);}}}async function writeHeartbeatsToIndexedDB(app,heartbeatObject){try{const db=await getDbPromise();const tx=db.transaction(STORE_NAME,'readwrite');const objectStore=tx.objectStore(STORE_NAME);await objectStore.put(heartbeatObject,computeKey(app));return tx.done;}catch(e){if(e instanceof _firebase_util__WEBPACK_IMPORTED_MODULE_2__.FirebaseError){logger.warn(e.message);}else{const idbGetError=ERROR_FACTORY.create(\"idb-set\"/* AppError.IDB_WRITE */,{originalErrorMessage:e===null||e===void 0?void 0:e.message});logger.warn(idbGetError.message);}}}function computeKey(app){return`${app.name}!${app.options.appId}`;}/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */const MAX_HEADER_BYTES=1024;// 30 days\nconst STORED_HEARTBEAT_RETENTION_MAX_MILLIS=30*24*60*60*1000;class HeartbeatServiceImpl{constructor(container){this.container=container;/**\r\n         * In-memory cache for heartbeats, used by getHeartbeatsHeader() to generate\r\n         * the header string.\r\n         * Stores one record per date. This will be consolidated into the standard\r\n         * format of one record per user agent string before being sent as a header.\r\n         * Populated from indexedDB when the controller is instantiated and should\r\n         * be kept in sync with indexedDB.\r\n         * Leave public for easier testing.\r\n         */this._heartbeatsCache=null;const app=this.container.getProvider('app').getImmediate();this._storage=new HeartbeatStorageImpl(app);this._heartbeatsCachePromise=this._storage.read().then(result=>{this._heartbeatsCache=result;return result;});}/**\r\n     * Called to report a heartbeat. The function will generate\r\n     * a HeartbeatsByUserAgent object, update heartbeatsCache, and persist it\r\n     * to IndexedDB.\r\n     * Note that we only store one heartbeat per day. So if a heartbeat for today is\r\n     * already logged, subsequent calls to this function in the same day will be ignored.\r\n     */async triggerHeartbeat(){const platformLogger=this.container.getProvider('platform-logger').getImmediate();// This is the \"Firebase user agent\" string from the platform logger\n// service, not the browser user agent.\nconst agent=platformLogger.getPlatformInfoString();const date=getUTCDateString();if(this._heartbeatsCache===null){this._heartbeatsCache=await this._heartbeatsCachePromise;}// Do not store a heartbeat if one is already stored for this day\n// or if a header has already been sent today.\nif(this._heartbeatsCache.lastSentHeartbeatDate===date||this._heartbeatsCache.heartbeats.some(singleDateHeartbeat=>singleDateHeartbeat.date===date)){return;}else{// There is no entry for this date. Create one.\nthis._heartbeatsCache.heartbeats.push({date,agent});}// Remove entries older than 30 days.\nthis._heartbeatsCache.heartbeats=this._heartbeatsCache.heartbeats.filter(singleDateHeartbeat=>{const hbTimestamp=new Date(singleDateHeartbeat.date).valueOf();const now=Date.now();return now-hbTimestamp<=STORED_HEARTBEAT_RETENTION_MAX_MILLIS;});return this._storage.overwrite(this._heartbeatsCache);}/**\r\n     * Returns a base64 encoded string which can be attached to the heartbeat-specific header directly.\r\n     * It also clears all heartbeats from memory as well as in IndexedDB.\r\n     *\r\n     * NOTE: Consuming product SDKs should not send the header if this method\r\n     * returns an empty string.\r\n     */async getHeartbeatsHeader(){if(this._heartbeatsCache===null){await this._heartbeatsCachePromise;}// If it's still null or the array is empty, there is no data to send.\nif(this._heartbeatsCache===null||this._heartbeatsCache.heartbeats.length===0){return'';}const date=getUTCDateString();// Extract as many heartbeats from the cache as will fit under the size limit.\nconst{heartbeatsToSend,unsentEntries}=extractHeartbeatsForHeader(this._heartbeatsCache.heartbeats);const headerString=(0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.base64urlEncodeWithoutPadding)(JSON.stringify({version:2,heartbeats:heartbeatsToSend}));// Store last sent date to prevent another being logged/sent for the same day.\nthis._heartbeatsCache.lastSentHeartbeatDate=date;if(unsentEntries.length>0){// Store any unsent entries if they exist.\nthis._heartbeatsCache.heartbeats=unsentEntries;// This seems more likely than emptying the array (below) to lead to some odd state\n// since the cache isn't empty and this will be called again on the next request,\n// and is probably safest if we await it.\nawait this._storage.overwrite(this._heartbeatsCache);}else{this._heartbeatsCache.heartbeats=[];// Do not wait for this, to reduce latency.\nvoid this._storage.overwrite(this._heartbeatsCache);}return headerString;}}function getUTCDateString(){const today=new Date();// Returns date format 'YYYY-MM-DD'\nreturn today.toISOString().substring(0,10);}function extractHeartbeatsForHeader(heartbeatsCache){let maxSize=arguments.length>1&&arguments[1]!==undefined?arguments[1]:MAX_HEADER_BYTES;// Heartbeats grouped by user agent in the standard format to be sent in\n// the header.\nconst heartbeatsToSend=[];// Single date format heartbeats that are not sent.\nlet unsentEntries=heartbeatsCache.slice();for(const singleDateHeartbeat of heartbeatsCache){// Look for an existing entry with the same user agent.\nconst heartbeatEntry=heartbeatsToSend.find(hb=>hb.agent===singleDateHeartbeat.agent);if(!heartbeatEntry){// If no entry for this user agent exists, create one.\nheartbeatsToSend.push({agent:singleDateHeartbeat.agent,dates:[singleDateHeartbeat.date]});if(countBytes(heartbeatsToSend)>maxSize){// If the header would exceed max size, remove the added heartbeat\n// entry and stop adding to the header.\nheartbeatsToSend.pop();break;}}else{heartbeatEntry.dates.push(singleDateHeartbeat.date);// If the header would exceed max size, remove the added date\n// and stop adding to the header.\nif(countBytes(heartbeatsToSend)>maxSize){heartbeatEntry.dates.pop();break;}}// Pop unsent entry from queue. (Skipped if adding the entry exceeded\n// quota and the loop breaks early.)\nunsentEntries=unsentEntries.slice(1);}return{heartbeatsToSend,unsentEntries};}class HeartbeatStorageImpl{constructor(app){this.app=app;this._canUseIndexedDBPromise=this.runIndexedDBEnvironmentCheck();}async runIndexedDBEnvironmentCheck(){if(!(0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.isIndexedDBAvailable)()){return false;}else{return (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.validateIndexedDBOpenable)().then(()=>true).catch(()=>false);}}/**\r\n     * Read all heartbeats.\r\n     */async read(){const canUseIndexedDB=await this._canUseIndexedDBPromise;if(!canUseIndexedDB){return{heartbeats:[]};}else{const idbHeartbeatObject=await readHeartbeatsFromIndexedDB(this.app);return idbHeartbeatObject||{heartbeats:[]};}}// overwrite the storage with the provided heartbeats\nasync overwrite(heartbeatsObject){var _a;const canUseIndexedDB=await this._canUseIndexedDBPromise;if(!canUseIndexedDB){return;}else{const existingHeartbeatsObject=await this.read();return writeHeartbeatsToIndexedDB(this.app,{lastSentHeartbeatDate:(_a=heartbeatsObject.lastSentHeartbeatDate)!==null&&_a!==void 0?_a:existingHeartbeatsObject.lastSentHeartbeatDate,heartbeats:heartbeatsObject.heartbeats});}}// add heartbeats\nasync add(heartbeatsObject){var _a;const canUseIndexedDB=await this._canUseIndexedDBPromise;if(!canUseIndexedDB){return;}else{const existingHeartbeatsObject=await this.read();return writeHeartbeatsToIndexedDB(this.app,{lastSentHeartbeatDate:(_a=heartbeatsObject.lastSentHeartbeatDate)!==null&&_a!==void 0?_a:existingHeartbeatsObject.lastSentHeartbeatDate,heartbeats:[...existingHeartbeatsObject.heartbeats,...heartbeatsObject.heartbeats]});}}}/**\r\n * Calculate bytes of a HeartbeatsByUserAgent array after being wrapped\r\n * in a platform logging header JSON object, stringified, and converted\r\n * to base 64.\r\n */function countBytes(heartbeatsCache){// base64 has a restricted set of characters, all of which should be 1 byte.\nreturn (0,_firebase_util__WEBPACK_IMPORTED_MODULE_2__.base64urlEncodeWithoutPadding)(// heartbeatsCache wrapper properties\nJSON.stringify({version:2,heartbeats:heartbeatsCache})).length;}/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */function registerCoreComponents(variant){_registerComponent(new _firebase_component__WEBPACK_IMPORTED_MODULE_0__.Component('platform-logger',container=>new PlatformLoggerServiceImpl(container),\"PRIVATE\"/* ComponentType.PRIVATE */));_registerComponent(new _firebase_component__WEBPACK_IMPORTED_MODULE_0__.Component('heartbeat',container=>new HeartbeatServiceImpl(container),\"PRIVATE\"/* ComponentType.PRIVATE */));// Register `app` package.\nregisterVersion(name$o,version$1,variant);// BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation\nregisterVersion(name$o,version$1,'esm2017');// Register platform SDK identifier (no version).\nregisterVersion('fire-js','');}/**\r\n * Firebase App\r\n *\r\n * @remarks This package coordinates the communication between the different Firebase components\r\n * @packageDocumentation\r\n */registerCoreComponents('');\n\n//# sourceURL=webpack://__ember_auto_import__/./node_modules/@firebase/app/dist/esm/index.esm2017.js?");

/***/ }),

/***/ "./node_modules/@firebase/component/dist/esm/index.esm2017.js":
/*!********************************************************************!*\
  !*** ./node_modules/@firebase/component/dist/esm/index.esm2017.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Component\": () => (/* binding */ Component),\n/* harmony export */   \"ComponentContainer\": () => (/* binding */ ComponentContainer),\n/* harmony export */   \"Provider\": () => (/* binding */ Provider)\n/* harmony export */ });\n/* harmony import */ var _firebase_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @firebase/util */ \"./node_modules/@firebase/util/dist/index.esm2017.js\");\n/**\r\n * Component for service name T, e.g. `auth`, `auth-internal`\r\n */class Component{/**\r\n     *\r\n     * @param name The public service name, e.g. app, auth, firestore, database\r\n     * @param instanceFactory Service factory responsible for creating the public interface\r\n     * @param type whether the service provided by the component is public or private\r\n     */constructor(name,instanceFactory,type){this.name=name;this.instanceFactory=instanceFactory;this.type=type;this.multipleInstances=false;/**\r\n         * Properties to be added to the service namespace\r\n         */this.serviceProps={};this.instantiationMode=\"LAZY\"/* InstantiationMode.LAZY */;this.onInstanceCreated=null;}setInstantiationMode(mode){this.instantiationMode=mode;return this;}setMultipleInstances(multipleInstances){this.multipleInstances=multipleInstances;return this;}setServiceProps(props){this.serviceProps=props;return this;}setInstanceCreatedCallback(callback){this.onInstanceCreated=callback;return this;}}/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */const DEFAULT_ENTRY_NAME='[DEFAULT]';/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * Provider for instance for service name T, e.g. 'auth', 'auth-internal'\r\n * NameServiceMapping[T] is an alias for the type of the instance\r\n */class Provider{constructor(name,container){this.name=name;this.container=container;this.component=null;this.instances=new Map();this.instancesDeferred=new Map();this.instancesOptions=new Map();this.onInitCallbacks=new Map();}/**\r\n     * @param identifier A provider can provide mulitple instances of a service\r\n     * if this.component.multipleInstances is true.\r\n     */get(identifier){// if multipleInstances is not supported, use the default name\nconst normalizedIdentifier=this.normalizeInstanceIdentifier(identifier);if(!this.instancesDeferred.has(normalizedIdentifier)){const deferred=new _firebase_util__WEBPACK_IMPORTED_MODULE_0__.Deferred();this.instancesDeferred.set(normalizedIdentifier,deferred);if(this.isInitialized(normalizedIdentifier)||this.shouldAutoInitialize()){// initialize the service if it can be auto-initialized\ntry{const instance=this.getOrInitializeService({instanceIdentifier:normalizedIdentifier});if(instance){deferred.resolve(instance);}}catch(e){// when the instance factory throws an exception during get(), it should not cause\n// a fatal error. We just return the unresolved promise in this case.\n}}}return this.instancesDeferred.get(normalizedIdentifier).promise;}getImmediate(options){var _a;// if multipleInstances is not supported, use the default name\nconst normalizedIdentifier=this.normalizeInstanceIdentifier(options===null||options===void 0?void 0:options.identifier);const optional=(_a=options===null||options===void 0?void 0:options.optional)!==null&&_a!==void 0?_a:false;if(this.isInitialized(normalizedIdentifier)||this.shouldAutoInitialize()){try{return this.getOrInitializeService({instanceIdentifier:normalizedIdentifier});}catch(e){if(optional){return null;}else{throw e;}}}else{// In case a component is not initialized and should/can not be auto-initialized at the moment, return null if the optional flag is set, or throw\nif(optional){return null;}else{throw Error(`Service ${this.name} is not available`);}}}getComponent(){return this.component;}setComponent(component){if(component.name!==this.name){throw Error(`Mismatching Component ${component.name} for Provider ${this.name}.`);}if(this.component){throw Error(`Component for ${this.name} has already been provided`);}this.component=component;// return early without attempting to initialize the component if the component requires explicit initialization (calling `Provider.initialize()`)\nif(!this.shouldAutoInitialize()){return;}// if the service is eager, initialize the default instance\nif(isComponentEager(component)){try{this.getOrInitializeService({instanceIdentifier:DEFAULT_ENTRY_NAME});}catch(e){// when the instance factory for an eager Component throws an exception during the eager\n// initialization, it should not cause a fatal error.\n// TODO: Investigate if we need to make it configurable, because some component may want to cause\n// a fatal error in this case?\n}}// Create service instances for the pending promises and resolve them\n// NOTE: if this.multipleInstances is false, only the default instance will be created\n// and all promises with resolve with it regardless of the identifier.\nfor(const[instanceIdentifier,instanceDeferred]of this.instancesDeferred.entries()){const normalizedIdentifier=this.normalizeInstanceIdentifier(instanceIdentifier);try{// `getOrInitializeService()` should always return a valid instance since a component is guaranteed. use ! to make typescript happy.\nconst instance=this.getOrInitializeService({instanceIdentifier:normalizedIdentifier});instanceDeferred.resolve(instance);}catch(e){// when the instance factory throws an exception, it should not cause\n// a fatal error. We just leave the promise unresolved.\n}}}clearInstance(){let identifier=arguments.length>0&&arguments[0]!==undefined?arguments[0]:DEFAULT_ENTRY_NAME;this.instancesDeferred.delete(identifier);this.instancesOptions.delete(identifier);this.instances.delete(identifier);}// app.delete() will call this method on every provider to delete the services\n// TODO: should we mark the provider as deleted?\nasync delete(){const services=Array.from(this.instances.values());await Promise.all([...services.filter(service=>'INTERNAL'in service)// legacy services\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n.map(service=>service.INTERNAL.delete()),...services.filter(service=>'_delete'in service)// modularized services\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n.map(service=>service._delete())]);}isComponentSet(){return this.component!=null;}isInitialized(){let identifier=arguments.length>0&&arguments[0]!==undefined?arguments[0]:DEFAULT_ENTRY_NAME;return this.instances.has(identifier);}getOptions(){let identifier=arguments.length>0&&arguments[0]!==undefined?arguments[0]:DEFAULT_ENTRY_NAME;return this.instancesOptions.get(identifier)||{};}initialize(){let opts=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};const{options={}}=opts;const normalizedIdentifier=this.normalizeInstanceIdentifier(opts.instanceIdentifier);if(this.isInitialized(normalizedIdentifier)){throw Error(`${this.name}(${normalizedIdentifier}) has already been initialized`);}if(!this.isComponentSet()){throw Error(`Component ${this.name} has not been registered yet`);}const instance=this.getOrInitializeService({instanceIdentifier:normalizedIdentifier,options});// resolve any pending promise waiting for the service instance\nfor(const[instanceIdentifier,instanceDeferred]of this.instancesDeferred.entries()){const normalizedDeferredIdentifier=this.normalizeInstanceIdentifier(instanceIdentifier);if(normalizedIdentifier===normalizedDeferredIdentifier){instanceDeferred.resolve(instance);}}return instance;}/**\r\n     *\r\n     * @param callback - a function that will be invoked  after the provider has been initialized by calling provider.initialize().\r\n     * The function is invoked SYNCHRONOUSLY, so it should not execute any longrunning tasks in order to not block the program.\r\n     *\r\n     * @param identifier An optional instance identifier\r\n     * @returns a function to unregister the callback\r\n     */onInit(callback,identifier){var _a;const normalizedIdentifier=this.normalizeInstanceIdentifier(identifier);const existingCallbacks=(_a=this.onInitCallbacks.get(normalizedIdentifier))!==null&&_a!==void 0?_a:new Set();existingCallbacks.add(callback);this.onInitCallbacks.set(normalizedIdentifier,existingCallbacks);const existingInstance=this.instances.get(normalizedIdentifier);if(existingInstance){callback(existingInstance,normalizedIdentifier);}return()=>{existingCallbacks.delete(callback);};}/**\r\n     * Invoke onInit callbacks synchronously\r\n     * @param instance the service instance`\r\n     */invokeOnInitCallbacks(instance,identifier){const callbacks=this.onInitCallbacks.get(identifier);if(!callbacks){return;}for(const callback of callbacks){try{callback(instance,identifier);}catch(_a){// ignore errors in the onInit callback\n}}}getOrInitializeService(_ref){let{instanceIdentifier,options={}}=_ref;let instance=this.instances.get(instanceIdentifier);if(!instance&&this.component){instance=this.component.instanceFactory(this.container,{instanceIdentifier:normalizeIdentifierForFactory(instanceIdentifier),options});this.instances.set(instanceIdentifier,instance);this.instancesOptions.set(instanceIdentifier,options);/**\r\n             * Invoke onInit listeners.\r\n             * Note this.component.onInstanceCreated is different, which is used by the component creator,\r\n             * while onInit listeners are registered by consumers of the provider.\r\n             */this.invokeOnInitCallbacks(instance,instanceIdentifier);/**\r\n             * Order is important\r\n             * onInstanceCreated() should be called after this.instances.set(instanceIdentifier, instance); which\r\n             * makes `isInitialized()` return true.\r\n             */if(this.component.onInstanceCreated){try{this.component.onInstanceCreated(this.container,instanceIdentifier,instance);}catch(_a){// ignore errors in the onInstanceCreatedCallback\n}}}return instance||null;}normalizeInstanceIdentifier(){let identifier=arguments.length>0&&arguments[0]!==undefined?arguments[0]:DEFAULT_ENTRY_NAME;if(this.component){return this.component.multipleInstances?identifier:DEFAULT_ENTRY_NAME;}else{return identifier;// assume multiple instances are supported before the component is provided.\n}}shouldAutoInitialize(){return!!this.component&&this.component.instantiationMode!==\"EXPLICIT\"/* InstantiationMode.EXPLICIT */;}}// undefined should be passed to the service factory for the default instance\nfunction normalizeIdentifierForFactory(identifier){return identifier===DEFAULT_ENTRY_NAME?undefined:identifier;}function isComponentEager(component){return component.instantiationMode===\"EAGER\"/* InstantiationMode.EAGER */;}/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * ComponentContainer that provides Providers for service name T, e.g. `auth`, `auth-internal`\r\n */class ComponentContainer{constructor(name){this.name=name;this.providers=new Map();}/**\r\n     *\r\n     * @param component Component being added\r\n     * @param overwrite When a component with the same name has already been registered,\r\n     * if overwrite is true: overwrite the existing component with the new component and create a new\r\n     * provider with the new component. It can be useful in tests where you want to use different mocks\r\n     * for different tests.\r\n     * if overwrite is false: throw an exception\r\n     */addComponent(component){const provider=this.getProvider(component.name);if(provider.isComponentSet()){throw new Error(`Component ${component.name} has already been registered with ${this.name}`);}provider.setComponent(component);}addOrOverwriteComponent(component){const provider=this.getProvider(component.name);if(provider.isComponentSet()){// delete the existing provider from the container, so we can register the new component\nthis.providers.delete(component.name);}this.addComponent(component);}/**\r\n     * getProvider provides a type safe interface where it can only be called with a field name\r\n     * present in NameServiceMapping interface.\r\n     *\r\n     * Firebase SDKs providing services should extend NameServiceMapping interface to register\r\n     * themselves.\r\n     */getProvider(name){if(this.providers.has(name)){return this.providers.get(name);}// create a Provider for a service that hasn't registered with Firebase\nconst provider=new Provider(name,this);this.providers.set(name,provider);return provider;}getProviders(){return Array.from(this.providers.values());}}\n\n//# sourceURL=webpack://__ember_auto_import__/./node_modules/@firebase/component/dist/esm/index.esm2017.js?");

/***/ }),

/***/ "./node_modules/@firebase/logger/dist/esm/index.esm2017.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@firebase/logger/dist/esm/index.esm2017.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"LogLevel\": () => (/* binding */ LogLevel),\n/* harmony export */   \"Logger\": () => (/* binding */ Logger),\n/* harmony export */   \"setLogLevel\": () => (/* binding */ setLogLevel),\n/* harmony export */   \"setUserLogHandler\": () => (/* binding */ setUserLogHandler)\n/* harmony export */ });\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * A container for all of the Logger instances\r\n */const instances=[];/**\r\n * The JS SDK supports 5 log levels and also allows a user the ability to\r\n * silence the logs altogether.\r\n *\r\n * The order is a follows:\r\n * DEBUG < VERBOSE < INFO < WARN < ERROR\r\n *\r\n * All of the log types above the current log level will be captured (i.e. if\r\n * you set the log level to `INFO`, errors will still be logged, but `DEBUG` and\r\n * `VERBOSE` logs will not)\r\n */var LogLevel;(function(LogLevel){LogLevel[LogLevel[\"DEBUG\"]=0]=\"DEBUG\";LogLevel[LogLevel[\"VERBOSE\"]=1]=\"VERBOSE\";LogLevel[LogLevel[\"INFO\"]=2]=\"INFO\";LogLevel[LogLevel[\"WARN\"]=3]=\"WARN\";LogLevel[LogLevel[\"ERROR\"]=4]=\"ERROR\";LogLevel[LogLevel[\"SILENT\"]=5]=\"SILENT\";})(LogLevel||(LogLevel={}));const levelStringToEnum={'debug':LogLevel.DEBUG,'verbose':LogLevel.VERBOSE,'info':LogLevel.INFO,'warn':LogLevel.WARN,'error':LogLevel.ERROR,'silent':LogLevel.SILENT};/**\r\n * The default log level\r\n */const defaultLogLevel=LogLevel.INFO;/**\r\n * By default, `console.debug` is not displayed in the developer console (in\r\n * chrome). To avoid forcing users to have to opt-in to these logs twice\r\n * (i.e. once for firebase, and once in the console), we are sending `DEBUG`\r\n * logs to the `console.log` function.\r\n */const ConsoleMethod={[LogLevel.DEBUG]:'log',[LogLevel.VERBOSE]:'log',[LogLevel.INFO]:'info',[LogLevel.WARN]:'warn',[LogLevel.ERROR]:'error'};/**\r\n * The default log handler will forward DEBUG, VERBOSE, INFO, WARN, and ERROR\r\n * messages on to their corresponding console counterparts (if the log method\r\n * is supported by the current log level)\r\n */const defaultLogHandler=function(instance,logType){if(logType<instance.logLevel){return;}const now=new Date().toISOString();const method=ConsoleMethod[logType];if(method){for(var _len=arguments.length,args=new Array(_len>2?_len-2:0),_key=2;_key<_len;_key++){args[_key-2]=arguments[_key];}console[method](`[${now}]  ${instance.name}:`,...args);}else{throw new Error(`Attempted to log a message with an invalid logType (value: ${logType})`);}};class Logger{/**\r\n     * Gives you an instance of a Logger to capture messages according to\r\n     * Firebase's logging scheme.\r\n     *\r\n     * @param name The name that the logs will be associated with\r\n     */constructor(name){this.name=name;/**\r\n         * The log level of the given Logger instance.\r\n         */this._logLevel=defaultLogLevel;/**\r\n         * The main (internal) log handler for the Logger instance.\r\n         * Can be set to a new function in internal package code but not by user.\r\n         */this._logHandler=defaultLogHandler;/**\r\n         * The optional, additional, user-defined log handler for the Logger instance.\r\n         */this._userLogHandler=null;/**\r\n         * Capture the current instance for later use\r\n         */instances.push(this);}get logLevel(){return this._logLevel;}set logLevel(val){if(!(val in LogLevel)){throw new TypeError(`Invalid value \"${val}\" assigned to \\`logLevel\\``);}this._logLevel=val;}// Workaround for setter/getter having to be the same type.\nsetLogLevel(val){this._logLevel=typeof val==='string'?levelStringToEnum[val]:val;}get logHandler(){return this._logHandler;}set logHandler(val){if(typeof val!=='function'){throw new TypeError('Value assigned to `logHandler` must be a function');}this._logHandler=val;}get userLogHandler(){return this._userLogHandler;}set userLogHandler(val){this._userLogHandler=val;}/**\r\n     * The functions below are all based on the `console` interface\r\n     */debug(){for(var _len2=arguments.length,args=new Array(_len2),_key2=0;_key2<_len2;_key2++){args[_key2]=arguments[_key2];}this._userLogHandler&&this._userLogHandler(this,LogLevel.DEBUG,...args);this._logHandler(this,LogLevel.DEBUG,...args);}log(){for(var _len3=arguments.length,args=new Array(_len3),_key3=0;_key3<_len3;_key3++){args[_key3]=arguments[_key3];}this._userLogHandler&&this._userLogHandler(this,LogLevel.VERBOSE,...args);this._logHandler(this,LogLevel.VERBOSE,...args);}info(){for(var _len4=arguments.length,args=new Array(_len4),_key4=0;_key4<_len4;_key4++){args[_key4]=arguments[_key4];}this._userLogHandler&&this._userLogHandler(this,LogLevel.INFO,...args);this._logHandler(this,LogLevel.INFO,...args);}warn(){for(var _len5=arguments.length,args=new Array(_len5),_key5=0;_key5<_len5;_key5++){args[_key5]=arguments[_key5];}this._userLogHandler&&this._userLogHandler(this,LogLevel.WARN,...args);this._logHandler(this,LogLevel.WARN,...args);}error(){for(var _len6=arguments.length,args=new Array(_len6),_key6=0;_key6<_len6;_key6++){args[_key6]=arguments[_key6];}this._userLogHandler&&this._userLogHandler(this,LogLevel.ERROR,...args);this._logHandler(this,LogLevel.ERROR,...args);}}function setLogLevel(level){instances.forEach(inst=>{inst.setLogLevel(level);});}function setUserLogHandler(logCallback,options){for(const instance of instances){let customLogLevel=null;if(options&&options.level){customLogLevel=levelStringToEnum[options.level];}if(logCallback===null){instance.userLogHandler=null;}else{instance.userLogHandler=function(instance,level){for(var _len7=arguments.length,args=new Array(_len7>2?_len7-2:0),_key7=2;_key7<_len7;_key7++){args[_key7-2]=arguments[_key7];}const message=args.map(arg=>{if(arg==null){return null;}else if(typeof arg==='string'){return arg;}else if(typeof arg==='number'||typeof arg==='boolean'){return arg.toString();}else if(arg instanceof Error){return arg.message;}else{try{return JSON.stringify(arg);}catch(ignored){return null;}}}).filter(arg=>arg).join(' ');if(level>=(customLogLevel!==null&&customLogLevel!==void 0?customLogLevel:instance.logLevel)){logCallback({level:LogLevel[level].toLowerCase(),message,args,type:instance.name});}};}}}\n\n//# sourceURL=webpack://__ember_auto_import__/./node_modules/@firebase/logger/dist/esm/index.esm2017.js?");

/***/ }),

/***/ "./node_modules/firebase/app/dist/esm/index.esm.js":
/*!*********************************************************!*\
  !*** ./node_modules/firebase/app/dist/esm/index.esm.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"FirebaseError\": () => (/* reexport safe */ _firebase_app__WEBPACK_IMPORTED_MODULE_0__.FirebaseError),\n/* harmony export */   \"SDK_VERSION\": () => (/* reexport safe */ _firebase_app__WEBPACK_IMPORTED_MODULE_0__.SDK_VERSION),\n/* harmony export */   \"_DEFAULT_ENTRY_NAME\": () => (/* reexport safe */ _firebase_app__WEBPACK_IMPORTED_MODULE_0__._DEFAULT_ENTRY_NAME),\n/* harmony export */   \"_addComponent\": () => (/* reexport safe */ _firebase_app__WEBPACK_IMPORTED_MODULE_0__._addComponent),\n/* harmony export */   \"_addOrOverwriteComponent\": () => (/* reexport safe */ _firebase_app__WEBPACK_IMPORTED_MODULE_0__._addOrOverwriteComponent),\n/* harmony export */   \"_apps\": () => (/* reexport safe */ _firebase_app__WEBPACK_IMPORTED_MODULE_0__._apps),\n/* harmony export */   \"_clearComponents\": () => (/* reexport safe */ _firebase_app__WEBPACK_IMPORTED_MODULE_0__._clearComponents),\n/* harmony export */   \"_components\": () => (/* reexport safe */ _firebase_app__WEBPACK_IMPORTED_MODULE_0__._components),\n/* harmony export */   \"_getProvider\": () => (/* reexport safe */ _firebase_app__WEBPACK_IMPORTED_MODULE_0__._getProvider),\n/* harmony export */   \"_registerComponent\": () => (/* reexport safe */ _firebase_app__WEBPACK_IMPORTED_MODULE_0__._registerComponent),\n/* harmony export */   \"_removeServiceInstance\": () => (/* reexport safe */ _firebase_app__WEBPACK_IMPORTED_MODULE_0__._removeServiceInstance),\n/* harmony export */   \"deleteApp\": () => (/* reexport safe */ _firebase_app__WEBPACK_IMPORTED_MODULE_0__.deleteApp),\n/* harmony export */   \"getApp\": () => (/* reexport safe */ _firebase_app__WEBPACK_IMPORTED_MODULE_0__.getApp),\n/* harmony export */   \"getApps\": () => (/* reexport safe */ _firebase_app__WEBPACK_IMPORTED_MODULE_0__.getApps),\n/* harmony export */   \"initializeApp\": () => (/* reexport safe */ _firebase_app__WEBPACK_IMPORTED_MODULE_0__.initializeApp),\n/* harmony export */   \"onLog\": () => (/* reexport safe */ _firebase_app__WEBPACK_IMPORTED_MODULE_0__.onLog),\n/* harmony export */   \"registerVersion\": () => (/* reexport safe */ _firebase_app__WEBPACK_IMPORTED_MODULE_0__.registerVersion),\n/* harmony export */   \"setLogLevel\": () => (/* reexport safe */ _firebase_app__WEBPACK_IMPORTED_MODULE_0__.setLogLevel)\n/* harmony export */ });\n/* harmony import */ var _firebase_app__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @firebase/app */ \"./node_modules/@firebase/app/dist/esm/index.esm2017.js\");\nvar name=\"firebase\";var version=\"9.15.0\";/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */(0,_firebase_app__WEBPACK_IMPORTED_MODULE_0__.registerVersion)(name,version,'app');\n\n//# sourceURL=webpack://__ember_auto_import__/./node_modules/firebase/app/dist/esm/index.esm.js?");

/***/ }),

/***/ "./node_modules/firebase/storage/dist/esm/index.esm.js":
/*!*************************************************************!*\
  !*** ./node_modules/firebase/storage/dist/esm/index.esm.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"StringFormat\": () => (/* reexport safe */ _firebase_storage__WEBPACK_IMPORTED_MODULE_0__.StringFormat),\n/* harmony export */   \"_FbsBlob\": () => (/* reexport safe */ _firebase_storage__WEBPACK_IMPORTED_MODULE_0__._FbsBlob),\n/* harmony export */   \"_Location\": () => (/* reexport safe */ _firebase_storage__WEBPACK_IMPORTED_MODULE_0__._Location),\n/* harmony export */   \"_TaskEvent\": () => (/* reexport safe */ _firebase_storage__WEBPACK_IMPORTED_MODULE_0__._TaskEvent),\n/* harmony export */   \"_TaskState\": () => (/* reexport safe */ _firebase_storage__WEBPACK_IMPORTED_MODULE_0__._TaskState),\n/* harmony export */   \"_UploadTask\": () => (/* reexport safe */ _firebase_storage__WEBPACK_IMPORTED_MODULE_0__._UploadTask),\n/* harmony export */   \"_dataFromString\": () => (/* reexport safe */ _firebase_storage__WEBPACK_IMPORTED_MODULE_0__._dataFromString),\n/* harmony export */   \"_getChild\": () => (/* reexport safe */ _firebase_storage__WEBPACK_IMPORTED_MODULE_0__._getChild),\n/* harmony export */   \"_invalidArgument\": () => (/* reexport safe */ _firebase_storage__WEBPACK_IMPORTED_MODULE_0__._invalidArgument),\n/* harmony export */   \"_invalidRootOperation\": () => (/* reexport safe */ _firebase_storage__WEBPACK_IMPORTED_MODULE_0__._invalidRootOperation),\n/* harmony export */   \"connectStorageEmulator\": () => (/* reexport safe */ _firebase_storage__WEBPACK_IMPORTED_MODULE_0__.connectStorageEmulator),\n/* harmony export */   \"deleteObject\": () => (/* reexport safe */ _firebase_storage__WEBPACK_IMPORTED_MODULE_0__.deleteObject),\n/* harmony export */   \"getBlob\": () => (/* reexport safe */ _firebase_storage__WEBPACK_IMPORTED_MODULE_0__.getBlob),\n/* harmony export */   \"getBytes\": () => (/* reexport safe */ _firebase_storage__WEBPACK_IMPORTED_MODULE_0__.getBytes),\n/* harmony export */   \"getDownloadURL\": () => (/* reexport safe */ _firebase_storage__WEBPACK_IMPORTED_MODULE_0__.getDownloadURL),\n/* harmony export */   \"getMetadata\": () => (/* reexport safe */ _firebase_storage__WEBPACK_IMPORTED_MODULE_0__.getMetadata),\n/* harmony export */   \"getStorage\": () => (/* reexport safe */ _firebase_storage__WEBPACK_IMPORTED_MODULE_0__.getStorage),\n/* harmony export */   \"getStream\": () => (/* reexport safe */ _firebase_storage__WEBPACK_IMPORTED_MODULE_0__.getStream),\n/* harmony export */   \"list\": () => (/* reexport safe */ _firebase_storage__WEBPACK_IMPORTED_MODULE_0__.list),\n/* harmony export */   \"listAll\": () => (/* reexport safe */ _firebase_storage__WEBPACK_IMPORTED_MODULE_0__.listAll),\n/* harmony export */   \"ref\": () => (/* reexport safe */ _firebase_storage__WEBPACK_IMPORTED_MODULE_0__.ref),\n/* harmony export */   \"updateMetadata\": () => (/* reexport safe */ _firebase_storage__WEBPACK_IMPORTED_MODULE_0__.updateMetadata),\n/* harmony export */   \"uploadBytes\": () => (/* reexport safe */ _firebase_storage__WEBPACK_IMPORTED_MODULE_0__.uploadBytes),\n/* harmony export */   \"uploadBytesResumable\": () => (/* reexport safe */ _firebase_storage__WEBPACK_IMPORTED_MODULE_0__.uploadBytesResumable),\n/* harmony export */   \"uploadString\": () => (/* reexport safe */ _firebase_storage__WEBPACK_IMPORTED_MODULE_0__.uploadString)\n/* harmony export */ });\n/* harmony import */ var _firebase_storage__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @firebase/storage */ \"./node_modules/@firebase/storage/dist/index.esm2017.js\");\n\n\n//# sourceURL=webpack://__ember_auto_import__/./node_modules/firebase/storage/dist/esm/index.esm.js?");

/***/ }),

/***/ "./node_modules/idb/build/index.js":
/*!*****************************************!*\
  !*** ./node_modules/idb/build/index.js ***!
  \*****************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"unwrap\": () => (/* reexport safe */ _wrap_idb_value_js__WEBPACK_IMPORTED_MODULE_0__.u),\n/* harmony export */   \"wrap\": () => (/* reexport safe */ _wrap_idb_value_js__WEBPACK_IMPORTED_MODULE_0__.w),\n/* harmony export */   \"deleteDB\": () => (/* binding */ deleteDB),\n/* harmony export */   \"openDB\": () => (/* binding */ openDB)\n/* harmony export */ });\n/* harmony import */ var _wrap_idb_value_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./wrap-idb-value.js */ \"./node_modules/idb/build/wrap-idb-value.js\");\n/**\n * Open a database.\n *\n * @param name Name of the database.\n * @param version Schema version.\n * @param callbacks Additional callbacks.\n */function openDB(name,version){let{blocked,upgrade,blocking,terminated}=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};const request=indexedDB.open(name,version);const openPromise=(0,_wrap_idb_value_js__WEBPACK_IMPORTED_MODULE_0__.w)(request);if(upgrade){request.addEventListener('upgradeneeded',event=>{upgrade((0,_wrap_idb_value_js__WEBPACK_IMPORTED_MODULE_0__.w)(request.result),event.oldVersion,event.newVersion,(0,_wrap_idb_value_js__WEBPACK_IMPORTED_MODULE_0__.w)(request.transaction));});}if(blocked)request.addEventListener('blocked',()=>blocked());openPromise.then(db=>{if(terminated)db.addEventListener('close',()=>terminated());if(blocking)db.addEventListener('versionchange',()=>blocking());}).catch(()=>{});return openPromise;}/**\n * Delete a database.\n *\n * @param name Name of the database.\n */function deleteDB(name){let{blocked}=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};const request=indexedDB.deleteDatabase(name);if(blocked)request.addEventListener('blocked',()=>blocked());return (0,_wrap_idb_value_js__WEBPACK_IMPORTED_MODULE_0__.w)(request).then(()=>undefined);}const readMethods=['get','getKey','getAll','getAllKeys','count'];const writeMethods=['put','add','delete','clear'];const cachedMethods=new Map();function getMethod(target,prop){if(!(target instanceof IDBDatabase&&!(prop in target)&&typeof prop==='string')){return;}if(cachedMethods.get(prop))return cachedMethods.get(prop);const targetFuncName=prop.replace(/FromIndex$/,'');const useIndex=prop!==targetFuncName;const isWrite=writeMethods.includes(targetFuncName);if(// Bail if the target doesn't exist on the target. Eg, getAll isn't in Edge.\n!(targetFuncName in(useIndex?IDBIndex:IDBObjectStore).prototype)||!(isWrite||readMethods.includes(targetFuncName))){return;}const method=async function(storeName){// isWrite ? 'readwrite' : undefined gzipps better, but fails in Edge :(\nconst tx=this.transaction(storeName,isWrite?'readwrite':'readonly');let target=tx.store;for(var _len=arguments.length,args=new Array(_len>1?_len-1:0),_key=1;_key<_len;_key++){args[_key-1]=arguments[_key];}if(useIndex)target=target.index(args.shift());// Must reject if op rejects.\n// If it's a write operation, must reject if tx.done rejects.\n// Must reject with op rejection first.\n// Must resolve with op value.\n// Must handle both promises (no unhandled rejections)\nreturn(await Promise.all([target[targetFuncName](...args),isWrite&&tx.done]))[0];};cachedMethods.set(prop,method);return method;}(0,_wrap_idb_value_js__WEBPACK_IMPORTED_MODULE_0__.r)(oldTraps=>({...oldTraps,get:(target,prop,receiver)=>getMethod(target,prop)||oldTraps.get(target,prop,receiver),has:(target,prop)=>!!getMethod(target,prop)||oldTraps.has(target,prop)}));\n\n//# sourceURL=webpack://__ember_auto_import__/./node_modules/idb/build/index.js?");

/***/ }),

/***/ "./node_modules/idb/build/wrap-idb-value.js":
/*!**************************************************!*\
  !*** ./node_modules/idb/build/wrap-idb-value.js ***!
  \**************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"a\": () => (/* binding */ reverseTransformCache),\n/* harmony export */   \"i\": () => (/* binding */ instanceOfAny),\n/* harmony export */   \"r\": () => (/* binding */ replaceTraps),\n/* harmony export */   \"u\": () => (/* binding */ unwrap),\n/* harmony export */   \"w\": () => (/* binding */ wrap)\n/* harmony export */ });\nconst instanceOfAny=(object,constructors)=>constructors.some(c=>object instanceof c);let idbProxyableTypes;let cursorAdvanceMethods;// This is a function to prevent it throwing up in node environments.\nfunction getIdbProxyableTypes(){return idbProxyableTypes||(idbProxyableTypes=[IDBDatabase,IDBObjectStore,IDBIndex,IDBCursor,IDBTransaction]);}// This is a function to prevent it throwing up in node environments.\nfunction getCursorAdvanceMethods(){return cursorAdvanceMethods||(cursorAdvanceMethods=[IDBCursor.prototype.advance,IDBCursor.prototype.continue,IDBCursor.prototype.continuePrimaryKey]);}const cursorRequestMap=new WeakMap();const transactionDoneMap=new WeakMap();const transactionStoreNamesMap=new WeakMap();const transformCache=new WeakMap();const reverseTransformCache=new WeakMap();function promisifyRequest(request){const promise=new Promise((resolve,reject)=>{const unlisten=()=>{request.removeEventListener('success',success);request.removeEventListener('error',error);};const success=()=>{resolve(wrap(request.result));unlisten();};const error=()=>{reject(request.error);unlisten();};request.addEventListener('success',success);request.addEventListener('error',error);});promise.then(value=>{// Since cursoring reuses the IDBRequest (*sigh*), we cache it for later retrieval\n// (see wrapFunction).\nif(value instanceof IDBCursor){cursorRequestMap.set(value,request);}// Catching to avoid \"Uncaught Promise exceptions\"\n}).catch(()=>{});// This mapping exists in reverseTransformCache but doesn't doesn't exist in transformCache. This\n// is because we create many promises from a single IDBRequest.\nreverseTransformCache.set(promise,request);return promise;}function cacheDonePromiseForTransaction(tx){// Early bail if we've already created a done promise for this transaction.\nif(transactionDoneMap.has(tx))return;const done=new Promise((resolve,reject)=>{const unlisten=()=>{tx.removeEventListener('complete',complete);tx.removeEventListener('error',error);tx.removeEventListener('abort',error);};const complete=()=>{resolve();unlisten();};const error=()=>{reject(tx.error||new DOMException('AbortError','AbortError'));unlisten();};tx.addEventListener('complete',complete);tx.addEventListener('error',error);tx.addEventListener('abort',error);});// Cache it for later retrieval.\ntransactionDoneMap.set(tx,done);}let idbProxyTraps={get(target,prop,receiver){if(target instanceof IDBTransaction){// Special handling for transaction.done.\nif(prop==='done')return transactionDoneMap.get(target);// Polyfill for objectStoreNames because of Edge.\nif(prop==='objectStoreNames'){return target.objectStoreNames||transactionStoreNamesMap.get(target);}// Make tx.store return the only store in the transaction, or undefined if there are many.\nif(prop==='store'){return receiver.objectStoreNames[1]?undefined:receiver.objectStore(receiver.objectStoreNames[0]);}}// Else transform whatever we get back.\nreturn wrap(target[prop]);},set(target,prop,value){target[prop]=value;return true;},has(target,prop){if(target instanceof IDBTransaction&&(prop==='done'||prop==='store')){return true;}return prop in target;}};function replaceTraps(callback){idbProxyTraps=callback(idbProxyTraps);}function wrapFunction(func){// Due to expected object equality (which is enforced by the caching in `wrap`), we\n// only create one new func per func.\n// Edge doesn't support objectStoreNames (booo), so we polyfill it here.\nif(func===IDBDatabase.prototype.transaction&&!('objectStoreNames'in IDBTransaction.prototype)){return function(storeNames){for(var _len=arguments.length,args=new Array(_len>1?_len-1:0),_key=1;_key<_len;_key++){args[_key-1]=arguments[_key];}const tx=func.call(unwrap(this),storeNames,...args);transactionStoreNamesMap.set(tx,storeNames.sort?storeNames.sort():[storeNames]);return wrap(tx);};}// Cursor methods are special, as the behaviour is a little more different to standard IDB. In\n// IDB, you advance the cursor and wait for a new 'success' on the IDBRequest that gave you the\n// cursor. It's kinda like a promise that can resolve with many values. That doesn't make sense\n// with real promises, so each advance methods returns a new promise for the cursor object, or\n// undefined if the end of the cursor has been reached.\nif(getCursorAdvanceMethods().includes(func)){return function(){for(var _len2=arguments.length,args=new Array(_len2),_key2=0;_key2<_len2;_key2++){args[_key2]=arguments[_key2];}// Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n// the original object.\nfunc.apply(unwrap(this),args);return wrap(cursorRequestMap.get(this));};}return function(){for(var _len3=arguments.length,args=new Array(_len3),_key3=0;_key3<_len3;_key3++){args[_key3]=arguments[_key3];}// Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n// the original object.\nreturn wrap(func.apply(unwrap(this),args));};}function transformCachableValue(value){if(typeof value==='function')return wrapFunction(value);// This doesn't return, it just creates a 'done' promise for the transaction,\n// which is later returned for transaction.done (see idbObjectHandler).\nif(value instanceof IDBTransaction)cacheDonePromiseForTransaction(value);if(instanceOfAny(value,getIdbProxyableTypes()))return new Proxy(value,idbProxyTraps);// Return the same value back if we're not going to transform it.\nreturn value;}function wrap(value){// We sometimes generate multiple promises from a single IDBRequest (eg when cursoring), because\n// IDB is weird and a single IDBRequest can yield many responses, so these can't be cached.\nif(value instanceof IDBRequest)return promisifyRequest(value);// If we've already transformed this value before, reuse the transformed value.\n// This is faster, but it also provides object equality.\nif(transformCache.has(value))return transformCache.get(value);const newValue=transformCachableValue(value);// Not all types are transformed.\n// These may be primitive types, so they can't be WeakMap keys.\nif(newValue!==value){transformCache.set(value,newValue);reverseTransformCache.set(newValue,value);}return newValue;}const unwrap=value=>reverseTransformCache.get(value);\n\n//# sourceURL=webpack://__ember_auto_import__/./node_modules/idb/build/wrap-idb-value.js?");

/***/ })

}]);